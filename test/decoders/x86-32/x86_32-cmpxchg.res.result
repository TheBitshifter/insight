**** Decode instruction: cmpxchg %bh,%ch
[0x0,0] @{asm:=cmpxchg %bh,%ch}@ << (NOT (EQ %eax{0;8} %ecx{8;8}){0;1}){0;1} >> Skip --> (0x0,3); << (EQ %eax{0;8} %ecx{8;8}){0;1} >> Skip --> (0x0,1);
[0x0,1] %zf{0;1} := 0x1{0;1} --> (0x0,2);
[0x0,2] %ecx{8;8} := %ebx{8;8} --> (0x3,0);
[0x0,3] %zf{0;1} := 0x0{0;1} --> (0x0,4);
[0x0,4] %eax{0;8} := %ecx{8;8} --> (0x3,0);
[0x3,0]

**** Decode instruction: cmpxchg %bh,0x1232
[0x3,0] @{asm:=cmpxchg %bh,0x1232}@ << (NOT (EQ %eax{0;8} [0x1232{0;32}]{0;8}){0;1}){0;1} >> Skip --> (0x3,3); << (EQ %eax{0;8} [0x1232{0;32}]{0;8}){0;1} >> Skip --> (0x3,1);
[0x3,1] %zf{0;1} := 0x1{0;1} --> (0x3,2);
[0x3,2] [0x1232{0;32}]{0;8} := %ebx{8;8} --> (0xa,0);
[0x3,3] %zf{0;1} := 0x0{0;1} --> (0x3,4);
[0x3,4] %eax{0;8} := [0x1232{0;32}]{0;8} --> (0xa,0);
[0xa,0]

**** Decode instruction: cmpxchg %bx,%cx
[0xa,0] @{asm:=cmpxchg %bx,%cx}@ << (NOT (EQ %eax{0;16} %ecx{0;16}){0;1}){0;1} >> Skip --> (0xa,3); << (EQ %eax{0;16} %ecx{0;16}){0;1} >> Skip --> (0xa,1);
[0xa,1] %zf{0;1} := 0x1{0;1} --> (0xa,2);
[0xa,2] %ecx{0;16} := %ebx{0;16} --> (0xe,0);
[0xa,3] %zf{0;1} := 0x0{0;1} --> (0xa,4);
[0xa,4] %eax{0;16} := %ecx{0;16} --> (0xe,0);
[0xe,0]

**** Decode instruction: cmpxchg %bx,0x1232
[0xe,0] @{asm:=cmpxchg %bx,0x1232}@ << (NOT (EQ %eax{0;16} [0x1232{0;32}]{0;16}){0;1}){0;1} >> Skip --> (0xe,3); << (EQ %eax{0;16} [0x1232{0;32}]{0;16}){0;1} >> Skip --> (0xe,1);
[0xe,1] %zf{0;1} := 0x1{0;1} --> (0xe,2);
[0xe,2] [0x1232{0;32}]{0;16} := %ebx{0;16} --> (0x16,0);
[0xe,3] %zf{0;1} := 0x0{0;1} --> (0xe,4);
[0xe,4] %eax{0;16} := [0x1232{0;32}]{0;16} --> (0x16,0);
[0x16,0]

**** Decode instruction: cmpxchg %ebx,%ecx
[0x16,0] @{asm:=cmpxchg %ebx,%ecx}@ << (NOT (EQ %eax{0;32} %ecx{0;32}){0;1}){0;1} >> Skip --> (0x16,3); << (EQ %eax{0;32} %ecx{0;32}){0;1} >> Skip --> (0x16,1);
[0x16,1] %zf{0;1} := 0x1{0;1} --> (0x16,2);
[0x16,2] %ecx{0;32} := %ebx{0;32} --> (0x19,0);
[0x16,3] %zf{0;1} := 0x0{0;1} --> (0x16,4);
[0x16,4] %eax{0;32} := %ecx{0;32} --> (0x19,0);
[0x19,0]

**** Decode instruction: cmpxchg %ebx,0x1232
[0x19,0] @{asm:=cmpxchg %ebx,0x1232}@ << (NOT (EQ %eax{0;32} [0x1232{0;32}]{0;32}){0;1}){0;1} >> Skip --> (0x19,3); << (EQ %eax{0;32} [0x1232{0;32}]{0;32}){0;1} >> Skip --> (0x19,1);
[0x19,1] %zf{0;1} := 0x1{0;1} --> (0x19,2);
[0x19,2] [0x1232{0;32}]{0;32} := %ebx{0;32} --> (0x20,0);
[0x19,3] %zf{0;1} := 0x0{0;1} --> (0x19,4);
[0x19,4] %eax{0;32} := [0x1232{0;32}]{0;32} --> (0x20,0);
[0x20,0]

