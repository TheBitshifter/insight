**** Decode instruction: aas    
[0x0,0] @{asm:=aas    }@ << (NOT (OR (NOT (LEQ_U (AND %eax{0;8} 0xf{0;8}){0;8} 0x9{0;8}){0;1}){0;1} (EQ %af{0;1} 0x1{0;1}){0;1}){0;1}){0;1} >> Skip --> (0x0,6); << (OR (NOT (LEQ_U (AND %eax{0;8} 0xf{0;8}){0;8} 0x9{0;8}){0;1}){0;1} (EQ %af{0;1} 0x1{0;1}){0;1}){0;1} >> Skip --> (0x0,1);
[0x0,1] %eax{0;8} := (SUB %eax{0;8} 0x6{0;8}){0;8} --> (0x0,2);
[0x0,2] %eax{8;8} := (SUB %eax{8;8} 0x1{0;8}){0;8} --> (0x0,3);
[0x0,3] %af{0;1} := 0x1{0;1} --> (0x0,4);
[0x0,4] %cf{0;1} := 0x1{0;1} --> (0x0,5);
[0x0,5] %eax{0;8} := (AND %eax{0;8} 0xf{0;8}){0;8} --> (0x1,0);
[0x0,6] %af{0;1} := 0x0{0;1} --> (0x0,7);
[0x0,7] %cf{0;1} := 0x0{0;1} --> (0x0,8);
[0x0,8] %eax{0;8} := (AND %eax{0;8} 0xf{0;8}){0;8} --> (0x1,0);
[0x1,0]

