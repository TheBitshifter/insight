**** Decode instruction: imul   %bh
[(0x0,0)] @{asm:=imul   %bh}@ %eax{0;16} := (MUL_S %eax{0;8} %ebx{8;8}){0;16}
[(0x0,1)] StaticArrow (0x0,1) Skip << (EQ %eax{8;8} 0x0{0;8}){0;1} >> --> (0x0,2)StaticArrow (0x0,1) Skip << (NOT (EQ %eax{8;8} 0x0{0;8}){0;1}){0;1} >> --> (0x0,4)
[(0x0,2)] %cf{0;1} := 0x0{0;1}
[(0x0,3)] StaticArrow (0x0,3) %of{0;1} := 0x0{0;1}  --> (0x2,0)
[(0x0,4)] %cf{0;1} := 0x1{0;1}
[(0x0,5)] StaticArrow (0x0,5) %of{0;1} := 0x1{0;1}  --> (0x2,0)
[(0x2,0)] 

**** Decode instruction: imulb  0x12345678
[(0x2,0)] @{asm:=imulb  0x12345678}@ %eax{0;16} := (MUL_S %eax{0;8} [0x12345678{0;32}]{0;8}){0;16}
[(0x2,1)] StaticArrow (0x2,1) Skip << (EQ %eax{8;8} 0x0{0;8}){0;1} >> --> (0x2,2)StaticArrow (0x2,1) Skip << (NOT (EQ %eax{8;8} 0x0{0;8}){0;1}){0;1} >> --> (0x2,4)
[(0x2,2)] %cf{0;1} := 0x0{0;1}
[(0x2,3)] StaticArrow (0x2,3) %of{0;1} := 0x0{0;1}  --> (0x8,0)
[(0x2,4)] %cf{0;1} := 0x1{0;1}
[(0x2,5)] StaticArrow (0x2,5) %of{0;1} := 0x1{0;1}  --> (0x8,0)
[(0x8,0)] 

**** Decode instruction: imul   %bx
[(0x8,0)] @{asm:=imul   %bx}@ %tmpr0_32{0;32} := (MUL_S %eax{0;16} %ebx{0;16}){0;32}
[(0x8,1)] %edx{0;16} := %tmpr0_32{16;16}
[(0x8,2)] %eax{0;16} := %tmpr0_32{0;16}
[(0x8,3)] StaticArrow (0x8,3) Skip << (EQ (EXTRACT (EXTEND_S %eax{0;16} 0x20{0;32}){0;32} 0x10{0;32} 0x10{0;32}){0;16} %edx{0;16}){0;1} >> --> (0x8,4)StaticArrow (0x8,3) Skip << (NOT (EQ (EXTRACT (EXTEND_S %eax{0;16} 0x20{0;32}){0;32} 0x10{0;32} 0x10{0;32}){0;16} %edx{0;16}){0;1}){0;1} >> --> (0x8,6)
[(0x8,4)] %cf{0;1} := 0x0{0;1}
[(0x8,5)] StaticArrow (0x8,5) %of{0;1} := 0x0{0;1}  --> (0xb,0)
[(0x8,6)] %cf{0;1} := 0x1{0;1}
[(0x8,7)] StaticArrow (0x8,7) %of{0;1} := 0x1{0;1}  --> (0xb,0)
[(0xb,0)] 

**** Decode instruction: imulw  0x12345678
[(0xb,0)] @{asm:=imulw  0x12345678}@ %tmpr0_32{0;32} := (MUL_S %eax{0;16} [0x12345678{0;32}]{0;16}){0;32}
[(0xb,1)] %edx{0;16} := %tmpr0_32{16;16}
[(0xb,2)] %eax{0;16} := %tmpr0_32{0;16}
[(0xb,3)] StaticArrow (0xb,3) Skip << (EQ (EXTRACT (EXTEND_S %eax{0;16} 0x20{0;32}){0;32} 0x10{0;32} 0x10{0;32}){0;16} %edx{0;16}){0;1} >> --> (0xb,4)StaticArrow (0xb,3) Skip << (NOT (EQ (EXTRACT (EXTEND_S %eax{0;16} 0x20{0;32}){0;32} 0x10{0;32} 0x10{0;32}){0;16} %edx{0;16}){0;1}){0;1} >> --> (0xb,6)
[(0xb,4)] %cf{0;1} := 0x0{0;1}
[(0xb,5)] StaticArrow (0xb,5) %of{0;1} := 0x0{0;1}  --> (0x12,0)
[(0xb,6)] %cf{0;1} := 0x1{0;1}
[(0xb,7)] StaticArrow (0xb,7) %of{0;1} := 0x1{0;1}  --> (0x12,0)
[(0x12,0)] 

**** Decode instruction: imul   %ebx
[(0x12,0)] @{asm:=imul   %ebx}@ %tmpr0_64{0;64} := (MUL_S %eax{0;32} %ebx{0;32}){0;64}
[(0x12,1)] %edx{0;32} := %tmpr0_64{32;32}
[(0x12,2)] %eax{0;32} := %tmpr0_64{0;32}
[(0x12,3)] StaticArrow (0x12,3) Skip << (EQ %edx{0;32} 0x0{0;32}){0;1} >> --> (0x12,4)StaticArrow (0x12,3) Skip << (NOT (EQ %edx{0;32} 0x0{0;32}){0;1}){0;1} >> --> (0x12,6)
[(0x12,4)] %cf{0;1} := 0x0{0;1}
[(0x12,5)] StaticArrow (0x12,5) %of{0;1} := 0x0{0;1}  --> (0x14,0)
[(0x12,6)] %cf{0;1} := 0x1{0;1}
[(0x12,7)] StaticArrow (0x12,7) %of{0;1} := 0x1{0;1}  --> (0x14,0)
[(0x14,0)] 

**** Decode instruction: imull  0x12345678
[(0x14,0)] @{asm:=imull  0x12345678}@ %tmpr0_64{0;64} := (MUL_S %eax{0;32} [0x12345678{0;32}]{0;32}){0;64}
[(0x14,1)] %edx{0;32} := %tmpr0_64{32;32}
[(0x14,2)] %eax{0;32} := %tmpr0_64{0;32}
[(0x14,3)] StaticArrow (0x14,3) Skip << (EQ %edx{0;32} 0x0{0;32}){0;1} >> --> (0x14,4)StaticArrow (0x14,3) Skip << (NOT (EQ %edx{0;32} 0x0{0;32}){0;1}){0;1} >> --> (0x14,6)
[(0x14,4)] %cf{0;1} := 0x0{0;1}
[(0x14,5)] StaticArrow (0x14,5) %of{0;1} := 0x0{0;1}  --> (0x1a,0)
[(0x14,6)] %cf{0;1} := 0x1{0;1}
[(0x14,7)] StaticArrow (0x14,7) %of{0;1} := 0x1{0;1}  --> (0x1a,0)
[(0x1a,0)] 

**** Decode instruction: imul   %bx,%cx
[(0x1a,0)] @{asm:=imul   %bx,%cx}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} %ebx{0;16}){0;32}
[(0x1a,1)] %ecx{0;16} := %tmpr0_32{0;16}
[(0x1a,2)] StaticArrow (0x1a,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x1a,3)StaticArrow (0x1a,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x1a,5)
[(0x1a,3)] %cf{0;1} := 0x1{0;1}
[(0x1a,4)] StaticArrow (0x1a,4) %of{0;1} := 0x1{0;1}  --> (0x1e,0)
[(0x1a,5)] %cf{0;1} := 0x0{0;1}
[(0x1a,6)] StaticArrow (0x1a,6) %of{0;1} := 0x0{0;1}  --> (0x1e,0)
[(0x1e,0)] 

**** Decode instruction: imul   0x12345678,%cx
[(0x1e,0)] @{asm:=imul   0x12345678,%cx}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} [0x12345678{0;32}]{0;16}){0;32}
[(0x1e,1)] %ecx{0;16} := %tmpr0_32{0;16}
[(0x1e,2)] StaticArrow (0x1e,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x1e,3)StaticArrow (0x1e,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x1e,5)
[(0x1e,3)] %cf{0;1} := 0x1{0;1}
[(0x1e,4)] StaticArrow (0x1e,4) %of{0;1} := 0x1{0;1}  --> (0x26,0)
[(0x1e,5)] %cf{0;1} := 0x0{0;1}
[(0x1e,6)] StaticArrow (0x1e,6) %of{0;1} := 0x0{0;1}  --> (0x26,0)
[(0x26,0)] 

**** Decode instruction: imul   %ebx,%ecx
[(0x26,0)] @{asm:=imul   %ebx,%ecx}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} %ebx{0;32}){0;64}
[(0x26,1)] %ecx{0;32} := %tmpr0_64{0;32}
[(0x26,2)] StaticArrow (0x26,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0x26,3)StaticArrow (0x26,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0x26,5)
[(0x26,3)] %cf{0;1} := 0x1{0;1}
[(0x26,4)] StaticArrow (0x26,4) %of{0;1} := 0x1{0;1}  --> (0x29,0)
[(0x26,5)] %cf{0;1} := 0x0{0;1}
[(0x26,6)] StaticArrow (0x26,6) %of{0;1} := 0x0{0;1}  --> (0x29,0)
[(0x29,0)] 

**** Decode instruction: imul   0x12345678,%ecx
[(0x29,0)] @{asm:=imul   0x12345678,%ecx}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} [0x12345678{0;32}]{0;32}){0;64}
[(0x29,1)] %ecx{0;32} := %tmpr0_64{0;32}
[(0x29,2)] StaticArrow (0x29,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0x29,3)StaticArrow (0x29,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0x29,5)
[(0x29,3)] %cf{0;1} := 0x1{0;1}
[(0x29,4)] StaticArrow (0x29,4) %of{0;1} := 0x1{0;1}  --> (0x30,0)
[(0x29,5)] %cf{0;1} := 0x0{0;1}
[(0x29,6)] StaticArrow (0x29,6) %of{0;1} := 0x0{0;1}  --> (0x30,0)
[(0x30,0)] 

**** Decode instruction: imul   $0x10,%bx,%cx
[(0x30,0)] @{asm:=imul   $0x10,%bx,%cx}@ %tmpr0_32{0;32} := (MUL_S %ebx{0;16} 0x10{0;16}){0;32}
[(0x30,1)] %ecx{0;16} := %tmpr0_32{0;16}
[(0x30,2)] StaticArrow (0x30,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x30,3)StaticArrow (0x30,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x30,5)
[(0x30,3)] %cf{0;1} := 0x1{0;1}
[(0x30,4)] StaticArrow (0x30,4) %of{0;1} := 0x1{0;1}  --> (0x34,0)
[(0x30,5)] %cf{0;1} := 0x0{0;1}
[(0x30,6)] StaticArrow (0x30,6) %of{0;1} := 0x0{0;1}  --> (0x34,0)
[(0x34,0)] 

**** Decode instruction: imul   $0x10,0x12345678,%cx
[(0x34,0)] @{asm:=imul   $0x10,0x12345678,%cx}@ %tmpr0_32{0;32} := (MUL_S [0x12345678{0;32}]{0;16} 0x10{0;16}){0;32}
[(0x34,1)] %ecx{0;16} := %tmpr0_32{0;16}
[(0x34,2)] StaticArrow (0x34,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x34,3)StaticArrow (0x34,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x34,5)
[(0x34,3)] %cf{0;1} := 0x1{0;1}
[(0x34,4)] StaticArrow (0x34,4) %of{0;1} := 0x1{0;1}  --> (0x3c,0)
[(0x34,5)] %cf{0;1} := 0x0{0;1}
[(0x34,6)] StaticArrow (0x34,6) %of{0;1} := 0x0{0;1}  --> (0x3c,0)
[(0x3c,0)] 

**** Decode instruction: imul   $0x10,%ebx,%ecx
[(0x3c,0)] @{asm:=imul   $0x10,%ebx,%ecx}@ %tmpr0_64{0;64} := (MUL_S %ebx{0;32} 0x10{0;32}){0;64}
[(0x3c,1)] %ecx{0;32} := %tmpr0_64{0;32}
[(0x3c,2)] StaticArrow (0x3c,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0x3c,3)StaticArrow (0x3c,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0x3c,5)
[(0x3c,3)] %cf{0;1} := 0x1{0;1}
[(0x3c,4)] StaticArrow (0x3c,4) %of{0;1} := 0x1{0;1}  --> (0x3f,0)
[(0x3c,5)] %cf{0;1} := 0x0{0;1}
[(0x3c,6)] StaticArrow (0x3c,6) %of{0;1} := 0x0{0;1}  --> (0x3f,0)
[(0x3f,0)] 

**** Decode instruction: imul   $0x10,0x12345678,%ecx
[(0x3f,0)] @{asm:=imul   $0x10,0x12345678,%ecx}@ %tmpr0_64{0;64} := (MUL_S [0x12345678{0;32}]{0;32} 0x10{0;32}){0;64}
[(0x3f,1)] %ecx{0;32} := %tmpr0_64{0;32}
[(0x3f,2)] StaticArrow (0x3f,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0x3f,3)StaticArrow (0x3f,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0x3f,5)
[(0x3f,3)] %cf{0;1} := 0x1{0;1}
[(0x3f,4)] StaticArrow (0x3f,4) %of{0;1} := 0x1{0;1}  --> (0x46,0)
[(0x3f,5)] %cf{0;1} := 0x0{0;1}
[(0x3f,6)] StaticArrow (0x3f,6) %of{0;1} := 0x0{0;1}  --> (0x46,0)
[(0x46,0)] 

**** Decode instruction: imul   $0x1010,%bx,%cx
[(0x46,0)] @{asm:=imul   $0x1010,%bx,%cx}@ %tmpr0_32{0;32} := (MUL_S %ebx{0;16} 0x1010{0;16}){0;32}
[(0x46,1)] %ecx{0;16} := %tmpr0_32{0;16}
[(0x46,2)] StaticArrow (0x46,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x46,3)StaticArrow (0x46,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x46,5)
[(0x46,3)] %cf{0;1} := 0x1{0;1}
[(0x46,4)] StaticArrow (0x46,4) %of{0;1} := 0x1{0;1}  --> (0x4b,0)
[(0x46,5)] %cf{0;1} := 0x0{0;1}
[(0x46,6)] StaticArrow (0x46,6) %of{0;1} := 0x0{0;1}  --> (0x4b,0)
[(0x4b,0)] 

**** Decode instruction: imul   $0x1010,0x12345678,%cx
[(0x4b,0)] @{asm:=imul   $0x1010,0x12345678,%cx}@ %tmpr0_32{0;32} := (MUL_S [0x12345678{0;32}]{0;16} 0x1010{0;16}){0;32}
[(0x4b,1)] %ecx{0;16} := %tmpr0_32{0;16}
[(0x4b,2)] StaticArrow (0x4b,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x4b,3)StaticArrow (0x4b,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x4b,5)
[(0x4b,3)] %cf{0;1} := 0x1{0;1}
[(0x4b,4)] StaticArrow (0x4b,4) %of{0;1} := 0x1{0;1}  --> (0x54,0)
[(0x4b,5)] %cf{0;1} := 0x0{0;1}
[(0x4b,6)] StaticArrow (0x4b,6) %of{0;1} := 0x0{0;1}  --> (0x54,0)
[(0x54,0)] 

**** Decode instruction: imul   $0x10101010,%ebx,%ecx
[(0x54,0)] @{asm:=imul   $0x10101010,%ebx,%ecx}@ %tmpr0_64{0;64} := (MUL_S %ebx{0;32} 0x10101010{0;32}){0;64}
[(0x54,1)] %ecx{0;32} := %tmpr0_64{0;32}
[(0x54,2)] StaticArrow (0x54,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0x54,3)StaticArrow (0x54,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0x54,5)
[(0x54,3)] %cf{0;1} := 0x1{0;1}
[(0x54,4)] StaticArrow (0x54,4) %of{0;1} := 0x1{0;1}  --> (0x5a,0)
[(0x54,5)] %cf{0;1} := 0x0{0;1}
[(0x54,6)] StaticArrow (0x54,6) %of{0;1} := 0x0{0;1}  --> (0x5a,0)
[(0x5a,0)] 

**** Decode instruction: imul   $0x10101010,0x12345678,%ecx
[(0x5a,0)] @{asm:=imul   $0x10101010,0x12345678,%ecx}@ %tmpr0_64{0;64} := (MUL_S [0x12345678{0;32}]{0;32} 0x10101010{0;32}){0;64}
[(0x5a,1)] %ecx{0;32} := %tmpr0_64{0;32}
[(0x5a,2)] StaticArrow (0x5a,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0x5a,3)StaticArrow (0x5a,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0x5a,5)
[(0x5a,3)] %cf{0;1} := 0x1{0;1}
[(0x5a,4)] StaticArrow (0x5a,4) %of{0;1} := 0x1{0;1}  --> (0x64,0)
[(0x5a,5)] %cf{0;1} := 0x0{0;1}
[(0x5a,6)] StaticArrow (0x5a,6) %of{0;1} := 0x0{0;1}  --> (0x64,0)
[(0x64,0)] 

