**** Decode instruction: ret    
[0x0,0] @{asm:=ret    }@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x0,1);
[0x0,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x0,2);
[0x0,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};

**** Decode instruction: ret    
[0x1,0] @{asm:=ret    }@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x1,1);
[0x1,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x1,2);
[0x1,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};

**** Decode instruction: ret    $0x14
[0x2,0] @{asm:=ret    $0x14}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x2,1);
[0x2,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x2,2);
[0x2,2] %esp{0;32} := (ADD %esp{0;32} 0x14{0;32}){0;32} --> (0x2,3);
[0x2,3] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};

**** Decode instruction: ret    $0x14
[0x5,0] @{asm:=ret    $0x14}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x5,1);
[0x5,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x5,2);
[0x5,2] %esp{0;32} := (ADD %esp{0;32} 0x14{0;32}){0;32} --> (0x5,3);
[0x5,3] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};

