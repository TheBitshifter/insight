**** Decode instruction: seta   0x1111
[0x0,0] @{asm:=seta   0x1111}@ << (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x0,1); << (NOT (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1}){0;1} >> Skip --> (0x0,2);
[0x0,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x7,0);
[0x0,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x7,0);
[0x7,0]

**** Decode instruction: setae  0x1111
[0x7,0] @{asm:=setae  0x1111}@ << (NOT %cf{0;1}){0;1} >> Skip --> (0x7,1); << (NOT (NOT %cf{0;1}){0;1}){0;1} >> Skip --> (0x7,2);
[0x7,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0xe,0);
[0x7,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0xe,0);
[0xe,0]

**** Decode instruction: setb   0x1111
[0xe,0] @{asm:=setb   0x1111}@ << %cf{0;1} >> Skip --> (0xe,1); << (NOT %cf{0;1}){0;1} >> Skip --> (0xe,2);
[0xe,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x15,0);
[0xe,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x15,0);
[0x15,0]

**** Decode instruction: setbe  0x1111
[0x15,0] @{asm:=setbe  0x1111}@ << (OR %cf{0;1} %zf{0;1}){0;1} >> Skip --> (0x15,1); << (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x15,2);
[0x15,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x1c,0);
[0x15,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x1c,0);
[0x1c,0]

**** Decode instruction: setb   0x1111
[0x1c,0] @{asm:=setb   0x1111}@ << %cf{0;1} >> Skip --> (0x1c,1); << (NOT %cf{0;1}){0;1} >> Skip --> (0x1c,2);
[0x1c,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x23,0);
[0x1c,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x23,0);
[0x23,0]

**** Decode instruction: sete   0x1111
[0x23,0] @{asm:=sete   0x1111}@ << %zf{0;1} >> Skip --> (0x23,1); << (NOT %zf{0;1}){0;1} >> Skip --> (0x23,2);
[0x23,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x2a,0);
[0x23,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x2a,0);
[0x2a,0]

**** Decode instruction: setg   0x1111
[0x2a,0] @{asm:=setg   0x1111}@ << (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x2a,1); << (NOT (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1}){0;1} >> Skip --> (0x2a,2);
[0x2a,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x31,0);
[0x2a,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x31,0);
[0x31,0]

**** Decode instruction: setge  0x1111
[0x31,0] @{asm:=setge  0x1111}@ << (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1} >> Skip --> (0x31,1); << (NOT (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1}){0;1} >> Skip --> (0x31,2);
[0x31,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x38,0);
[0x31,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x38,0);
[0x38,0]

**** Decode instruction: setl   0x1111
[0x38,0] @{asm:=setl   0x1111}@ << (XOR %sf{0;1} %of{0;1}){0;1} >> Skip --> (0x38,1); << (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1} >> Skip --> (0x38,2);
[0x38,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x3f,0);
[0x38,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x3f,0);
[0x3f,0]

**** Decode instruction: setle  0x1111
[0x3f,0] @{asm:=setle  0x1111}@ << (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1} >> Skip --> (0x3f,1); << (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x3f,2);
[0x3f,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x46,0);
[0x3f,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x46,0);
[0x46,0]

**** Decode instruction: setbe  0x1111
[0x46,0] @{asm:=setbe  0x1111}@ << (OR %cf{0;1} %zf{0;1}){0;1} >> Skip --> (0x46,1); << (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x46,2);
[0x46,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x4d,0);
[0x46,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x4d,0);
[0x4d,0]

**** Decode instruction: setb   0x1111
[0x4d,0] @{asm:=setb   0x1111}@ << %cf{0;1} >> Skip --> (0x4d,1); << (NOT %cf{0;1}){0;1} >> Skip --> (0x4d,2);
[0x4d,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x54,0);
[0x4d,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x54,0);
[0x54,0]

**** Decode instruction: setae  0x1111
[0x54,0] @{asm:=setae  0x1111}@ << (NOT %cf{0;1}){0;1} >> Skip --> (0x54,1); << (NOT (NOT %cf{0;1}){0;1}){0;1} >> Skip --> (0x54,2);
[0x54,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x5b,0);
[0x54,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x5b,0);
[0x5b,0]

**** Decode instruction: seta   0x1111
[0x5b,0] @{asm:=seta   0x1111}@ << (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x5b,1); << (NOT (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1}){0;1} >> Skip --> (0x5b,2);
[0x5b,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x62,0);
[0x5b,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x62,0);
[0x62,0]

**** Decode instruction: setae  0x1111
[0x62,0] @{asm:=setae  0x1111}@ << (NOT %cf{0;1}){0;1} >> Skip --> (0x62,1); << (NOT (NOT %cf{0;1}){0;1}){0;1} >> Skip --> (0x62,2);
[0x62,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x69,0);
[0x62,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x69,0);
[0x69,0]

**** Decode instruction: setne  0x1111
[0x69,0] @{asm:=setne  0x1111}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x69,1); << (NOT (NOT %zf{0;1}){0;1}){0;1} >> Skip --> (0x69,2);
[0x69,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x70,0);
[0x69,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x70,0);
[0x70,0]

**** Decode instruction: setle  0x1111
[0x70,0] @{asm:=setle  0x1111}@ << (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1} >> Skip --> (0x70,1); << (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x70,2);
[0x70,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x77,0);
[0x70,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x77,0);
[0x77,0]

**** Decode instruction: setl   0x1111
[0x77,0] @{asm:=setl   0x1111}@ << (XOR %sf{0;1} %of{0;1}){0;1} >> Skip --> (0x77,1); << (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1} >> Skip --> (0x77,2);
[0x77,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x7e,0);
[0x77,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x7e,0);
[0x7e,0]

**** Decode instruction: setge  0x1111
[0x7e,0] @{asm:=setge  0x1111}@ << (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1} >> Skip --> (0x7e,1); << (NOT (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1}){0;1} >> Skip --> (0x7e,2);
[0x7e,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x85,0);
[0x7e,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x85,0);
[0x85,0]

**** Decode instruction: setg   0x1111
[0x85,0] @{asm:=setg   0x1111}@ << (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x85,1); << (NOT (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1}){0;1} >> Skip --> (0x85,2);
[0x85,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x8c,0);
[0x85,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x8c,0);
[0x8c,0]

**** Decode instruction: setno  0x1111
[0x8c,0] @{asm:=setno  0x1111}@ << (NOT %of{0;1}){0;1} >> Skip --> (0x8c,1); << (NOT (NOT %of{0;1}){0;1}){0;1} >> Skip --> (0x8c,2);
[0x8c,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x93,0);
[0x8c,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x93,0);
[0x93,0]

**** Decode instruction: setnp  0x1111
[0x93,0] @{asm:=setnp  0x1111}@ << (NOT %pf{0;1}){0;1} >> Skip --> (0x93,1); << (NOT (NOT %pf{0;1}){0;1}){0;1} >> Skip --> (0x93,2);
[0x93,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0x9a,0);
[0x93,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0x9a,0);
[0x9a,0]

**** Decode instruction: setns  0x1111
[0x9a,0] @{asm:=setns  0x1111}@ << (NOT %sf{0;1}){0;1} >> Skip --> (0x9a,1); << (NOT (NOT %sf{0;1}){0;1}){0;1} >> Skip --> (0x9a,2);
[0x9a,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0xa1,0);
[0x9a,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0xa1,0);
[0xa1,0]

**** Decode instruction: setne  0x1111
[0xa1,0] @{asm:=setne  0x1111}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0xa1,1); << (NOT (NOT %zf{0;1}){0;1}){0;1} >> Skip --> (0xa1,2);
[0xa1,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0xa8,0);
[0xa1,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0xa8,0);
[0xa8,0]

**** Decode instruction: seto   0x1111
[0xa8,0] @{asm:=seto   0x1111}@ << %of{0;1} >> Skip --> (0xa8,1); << (NOT %of{0;1}){0;1} >> Skip --> (0xa8,2);
[0xa8,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0xaf,0);
[0xa8,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0xaf,0);
[0xaf,0]

**** Decode instruction: setp   0x1111
[0xaf,0] @{asm:=setp   0x1111}@ << %pf{0;1} >> Skip --> (0xaf,1); << (NOT %pf{0;1}){0;1} >> Skip --> (0xaf,2);
[0xaf,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0xb6,0);
[0xaf,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0xb6,0);
[0xb6,0]

**** Decode instruction: setp   0x1111
[0xb6,0] @{asm:=setp   0x1111}@ << %pf{0;1} >> Skip --> (0xb6,1); << (NOT %pf{0;1}){0;1} >> Skip --> (0xb6,2);
[0xb6,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0xbd,0);
[0xb6,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0xbd,0);
[0xbd,0]

**** Decode instruction: setnp  0x1111
[0xbd,0] @{asm:=setnp  0x1111}@ << (NOT %pf{0;1}){0;1} >> Skip --> (0xbd,1); << (NOT (NOT %pf{0;1}){0;1}){0;1} >> Skip --> (0xbd,2);
[0xbd,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0xc4,0);
[0xbd,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0xc4,0);
[0xc4,0]

**** Decode instruction: sets   0x1111
[0xc4,0] @{asm:=sets   0x1111}@ << %sf{0;1} >> Skip --> (0xc4,1); << (NOT %sf{0;1}){0;1} >> Skip --> (0xc4,2);
[0xc4,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0xcb,0);
[0xc4,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0xcb,0);
[0xcb,0]

**** Decode instruction: sete   0x1111
[0xcb,0] @{asm:=sete   0x1111}@ << %zf{0;1} >> Skip --> (0xcb,1); << (NOT %zf{0;1}){0;1} >> Skip --> (0xcb,2);
[0xcb,1] [0x1111{0;32}]{0;8} := 0x1{0;8} --> (0xd2,0);
[0xcb,2] [0x1111{0;32}]{0;8} := 0x0{0;8} --> (0xd2,0);
[0xd2,0]

**** Decode instruction: seta   %ch
[0xd2,0] @{asm:=seta   %ch}@ << (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0xd2,1); << (NOT (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1}){0;1} >> Skip --> (0xd2,2);
[0xd2,1] %ecx{8;8} := 0x1{0;8} --> (0xd5,0);
[0xd2,2] %ecx{8;8} := 0x0{0;8} --> (0xd5,0);
[0xd5,0]

**** Decode instruction: setae  %ch
[0xd5,0] @{asm:=setae  %ch}@ << (NOT %cf{0;1}){0;1} >> Skip --> (0xd5,1); << (NOT (NOT %cf{0;1}){0;1}){0;1} >> Skip --> (0xd5,2);
[0xd5,1] %ecx{8;8} := 0x1{0;8} --> (0xd8,0);
[0xd5,2] %ecx{8;8} := 0x0{0;8} --> (0xd8,0);
[0xd8,0]

**** Decode instruction: setb   %ch
[0xd8,0] @{asm:=setb   %ch}@ << %cf{0;1} >> Skip --> (0xd8,1); << (NOT %cf{0;1}){0;1} >> Skip --> (0xd8,2);
[0xd8,1] %ecx{8;8} := 0x1{0;8} --> (0xdb,0);
[0xd8,2] %ecx{8;8} := 0x0{0;8} --> (0xdb,0);
[0xdb,0]

**** Decode instruction: setbe  %ch
[0xdb,0] @{asm:=setbe  %ch}@ << (OR %cf{0;1} %zf{0;1}){0;1} >> Skip --> (0xdb,1); << (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0xdb,2);
[0xdb,1] %ecx{8;8} := 0x1{0;8} --> (0xde,0);
[0xdb,2] %ecx{8;8} := 0x0{0;8} --> (0xde,0);
[0xde,0]

**** Decode instruction: setb   %ch
[0xde,0] @{asm:=setb   %ch}@ << %cf{0;1} >> Skip --> (0xde,1); << (NOT %cf{0;1}){0;1} >> Skip --> (0xde,2);
[0xde,1] %ecx{8;8} := 0x1{0;8} --> (0xe1,0);
[0xde,2] %ecx{8;8} := 0x0{0;8} --> (0xe1,0);
[0xe1,0]

**** Decode instruction: sete   %ch
[0xe1,0] @{asm:=sete   %ch}@ << %zf{0;1} >> Skip --> (0xe1,1); << (NOT %zf{0;1}){0;1} >> Skip --> (0xe1,2);
[0xe1,1] %ecx{8;8} := 0x1{0;8} --> (0xe4,0);
[0xe1,2] %ecx{8;8} := 0x0{0;8} --> (0xe4,0);
[0xe4,0]

**** Decode instruction: setg   %ch
[0xe4,0] @{asm:=setg   %ch}@ << (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0xe4,1); << (NOT (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1}){0;1} >> Skip --> (0xe4,2);
[0xe4,1] %ecx{8;8} := 0x1{0;8} --> (0xe7,0);
[0xe4,2] %ecx{8;8} := 0x0{0;8} --> (0xe7,0);
[0xe7,0]

**** Decode instruction: setge  %ch
[0xe7,0] @{asm:=setge  %ch}@ << (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1} >> Skip --> (0xe7,1); << (NOT (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1}){0;1} >> Skip --> (0xe7,2);
[0xe7,1] %ecx{8;8} := 0x1{0;8} --> (0xea,0);
[0xe7,2] %ecx{8;8} := 0x0{0;8} --> (0xea,0);
[0xea,0]

**** Decode instruction: setl   %ch
[0xea,0] @{asm:=setl   %ch}@ << (XOR %sf{0;1} %of{0;1}){0;1} >> Skip --> (0xea,1); << (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1} >> Skip --> (0xea,2);
[0xea,1] %ecx{8;8} := 0x1{0;8} --> (0xed,0);
[0xea,2] %ecx{8;8} := 0x0{0;8} --> (0xed,0);
[0xed,0]

**** Decode instruction: setle  %ch
[0xed,0] @{asm:=setle  %ch}@ << (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1} >> Skip --> (0xed,1); << (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0xed,2);
[0xed,1] %ecx{8;8} := 0x1{0;8} --> (0xf0,0);
[0xed,2] %ecx{8;8} := 0x0{0;8} --> (0xf0,0);
[0xf0,0]

**** Decode instruction: setbe  %ch
[0xf0,0] @{asm:=setbe  %ch}@ << (OR %cf{0;1} %zf{0;1}){0;1} >> Skip --> (0xf0,1); << (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0xf0,2);
[0xf0,1] %ecx{8;8} := 0x1{0;8} --> (0xf3,0);
[0xf0,2] %ecx{8;8} := 0x0{0;8} --> (0xf3,0);
[0xf3,0]

**** Decode instruction: setb   %ch
[0xf3,0] @{asm:=setb   %ch}@ << %cf{0;1} >> Skip --> (0xf3,1); << (NOT %cf{0;1}){0;1} >> Skip --> (0xf3,2);
[0xf3,1] %ecx{8;8} := 0x1{0;8} --> (0xf6,0);
[0xf3,2] %ecx{8;8} := 0x0{0;8} --> (0xf6,0);
[0xf6,0]

**** Decode instruction: setae  %ch
[0xf6,0] @{asm:=setae  %ch}@ << (NOT %cf{0;1}){0;1} >> Skip --> (0xf6,1); << (NOT (NOT %cf{0;1}){0;1}){0;1} >> Skip --> (0xf6,2);
[0xf6,1] %ecx{8;8} := 0x1{0;8} --> (0xf9,0);
[0xf6,2] %ecx{8;8} := 0x0{0;8} --> (0xf9,0);
[0xf9,0]

**** Decode instruction: seta   %ch
[0xf9,0] @{asm:=seta   %ch}@ << (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0xf9,1); << (NOT (NOT (OR %cf{0;1} %zf{0;1}){0;1}){0;1}){0;1} >> Skip --> (0xf9,2);
[0xf9,1] %ecx{8;8} := 0x1{0;8} --> (0xfc,0);
[0xf9,2] %ecx{8;8} := 0x0{0;8} --> (0xfc,0);
[0xfc,0]

**** Decode instruction: setae  %ch
[0xfc,0] @{asm:=setae  %ch}@ << (NOT %cf{0;1}){0;1} >> Skip --> (0xfc,1); << (NOT (NOT %cf{0;1}){0;1}){0;1} >> Skip --> (0xfc,2);
[0xfc,1] %ecx{8;8} := 0x1{0;8} --> (0xff,0);
[0xfc,2] %ecx{8;8} := 0x0{0;8} --> (0xff,0);
[0xff,0]

**** Decode instruction: setne  %ch
[0xff,0] @{asm:=setne  %ch}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0xff,1); << (NOT (NOT %zf{0;1}){0;1}){0;1} >> Skip --> (0xff,2);
[0xff,1] %ecx{8;8} := 0x1{0;8} --> (0x102,0);
[0xff,2] %ecx{8;8} := 0x0{0;8} --> (0x102,0);
[0x102,0]

**** Decode instruction: setle  %ch
[0x102,0] @{asm:=setle  %ch}@ << (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1} >> Skip --> (0x102,1); << (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x102,2);
[0x102,1] %ecx{8;8} := 0x1{0;8} --> (0x105,0);
[0x102,2] %ecx{8;8} := 0x0{0;8} --> (0x105,0);
[0x105,0]

**** Decode instruction: setl   %ch
[0x105,0] @{asm:=setl   %ch}@ << (XOR %sf{0;1} %of{0;1}){0;1} >> Skip --> (0x105,1); << (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1} >> Skip --> (0x105,2);
[0x105,1] %ecx{8;8} := 0x1{0;8} --> (0x108,0);
[0x105,2] %ecx{8;8} := 0x0{0;8} --> (0x108,0);
[0x108,0]

**** Decode instruction: setge  %ch
[0x108,0] @{asm:=setge  %ch}@ << (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1} >> Skip --> (0x108,1); << (NOT (NOT (XOR %sf{0;1} %of{0;1}){0;1}){0;1}){0;1} >> Skip --> (0x108,2);
[0x108,1] %ecx{8;8} := 0x1{0;8} --> (0x10b,0);
[0x108,2] %ecx{8;8} := 0x0{0;8} --> (0x10b,0);
[0x10b,0]

**** Decode instruction: setg   %ch
[0x10b,0] @{asm:=setg   %ch}@ << (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1} >> Skip --> (0x10b,1); << (NOT (NOT (OR (XOR %sf{0;1} %of{0;1}){0;1} %zf{0;1}){0;1}){0;1}){0;1} >> Skip --> (0x10b,2);
[0x10b,1] %ecx{8;8} := 0x1{0;8} --> (0x10e,0);
[0x10b,2] %ecx{8;8} := 0x0{0;8} --> (0x10e,0);
[0x10e,0]

**** Decode instruction: setno  %ch
[0x10e,0] @{asm:=setno  %ch}@ << (NOT %of{0;1}){0;1} >> Skip --> (0x10e,1); << (NOT (NOT %of{0;1}){0;1}){0;1} >> Skip --> (0x10e,2);
[0x10e,1] %ecx{8;8} := 0x1{0;8} --> (0x111,0);
[0x10e,2] %ecx{8;8} := 0x0{0;8} --> (0x111,0);
[0x111,0]

**** Decode instruction: setnp  %ch
[0x111,0] @{asm:=setnp  %ch}@ << (NOT %pf{0;1}){0;1} >> Skip --> (0x111,1); << (NOT (NOT %pf{0;1}){0;1}){0;1} >> Skip --> (0x111,2);
[0x111,1] %ecx{8;8} := 0x1{0;8} --> (0x114,0);
[0x111,2] %ecx{8;8} := 0x0{0;8} --> (0x114,0);
[0x114,0]

**** Decode instruction: setns  %ch
[0x114,0] @{asm:=setns  %ch}@ << (NOT %sf{0;1}){0;1} >> Skip --> (0x114,1); << (NOT (NOT %sf{0;1}){0;1}){0;1} >> Skip --> (0x114,2);
[0x114,1] %ecx{8;8} := 0x1{0;8} --> (0x117,0);
[0x114,2] %ecx{8;8} := 0x0{0;8} --> (0x117,0);
[0x117,0]

**** Decode instruction: setne  %ch
[0x117,0] @{asm:=setne  %ch}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x117,1); << (NOT (NOT %zf{0;1}){0;1}){0;1} >> Skip --> (0x117,2);
[0x117,1] %ecx{8;8} := 0x1{0;8} --> (0x11a,0);
[0x117,2] %ecx{8;8} := 0x0{0;8} --> (0x11a,0);
[0x11a,0]

**** Decode instruction: seto   %ch
[0x11a,0] @{asm:=seto   %ch}@ << %of{0;1} >> Skip --> (0x11a,1); << (NOT %of{0;1}){0;1} >> Skip --> (0x11a,2);
[0x11a,1] %ecx{8;8} := 0x1{0;8} --> (0x11d,0);
[0x11a,2] %ecx{8;8} := 0x0{0;8} --> (0x11d,0);
[0x11d,0]

**** Decode instruction: setp   %ch
[0x11d,0] @{asm:=setp   %ch}@ << %pf{0;1} >> Skip --> (0x11d,1); << (NOT %pf{0;1}){0;1} >> Skip --> (0x11d,2);
[0x11d,1] %ecx{8;8} := 0x1{0;8} --> (0x120,0);
[0x11d,2] %ecx{8;8} := 0x0{0;8} --> (0x120,0);
[0x120,0]

**** Decode instruction: setp   %ch
[0x120,0] @{asm:=setp   %ch}@ << %pf{0;1} >> Skip --> (0x120,1); << (NOT %pf{0;1}){0;1} >> Skip --> (0x120,2);
[0x120,1] %ecx{8;8} := 0x1{0;8} --> (0x123,0);
[0x120,2] %ecx{8;8} := 0x0{0;8} --> (0x123,0);
[0x123,0]

**** Decode instruction: setnp  %ch
[0x123,0] @{asm:=setnp  %ch}@ << (NOT %pf{0;1}){0;1} >> Skip --> (0x123,1); << (NOT (NOT %pf{0;1}){0;1}){0;1} >> Skip --> (0x123,2);
[0x123,1] %ecx{8;8} := 0x1{0;8} --> (0x126,0);
[0x123,2] %ecx{8;8} := 0x0{0;8} --> (0x126,0);
[0x126,0]

**** Decode instruction: sets   %ch
[0x126,0] @{asm:=sets   %ch}@ << %sf{0;1} >> Skip --> (0x126,1); << (NOT %sf{0;1}){0;1} >> Skip --> (0x126,2);
[0x126,1] %ecx{8;8} := 0x1{0;8} --> (0x129,0);
[0x126,2] %ecx{8;8} := 0x0{0;8} --> (0x129,0);
[0x129,0]

**** Decode instruction: sete   %ch
[0x129,0] @{asm:=sete   %ch}@ << %zf{0;1} >> Skip --> (0x129,1); << (NOT %zf{0;1}){0;1} >> Skip --> (0x129,2);
[0x129,1] %ecx{8;8} := 0x1{0;8} --> (0x12c,0);
[0x129,2] %ecx{8;8} := 0x0{0;8} --> (0x12c,0);
[0x12c,0]

