**** Decode instruction: pop    %eax
[(0x0,0)] @{asm:=pop    %eax}@ ; %eax := [%esp]
[(0x0,1)] ; StaticArrow (0x0,1) %esp := (ADD %esp 0x4)  --> (0x1,0)
[(0x1,0)] 

**** Decode instruction: pop    %ax
[(0x1,0)] @{asm:=pop    %ax}@ ; %eax{0;16} := [%esp]{0;16}
[(0x1,1)] ; StaticArrow (0x1,1) %esp := (ADD %esp 0x2)  --> (0x3,0)
[(0x3,0)] 

**** Decode instruction: pop    %ds
[(0x3,0)] @{asm:=pop    %ds}@ ; %ds{0;16} := [%esp]{0;16}
[(0x3,1)] ; StaticArrow (0x3,1) %esp := (ADD %esp 0x2)  --> (0x4,0)
[(0x4,0)] 

**** Decode instruction: pop    %es
[(0x4,0)] @{asm:=pop    %es}@ ; %es{0;16} := [%esp]{0;16}
[(0x4,1)] ; StaticArrow (0x4,1) %esp := (ADD %esp 0x2)  --> (0x5,0)
[(0x5,0)] 

**** Decode instruction: pop    %fs
[(0x5,0)] @{asm:=pop    %fs}@ ; %fs{0;16} := [%esp]{0;16}
[(0x5,1)] ; StaticArrow (0x5,1) %esp := (ADD %esp 0x2)  --> (0x7,0)
[(0x7,0)] 

**** Decode instruction: pop    %gs
[(0x7,0)] @{asm:=pop    %gs}@ ; %gs{0;16} := [%esp]{0;16}
[(0x7,1)] ; StaticArrow (0x7,1) %esp := (ADD %esp 0x2)  --> (0x9,0)
[(0x9,0)] 

**** Decode instruction: pop    %ss
[(0x9,0)] @{asm:=pop    %ss}@ ; %ss{0;16} := [%esp]{0;16}
[(0x9,1)] ; StaticArrow (0x9,1) %esp := (ADD %esp 0x2)  --> (0xA,0)
[(0xA,0)] 

**** Decode instruction: popl   0x1111972
[(0xA,0)] @{asm:=popl   0x1111972}@ ; [0x1111972] := [%esp]
[(0xA,1)] ; StaticArrow (0xA,1) %esp := (ADD %esp 0x4)  --> (0x10,0)
[(0x10,0)] 

