**** Decode instruction: shl    %bh
[(0x0,0)] @{asm:=shl    %bh}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0x0,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0x0,2)] StaticArrow (0x0,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x0,3)StaticArrow (0x0,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x0,6)
[(0x0,3)] %cf{0;1} := %rbx{15;1}
[(0x0,4)] %rbx{8;8} := (LSH %rbx{8;8} 0x1{0;8}){0;8}
[(0x0,5)] StaticArrow (0x0,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x0,2)
[(0x0,6)] StaticArrow (0x0,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x0,7)StaticArrow (0x0,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x0,8)
[(0x0,7)] StaticArrow (0x0,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x2,0)StaticArrow (0x0,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x0,8)
[(0x0,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0x0,9)] %sf{0;1} := %rbx{15;1}
[(0x0,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0x0,11)] StaticArrow (0x0,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x2,0)
[(0x2,0)] 

**** Decode instruction: shlb   0x12345678
[(0x2,0)] @{asm:=shlb   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0x2,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x2,2)] StaticArrow (0x2,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x2,3)StaticArrow (0x2,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x2,6)
[(0x2,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x2,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x2,5)] StaticArrow (0x2,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x2,2)
[(0x2,6)] StaticArrow (0x2,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x2,7)StaticArrow (0x2,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x2,8)
[(0x2,7)] StaticArrow (0x2,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x9,0)StaticArrow (0x2,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x2,8)
[(0x2,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x2,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x2,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x2,11)] StaticArrow (0x2,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x9,0)
[(0x9,0)] 

**** Decode instruction: shl    %cl,%bh
[(0x9,0)] @{asm:=shl    %cl,%bh}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x9,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0x9,2)] StaticArrow (0x9,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x9,3)StaticArrow (0x9,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x9,6)
[(0x9,3)] %cf{0;1} := %rbx{15;1}
[(0x9,4)] %rbx{8;8} := (LSH %rbx{8;8} 0x1{0;8}){0;8}
[(0x9,5)] StaticArrow (0x9,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x9,2)
[(0x9,6)] StaticArrow (0x9,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x9,7)StaticArrow (0x9,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x9,8)
[(0x9,7)] StaticArrow (0x9,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xb,0)StaticArrow (0x9,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x9,8)
[(0x9,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0x9,9)] %sf{0;1} := %rbx{15;1}
[(0x9,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0x9,11)] StaticArrow (0x9,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xb,0)
[(0xb,0)] 

**** Decode instruction: shl    %cl,%ch
[(0xb,0)] @{asm:=shl    %cl,%ch}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0xb,1)] %tmpr1_8{0;8} := %rcx{8;8}
[(0xb,2)] StaticArrow (0xb,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xb,3)StaticArrow (0xb,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xb,6)
[(0xb,3)] %cf{0;1} := %rcx{15;1}
[(0xb,4)] %rcx{8;8} := (LSH %rcx{8;8} 0x1{0;8}){0;8}
[(0xb,5)] StaticArrow (0xb,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xb,2)
[(0xb,6)] StaticArrow (0xb,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xb,7)StaticArrow (0xb,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xb,8)
[(0xb,7)] StaticArrow (0xb,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xd,0)StaticArrow (0xb,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xb,8)
[(0xb,8)] %of{0;1} := (XOR %cf{0;1} %rcx{15;1}){0;1}
[(0xb,9)] %sf{0;1} := %rcx{15;1}
[(0xb,10)] %zf{0;1} := (EQ %rcx{8;8} 0x0{0;8}){0;1}
[(0xb,11)] StaticArrow (0xb,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xd,0)
[(0xd,0)] 

**** Decode instruction: shlb   %cl,0x12345678
[(0xd,0)] @{asm:=shlb   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0xd,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xd,2)] StaticArrow (0xd,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xd,3)StaticArrow (0xd,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xd,6)
[(0xd,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0xd,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xd,5)] StaticArrow (0xd,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xd,2)
[(0xd,6)] StaticArrow (0xd,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xd,7)StaticArrow (0xd,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xd,8)
[(0xd,7)] StaticArrow (0xd,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x14,0)StaticArrow (0xd,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xd,8)
[(0xd,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0xd,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xd,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xd,11)] StaticArrow (0xd,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x14,0)
[(0x14,0)] 

**** Decode instruction: shl    $0x3,%bh
[(0x14,0)] @{asm:=shl    $0x3,%bh}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x14,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0x14,2)] StaticArrow (0x14,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x14,3)StaticArrow (0x14,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x14,6)
[(0x14,3)] %cf{0;1} := %rbx{15;1}
[(0x14,4)] %rbx{8;8} := (LSH %rbx{8;8} 0x1{0;8}){0;8}
[(0x14,5)] StaticArrow (0x14,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x14,2)
[(0x14,6)] StaticArrow (0x14,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x14,7)StaticArrow (0x14,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x14,8)
[(0x14,7)] StaticArrow (0x14,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x17,0)StaticArrow (0x14,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x14,8)
[(0x14,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0x14,9)] %sf{0;1} := %rbx{15;1}
[(0x14,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0x14,11)] StaticArrow (0x14,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x17,0)
[(0x17,0)] 

**** Decode instruction: shlb   $0x3,0x12345678
[(0x17,0)] @{asm:=shlb   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0x17,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x17,2)] StaticArrow (0x17,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x17,3)StaticArrow (0x17,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x17,6)
[(0x17,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x17,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x17,5)] StaticArrow (0x17,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x17,2)
[(0x17,6)] StaticArrow (0x17,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x17,7)StaticArrow (0x17,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x17,8)
[(0x17,7)] StaticArrow (0x17,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x1f,0)StaticArrow (0x17,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x17,8)
[(0x17,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x17,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x17,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x17,11)] StaticArrow (0x17,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x1f,0)
[(0x1f,0)] 

**** Decode instruction: shl    %bx
[(0x1f,0)] @{asm:=shl    %bx}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0x1f,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x1f,2)] StaticArrow (0x1f,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x1f,3)StaticArrow (0x1f,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x1f,6)
[(0x1f,3)] %cf{0;1} := %rbx{15;1}
[(0x1f,4)] %rbx{0;16} := (LSH %rbx{0;16} 0x1{0;16}){0;16}
[(0x1f,5)] StaticArrow (0x1f,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x1f,2)
[(0x1f,6)] StaticArrow (0x1f,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x1f,7)StaticArrow (0x1f,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x1f,8)
[(0x1f,7)] StaticArrow (0x1f,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x22,0)StaticArrow (0x1f,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x1f,8)
[(0x1f,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0x1f,9)] %sf{0;1} := %rbx{15;1}
[(0x1f,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x1f,11)] StaticArrow (0x1f,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x22,0)
[(0x22,0)] 

**** Decode instruction: shlw   0x12345678
[(0x22,0)] @{asm:=shlw   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0x22,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x22,2)] StaticArrow (0x22,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x22,3)StaticArrow (0x22,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x22,6)
[(0x22,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x22,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x22,5)] StaticArrow (0x22,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x22,2)
[(0x22,6)] StaticArrow (0x22,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x22,7)StaticArrow (0x22,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x22,8)
[(0x22,7)] StaticArrow (0x22,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x2a,0)StaticArrow (0x22,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x22,8)
[(0x22,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x22,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x22,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x22,11)] StaticArrow (0x22,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x2a,0)
[(0x2a,0)] 

**** Decode instruction: shl    %cl,%bx
[(0x2a,0)] @{asm:=shl    %cl,%bx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x2a,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x2a,2)] StaticArrow (0x2a,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x2a,3)StaticArrow (0x2a,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x2a,6)
[(0x2a,3)] %cf{0;1} := %rbx{15;1}
[(0x2a,4)] %rbx{0;16} := (LSH %rbx{0;16} 0x1{0;16}){0;16}
[(0x2a,5)] StaticArrow (0x2a,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x2a,2)
[(0x2a,6)] StaticArrow (0x2a,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x2a,7)StaticArrow (0x2a,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x2a,8)
[(0x2a,7)] StaticArrow (0x2a,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x2d,0)StaticArrow (0x2a,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x2a,8)
[(0x2a,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0x2a,9)] %sf{0;1} := %rbx{15;1}
[(0x2a,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x2a,11)] StaticArrow (0x2a,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x2d,0)
[(0x2d,0)] 

**** Decode instruction: shl    %cl,%cx
[(0x2d,0)] @{asm:=shl    %cl,%cx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x2d,1)] %tmpr1_16{0;16} := %rcx{0;16}
[(0x2d,2)] StaticArrow (0x2d,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x2d,3)StaticArrow (0x2d,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x2d,6)
[(0x2d,3)] %cf{0;1} := %rcx{15;1}
[(0x2d,4)] %rcx{0;16} := (LSH %rcx{0;16} 0x1{0;16}){0;16}
[(0x2d,5)] StaticArrow (0x2d,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x2d,2)
[(0x2d,6)] StaticArrow (0x2d,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x2d,7)StaticArrow (0x2d,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x2d,8)
[(0x2d,7)] StaticArrow (0x2d,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x30,0)StaticArrow (0x2d,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x2d,8)
[(0x2d,8)] %of{0;1} := (XOR %cf{0;1} %rcx{15;1}){0;1}
[(0x2d,9)] %sf{0;1} := %rcx{15;1}
[(0x2d,10)] %zf{0;1} := (EQ %rcx{0;16} 0x0{0;16}){0;1}
[(0x2d,11)] StaticArrow (0x2d,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x30,0)
[(0x30,0)] 

**** Decode instruction: shlw   %cl,0x12345678
[(0x30,0)] @{asm:=shlw   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0x30,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x30,2)] StaticArrow (0x30,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x30,3)StaticArrow (0x30,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x30,6)
[(0x30,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x30,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x30,5)] StaticArrow (0x30,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x30,2)
[(0x30,6)] StaticArrow (0x30,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x30,7)StaticArrow (0x30,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x30,8)
[(0x30,7)] StaticArrow (0x30,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x38,0)StaticArrow (0x30,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x30,8)
[(0x30,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x30,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x30,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x30,11)] StaticArrow (0x30,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x38,0)
[(0x38,0)] 

**** Decode instruction: shl    $0x3,%bx
[(0x38,0)] @{asm:=shl    $0x3,%bx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x38,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x38,2)] StaticArrow (0x38,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x38,3)StaticArrow (0x38,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x38,6)
[(0x38,3)] %cf{0;1} := %rbx{15;1}
[(0x38,4)] %rbx{0;16} := (LSH %rbx{0;16} 0x1{0;16}){0;16}
[(0x38,5)] StaticArrow (0x38,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x38,2)
[(0x38,6)] StaticArrow (0x38,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x38,7)StaticArrow (0x38,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x38,8)
[(0x38,7)] StaticArrow (0x38,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x3c,0)StaticArrow (0x38,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x38,8)
[(0x38,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0x38,9)] %sf{0;1} := %rbx{15;1}
[(0x38,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x38,11)] StaticArrow (0x38,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x3c,0)
[(0x3c,0)] 

**** Decode instruction: shlw   $0x3,0x12345678
[(0x3c,0)] @{asm:=shlw   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0x3c,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x3c,2)] StaticArrow (0x3c,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x3c,3)StaticArrow (0x3c,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x3c,6)
[(0x3c,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x3c,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x3c,5)] StaticArrow (0x3c,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x3c,2)
[(0x3c,6)] StaticArrow (0x3c,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x3c,7)StaticArrow (0x3c,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x3c,8)
[(0x3c,7)] StaticArrow (0x3c,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x45,0)StaticArrow (0x3c,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x3c,8)
[(0x3c,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x3c,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x3c,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x3c,11)] StaticArrow (0x3c,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x45,0)
[(0x45,0)] 

**** Decode instruction: shl    %ebx
[(0x45,0)] @{asm:=shl    %ebx}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0x45,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0x45,2)] StaticArrow (0x45,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x45,3)StaticArrow (0x45,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x45,6)
[(0x45,3)] %cf{0;1} := %rbx{31;1}
[(0x45,4)] %rbx{0;32} := (LSH %rbx{0;32} 0x1{0;32}){0;32}
[(0x45,5)] StaticArrow (0x45,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x45,2)
[(0x45,6)] StaticArrow (0x45,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x45,7)StaticArrow (0x45,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x45,8)
[(0x45,7)] StaticArrow (0x45,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x47,0)StaticArrow (0x45,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x45,8)
[(0x45,8)] %of{0;1} := (XOR %cf{0;1} %rbx{31;1}){0;1}
[(0x45,9)] %sf{0;1} := %rbx{31;1}
[(0x45,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0x45,11)] StaticArrow (0x45,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x47,0)
[(0x47,0)] 

**** Decode instruction: shll   0x12345678
[(0x47,0)] @{asm:=shll   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0x47,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x47,2)] StaticArrow (0x47,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x47,3)StaticArrow (0x47,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x47,6)
[(0x47,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x47,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x47,5)] StaticArrow (0x47,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x47,2)
[(0x47,6)] StaticArrow (0x47,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x47,7)StaticArrow (0x47,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x47,8)
[(0x47,7)] StaticArrow (0x47,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x4e,0)StaticArrow (0x47,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x47,8)
[(0x47,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x47,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x47,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x47,11)] StaticArrow (0x47,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x4e,0)
[(0x4e,0)] 

**** Decode instruction: shl    %cl,%ebx
[(0x4e,0)] @{asm:=shl    %cl,%ebx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x4e,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0x4e,2)] StaticArrow (0x4e,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x4e,3)StaticArrow (0x4e,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x4e,6)
[(0x4e,3)] %cf{0;1} := %rbx{31;1}
[(0x4e,4)] %rbx{0;32} := (LSH %rbx{0;32} 0x1{0;32}){0;32}
[(0x4e,5)] StaticArrow (0x4e,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x4e,2)
[(0x4e,6)] StaticArrow (0x4e,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x4e,7)StaticArrow (0x4e,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x4e,8)
[(0x4e,7)] StaticArrow (0x4e,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x50,0)StaticArrow (0x4e,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x4e,8)
[(0x4e,8)] %of{0;1} := (XOR %cf{0;1} %rbx{31;1}){0;1}
[(0x4e,9)] %sf{0;1} := %rbx{31;1}
[(0x4e,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0x4e,11)] StaticArrow (0x4e,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x50,0)
[(0x50,0)] 

**** Decode instruction: shl    %cl,%ecx
[(0x50,0)] @{asm:=shl    %cl,%ecx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x50,1)] %tmpr1_32{0;32} := %rcx{0;32}
[(0x50,2)] StaticArrow (0x50,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x50,3)StaticArrow (0x50,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x50,6)
[(0x50,3)] %cf{0;1} := %rcx{31;1}
[(0x50,4)] %rcx{0;32} := (LSH %rcx{0;32} 0x1{0;32}){0;32}
[(0x50,5)] StaticArrow (0x50,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x50,2)
[(0x50,6)] StaticArrow (0x50,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x50,7)StaticArrow (0x50,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x50,8)
[(0x50,7)] StaticArrow (0x50,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x52,0)StaticArrow (0x50,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x50,8)
[(0x50,8)] %of{0;1} := (XOR %cf{0;1} %rcx{31;1}){0;1}
[(0x50,9)] %sf{0;1} := %rcx{31;1}
[(0x50,10)] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1}
[(0x50,11)] StaticArrow (0x50,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x52,0)
[(0x52,0)] 

**** Decode instruction: shll   %cl,0x12345678
[(0x52,0)] @{asm:=shll   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0x52,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x52,2)] StaticArrow (0x52,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x52,3)StaticArrow (0x52,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x52,6)
[(0x52,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x52,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x52,5)] StaticArrow (0x52,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x52,2)
[(0x52,6)] StaticArrow (0x52,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x52,7)StaticArrow (0x52,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x52,8)
[(0x52,7)] StaticArrow (0x52,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x59,0)StaticArrow (0x52,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x52,8)
[(0x52,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x52,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x52,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x52,11)] StaticArrow (0x52,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x59,0)
[(0x59,0)] 

**** Decode instruction: shl    $0x3,%ebx
[(0x59,0)] @{asm:=shl    $0x3,%ebx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x59,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0x59,2)] StaticArrow (0x59,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x59,3)StaticArrow (0x59,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x59,6)
[(0x59,3)] %cf{0;1} := %rbx{31;1}
[(0x59,4)] %rbx{0;32} := (LSH %rbx{0;32} 0x1{0;32}){0;32}
[(0x59,5)] StaticArrow (0x59,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x59,2)
[(0x59,6)] StaticArrow (0x59,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x59,7)StaticArrow (0x59,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x59,8)
[(0x59,7)] StaticArrow (0x59,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x5c,0)StaticArrow (0x59,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x59,8)
[(0x59,8)] %of{0;1} := (XOR %cf{0;1} %rbx{31;1}){0;1}
[(0x59,9)] %sf{0;1} := %rbx{31;1}
[(0x59,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0x59,11)] StaticArrow (0x59,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x5c,0)
[(0x5c,0)] 

**** Decode instruction: shl    $0x3,%ecx
[(0x5c,0)] @{asm:=shl    $0x3,%ecx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x5c,1)] %tmpr1_32{0;32} := %rcx{0;32}
[(0x5c,2)] StaticArrow (0x5c,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x5c,3)StaticArrow (0x5c,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x5c,6)
[(0x5c,3)] %cf{0;1} := %rcx{31;1}
[(0x5c,4)] %rcx{0;32} := (LSH %rcx{0;32} 0x1{0;32}){0;32}
[(0x5c,5)] StaticArrow (0x5c,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x5c,2)
[(0x5c,6)] StaticArrow (0x5c,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x5c,7)StaticArrow (0x5c,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x5c,8)
[(0x5c,7)] StaticArrow (0x5c,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x5f,0)StaticArrow (0x5c,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x5c,8)
[(0x5c,8)] %of{0;1} := (XOR %cf{0;1} %rcx{31;1}){0;1}
[(0x5c,9)] %sf{0;1} := %rcx{31;1}
[(0x5c,10)] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1}
[(0x5c,11)] StaticArrow (0x5c,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x5f,0)
[(0x5f,0)] 

**** Decode instruction: shll   $0x3,0x12345678
[(0x5f,0)] @{asm:=shll   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0x5f,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x5f,2)] StaticArrow (0x5f,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x5f,3)StaticArrow (0x5f,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x5f,6)
[(0x5f,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x5f,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x5f,5)] StaticArrow (0x5f,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x5f,2)
[(0x5f,6)] StaticArrow (0x5f,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x5f,7)StaticArrow (0x5f,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x5f,8)
[(0x5f,7)] StaticArrow (0x5f,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x67,0)StaticArrow (0x5f,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x5f,8)
[(0x5f,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x5f,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x5f,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x5f,11)] StaticArrow (0x5f,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x67,0)
[(0x67,0)] 

**** Decode instruction: sar    %bh
[(0x67,0)] @{asm:=sar    %bh}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0x67,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0x67,2)] StaticArrow (0x67,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x67,3)StaticArrow (0x67,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x67,6)
[(0x67,3)] %cf{0;1} := %rbx{8;1}
[(0x67,4)] %rbx{8;8} := (RSH_S %rbx{8;8} 0x1{0;8}){0;8}
[(0x67,5)] StaticArrow (0x67,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x67,2)
[(0x67,6)] StaticArrow (0x67,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x67,7)StaticArrow (0x67,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x67,8)
[(0x67,7)] StaticArrow (0x67,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x69,0)StaticArrow (0x67,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x67,8)
[(0x67,8)] %of{0;1} := 0x0{0;1}
[(0x67,9)] %sf{0;1} := %rbx{15;1}
[(0x67,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0x67,11)] StaticArrow (0x67,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x69,0)
[(0x69,0)] 

**** Decode instruction: sarb   0x12345678
[(0x69,0)] @{asm:=sarb   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0x69,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x69,2)] StaticArrow (0x69,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x69,3)StaticArrow (0x69,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x69,6)
[(0x69,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x69,4)] [0x12345678{0;32}]{0;64} := (RSH_S [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x69,5)] StaticArrow (0x69,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x69,2)
[(0x69,6)] StaticArrow (0x69,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x69,7)StaticArrow (0x69,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x69,8)
[(0x69,7)] StaticArrow (0x69,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x70,0)StaticArrow (0x69,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x69,8)
[(0x69,8)] %of{0;1} := 0x0{0;1}
[(0x69,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x69,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x69,11)] StaticArrow (0x69,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x70,0)
[(0x70,0)] 

**** Decode instruction: sar    %cl,%bh
[(0x70,0)] @{asm:=sar    %cl,%bh}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x70,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0x70,2)] StaticArrow (0x70,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x70,3)StaticArrow (0x70,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x70,6)
[(0x70,3)] %cf{0;1} := %rbx{8;1}
[(0x70,4)] %rbx{8;8} := (RSH_S %rbx{8;8} 0x1{0;8}){0;8}
[(0x70,5)] StaticArrow (0x70,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x70,2)
[(0x70,6)] StaticArrow (0x70,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x70,7)StaticArrow (0x70,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x70,8)
[(0x70,7)] StaticArrow (0x70,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x72,0)StaticArrow (0x70,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x70,8)
[(0x70,8)] %of{0;1} := 0x0{0;1}
[(0x70,9)] %sf{0;1} := %rbx{15;1}
[(0x70,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0x70,11)] StaticArrow (0x70,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x72,0)
[(0x72,0)] 

**** Decode instruction: sar    %cl,%ch
[(0x72,0)] @{asm:=sar    %cl,%ch}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x72,1)] %tmpr1_8{0;8} := %rcx{8;8}
[(0x72,2)] StaticArrow (0x72,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x72,3)StaticArrow (0x72,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x72,6)
[(0x72,3)] %cf{0;1} := %rcx{8;1}
[(0x72,4)] %rcx{8;8} := (RSH_S %rcx{8;8} 0x1{0;8}){0;8}
[(0x72,5)] StaticArrow (0x72,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x72,2)
[(0x72,6)] StaticArrow (0x72,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x72,7)StaticArrow (0x72,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x72,8)
[(0x72,7)] StaticArrow (0x72,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x74,0)StaticArrow (0x72,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x72,8)
[(0x72,8)] %of{0;1} := 0x0{0;1}
[(0x72,9)] %sf{0;1} := %rcx{15;1}
[(0x72,10)] %zf{0;1} := (EQ %rcx{8;8} 0x0{0;8}){0;1}
[(0x72,11)] StaticArrow (0x72,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x74,0)
[(0x74,0)] 

**** Decode instruction: sarb   %cl,0x12345678
[(0x74,0)] @{asm:=sarb   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0x74,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x74,2)] StaticArrow (0x74,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x74,3)StaticArrow (0x74,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x74,6)
[(0x74,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x74,4)] [0x12345678{0;32}]{0;64} := (RSH_S [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x74,5)] StaticArrow (0x74,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x74,2)
[(0x74,6)] StaticArrow (0x74,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x74,7)StaticArrow (0x74,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x74,8)
[(0x74,7)] StaticArrow (0x74,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x7b,0)StaticArrow (0x74,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x74,8)
[(0x74,8)] %of{0;1} := 0x0{0;1}
[(0x74,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x74,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x74,11)] StaticArrow (0x74,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x7b,0)
[(0x7b,0)] 

**** Decode instruction: sar    $0x3,%bh
[(0x7b,0)] @{asm:=sar    $0x3,%bh}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x7b,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0x7b,2)] StaticArrow (0x7b,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x7b,3)StaticArrow (0x7b,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x7b,6)
[(0x7b,3)] %cf{0;1} := %rbx{8;1}
[(0x7b,4)] %rbx{8;8} := (RSH_S %rbx{8;8} 0x1{0;8}){0;8}
[(0x7b,5)] StaticArrow (0x7b,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x7b,2)
[(0x7b,6)] StaticArrow (0x7b,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x7b,7)StaticArrow (0x7b,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x7b,8)
[(0x7b,7)] StaticArrow (0x7b,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x7e,0)StaticArrow (0x7b,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x7b,8)
[(0x7b,8)] %of{0;1} := 0x0{0;1}
[(0x7b,9)] %sf{0;1} := %rbx{15;1}
[(0x7b,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0x7b,11)] StaticArrow (0x7b,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x7e,0)
[(0x7e,0)] 

**** Decode instruction: sarb   $0x3,0x12345678
[(0x7e,0)] @{asm:=sarb   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0x7e,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x7e,2)] StaticArrow (0x7e,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x7e,3)StaticArrow (0x7e,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x7e,6)
[(0x7e,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x7e,4)] [0x12345678{0;32}]{0;64} := (RSH_S [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x7e,5)] StaticArrow (0x7e,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x7e,2)
[(0x7e,6)] StaticArrow (0x7e,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x7e,7)StaticArrow (0x7e,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x7e,8)
[(0x7e,7)] StaticArrow (0x7e,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x86,0)StaticArrow (0x7e,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x7e,8)
[(0x7e,8)] %of{0;1} := 0x0{0;1}
[(0x7e,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x7e,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x7e,11)] StaticArrow (0x7e,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x86,0)
[(0x86,0)] 

**** Decode instruction: sar    %bx
[(0x86,0)] @{asm:=sar    %bx}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0x86,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x86,2)] StaticArrow (0x86,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x86,3)StaticArrow (0x86,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x86,6)
[(0x86,3)] %cf{0;1} := %rbx{0;1}
[(0x86,4)] %rbx{0;16} := (RSH_S %rbx{0;16} 0x1{0;16}){0;16}
[(0x86,5)] StaticArrow (0x86,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x86,2)
[(0x86,6)] StaticArrow (0x86,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x86,7)StaticArrow (0x86,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x86,8)
[(0x86,7)] StaticArrow (0x86,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x89,0)StaticArrow (0x86,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x86,8)
[(0x86,8)] %of{0;1} := 0x0{0;1}
[(0x86,9)] %sf{0;1} := %rbx{15;1}
[(0x86,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x86,11)] StaticArrow (0x86,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x89,0)
[(0x89,0)] 

**** Decode instruction: sarw   0x12345678
[(0x89,0)] @{asm:=sarw   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0x89,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x89,2)] StaticArrow (0x89,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x89,3)StaticArrow (0x89,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x89,6)
[(0x89,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x89,4)] [0x12345678{0;32}]{0;64} := (RSH_S [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x89,5)] StaticArrow (0x89,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x89,2)
[(0x89,6)] StaticArrow (0x89,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x89,7)StaticArrow (0x89,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x89,8)
[(0x89,7)] StaticArrow (0x89,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x91,0)StaticArrow (0x89,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x89,8)
[(0x89,8)] %of{0;1} := 0x0{0;1}
[(0x89,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x89,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x89,11)] StaticArrow (0x89,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x91,0)
[(0x91,0)] 

**** Decode instruction: sar    %cl,%bx
[(0x91,0)] @{asm:=sar    %cl,%bx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x91,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x91,2)] StaticArrow (0x91,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x91,3)StaticArrow (0x91,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x91,6)
[(0x91,3)] %cf{0;1} := %rbx{0;1}
[(0x91,4)] %rbx{0;16} := (RSH_S %rbx{0;16} 0x1{0;16}){0;16}
[(0x91,5)] StaticArrow (0x91,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x91,2)
[(0x91,6)] StaticArrow (0x91,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x91,7)StaticArrow (0x91,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x91,8)
[(0x91,7)] StaticArrow (0x91,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x94,0)StaticArrow (0x91,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x91,8)
[(0x91,8)] %of{0;1} := 0x0{0;1}
[(0x91,9)] %sf{0;1} := %rbx{15;1}
[(0x91,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x91,11)] StaticArrow (0x91,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x94,0)
[(0x94,0)] 

**** Decode instruction: sar    %cl,%cx
[(0x94,0)] @{asm:=sar    %cl,%cx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x94,1)] %tmpr1_16{0;16} := %rcx{0;16}
[(0x94,2)] StaticArrow (0x94,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x94,3)StaticArrow (0x94,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x94,6)
[(0x94,3)] %cf{0;1} := %rcx{0;1}
[(0x94,4)] %rcx{0;16} := (RSH_S %rcx{0;16} 0x1{0;16}){0;16}
[(0x94,5)] StaticArrow (0x94,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x94,2)
[(0x94,6)] StaticArrow (0x94,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x94,7)StaticArrow (0x94,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x94,8)
[(0x94,7)] StaticArrow (0x94,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x97,0)StaticArrow (0x94,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x94,8)
[(0x94,8)] %of{0;1} := 0x0{0;1}
[(0x94,9)] %sf{0;1} := %rcx{15;1}
[(0x94,10)] %zf{0;1} := (EQ %rcx{0;16} 0x0{0;16}){0;1}
[(0x94,11)] StaticArrow (0x94,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x97,0)
[(0x97,0)] 

**** Decode instruction: sarw   %cl,0x12345678
[(0x97,0)] @{asm:=sarw   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0x97,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x97,2)] StaticArrow (0x97,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x97,3)StaticArrow (0x97,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x97,6)
[(0x97,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x97,4)] [0x12345678{0;32}]{0;64} := (RSH_S [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x97,5)] StaticArrow (0x97,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x97,2)
[(0x97,6)] StaticArrow (0x97,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x97,7)StaticArrow (0x97,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x97,8)
[(0x97,7)] StaticArrow (0x97,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x9f,0)StaticArrow (0x97,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x97,8)
[(0x97,8)] %of{0;1} := 0x0{0;1}
[(0x97,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x97,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x97,11)] StaticArrow (0x97,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x9f,0)
[(0x9f,0)] 

**** Decode instruction: sar    $0x3,%bx
[(0x9f,0)] @{asm:=sar    $0x3,%bx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x9f,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x9f,2)] StaticArrow (0x9f,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x9f,3)StaticArrow (0x9f,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x9f,6)
[(0x9f,3)] %cf{0;1} := %rbx{0;1}
[(0x9f,4)] %rbx{0;16} := (RSH_S %rbx{0;16} 0x1{0;16}){0;16}
[(0x9f,5)] StaticArrow (0x9f,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x9f,2)
[(0x9f,6)] StaticArrow (0x9f,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x9f,7)StaticArrow (0x9f,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x9f,8)
[(0x9f,7)] StaticArrow (0x9f,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0xa3,0)StaticArrow (0x9f,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x9f,8)
[(0x9f,8)] %of{0;1} := 0x0{0;1}
[(0x9f,9)] %sf{0;1} := %rbx{15;1}
[(0x9f,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x9f,11)] StaticArrow (0x9f,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xa3,0)
[(0xa3,0)] 

**** Decode instruction: sarw   $0x3,0x12345678
[(0xa3,0)] @{asm:=sarw   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0xa3,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xa3,2)] StaticArrow (0xa3,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xa3,3)StaticArrow (0xa3,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xa3,6)
[(0xa3,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0xa3,4)] [0x12345678{0;32}]{0;64} := (RSH_S [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xa3,5)] StaticArrow (0xa3,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xa3,2)
[(0xa3,6)] StaticArrow (0xa3,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0xa3,7)StaticArrow (0xa3,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xa3,8)
[(0xa3,7)] StaticArrow (0xa3,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0xac,0)StaticArrow (0xa3,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xa3,8)
[(0xa3,8)] %of{0;1} := 0x0{0;1}
[(0xa3,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xa3,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xa3,11)] StaticArrow (0xa3,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xac,0)
[(0xac,0)] 

**** Decode instruction: sar    %ebx
[(0xac,0)] @{asm:=sar    %ebx}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0xac,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0xac,2)] StaticArrow (0xac,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xac,3)StaticArrow (0xac,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xac,6)
[(0xac,3)] %cf{0;1} := %rbx{0;1}
[(0xac,4)] %rbx{0;32} := (RSH_S %rbx{0;32} 0x1{0;32}){0;32}
[(0xac,5)] StaticArrow (0xac,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xac,2)
[(0xac,6)] StaticArrow (0xac,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0xac,7)StaticArrow (0xac,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xac,8)
[(0xac,7)] StaticArrow (0xac,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0xae,0)StaticArrow (0xac,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xac,8)
[(0xac,8)] %of{0;1} := 0x0{0;1}
[(0xac,9)] %sf{0;1} := %rbx{31;1}
[(0xac,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0xac,11)] StaticArrow (0xac,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xae,0)
[(0xae,0)] 

**** Decode instruction: sarl   0x12345678
[(0xae,0)] @{asm:=sarl   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0xae,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xae,2)] StaticArrow (0xae,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xae,3)StaticArrow (0xae,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xae,6)
[(0xae,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0xae,4)] [0x12345678{0;32}]{0;64} := (RSH_S [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xae,5)] StaticArrow (0xae,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xae,2)
[(0xae,6)] StaticArrow (0xae,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0xae,7)StaticArrow (0xae,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xae,8)
[(0xae,7)] StaticArrow (0xae,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0xb5,0)StaticArrow (0xae,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xae,8)
[(0xae,8)] %of{0;1} := 0x0{0;1}
[(0xae,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xae,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xae,11)] StaticArrow (0xae,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xb5,0)
[(0xb5,0)] 

**** Decode instruction: sar    %cl,%ebx
[(0xb5,0)] @{asm:=sar    %cl,%ebx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0xb5,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0xb5,2)] StaticArrow (0xb5,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xb5,3)StaticArrow (0xb5,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xb5,6)
[(0xb5,3)] %cf{0;1} := %rbx{0;1}
[(0xb5,4)] %rbx{0;32} := (RSH_S %rbx{0;32} 0x1{0;32}){0;32}
[(0xb5,5)] StaticArrow (0xb5,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xb5,2)
[(0xb5,6)] StaticArrow (0xb5,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xb5,7)StaticArrow (0xb5,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xb5,8)
[(0xb5,7)] StaticArrow (0xb5,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xb7,0)StaticArrow (0xb5,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xb5,8)
[(0xb5,8)] %of{0;1} := 0x0{0;1}
[(0xb5,9)] %sf{0;1} := %rbx{31;1}
[(0xb5,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0xb5,11)] StaticArrow (0xb5,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xb7,0)
[(0xb7,0)] 

**** Decode instruction: sar    %cl,%ecx
[(0xb7,0)] @{asm:=sar    %cl,%ecx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0xb7,1)] %tmpr1_32{0;32} := %rcx{0;32}
[(0xb7,2)] StaticArrow (0xb7,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xb7,3)StaticArrow (0xb7,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xb7,6)
[(0xb7,3)] %cf{0;1} := %rcx{0;1}
[(0xb7,4)] %rcx{0;32} := (RSH_S %rcx{0;32} 0x1{0;32}){0;32}
[(0xb7,5)] StaticArrow (0xb7,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xb7,2)
[(0xb7,6)] StaticArrow (0xb7,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xb7,7)StaticArrow (0xb7,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xb7,8)
[(0xb7,7)] StaticArrow (0xb7,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xb9,0)StaticArrow (0xb7,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xb7,8)
[(0xb7,8)] %of{0;1} := 0x0{0;1}
[(0xb7,9)] %sf{0;1} := %rcx{31;1}
[(0xb7,10)] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1}
[(0xb7,11)] StaticArrow (0xb7,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xb9,0)
[(0xb9,0)] 

**** Decode instruction: sarl   %cl,0x12345678
[(0xb9,0)] @{asm:=sarl   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0xb9,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xb9,2)] StaticArrow (0xb9,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xb9,3)StaticArrow (0xb9,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xb9,6)
[(0xb9,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0xb9,4)] [0x12345678{0;32}]{0;64} := (RSH_S [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xb9,5)] StaticArrow (0xb9,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xb9,2)
[(0xb9,6)] StaticArrow (0xb9,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xb9,7)StaticArrow (0xb9,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xb9,8)
[(0xb9,7)] StaticArrow (0xb9,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xc0,0)StaticArrow (0xb9,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xb9,8)
[(0xb9,8)] %of{0;1} := 0x0{0;1}
[(0xb9,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xb9,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xb9,11)] StaticArrow (0xb9,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xc0,0)
[(0xc0,0)] 

**** Decode instruction: sar    $0x3,%ebx
[(0xc0,0)] @{asm:=sar    $0x3,%ebx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0xc0,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0xc0,2)] StaticArrow (0xc0,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xc0,3)StaticArrow (0xc0,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xc0,6)
[(0xc0,3)] %cf{0;1} := %rbx{0;1}
[(0xc0,4)] %rbx{0;32} := (RSH_S %rbx{0;32} 0x1{0;32}){0;32}
[(0xc0,5)] StaticArrow (0xc0,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xc0,2)
[(0xc0,6)] StaticArrow (0xc0,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0xc0,7)StaticArrow (0xc0,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xc0,8)
[(0xc0,7)] StaticArrow (0xc0,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0xc3,0)StaticArrow (0xc0,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xc0,8)
[(0xc0,8)] %of{0;1} := 0x0{0;1}
[(0xc0,9)] %sf{0;1} := %rbx{31;1}
[(0xc0,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0xc0,11)] StaticArrow (0xc0,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xc3,0)
[(0xc3,0)] 

**** Decode instruction: sar    $0x3,%ecx
[(0xc3,0)] @{asm:=sar    $0x3,%ecx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0xc3,1)] %tmpr1_32{0;32} := %rcx{0;32}
[(0xc3,2)] StaticArrow (0xc3,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xc3,3)StaticArrow (0xc3,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xc3,6)
[(0xc3,3)] %cf{0;1} := %rcx{0;1}
[(0xc3,4)] %rcx{0;32} := (RSH_S %rcx{0;32} 0x1{0;32}){0;32}
[(0xc3,5)] StaticArrow (0xc3,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xc3,2)
[(0xc3,6)] StaticArrow (0xc3,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0xc3,7)StaticArrow (0xc3,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xc3,8)
[(0xc3,7)] StaticArrow (0xc3,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0xc6,0)StaticArrow (0xc3,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xc3,8)
[(0xc3,8)] %of{0;1} := 0x0{0;1}
[(0xc3,9)] %sf{0;1} := %rcx{31;1}
[(0xc3,10)] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1}
[(0xc3,11)] StaticArrow (0xc3,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xc6,0)
[(0xc6,0)] 

**** Decode instruction: sarl   $0x3,0x12345678
[(0xc6,0)] @{asm:=sarl   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0xc6,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xc6,2)] StaticArrow (0xc6,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xc6,3)StaticArrow (0xc6,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xc6,6)
[(0xc6,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0xc6,4)] [0x12345678{0;32}]{0;64} := (RSH_S [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xc6,5)] StaticArrow (0xc6,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xc6,2)
[(0xc6,6)] StaticArrow (0xc6,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0xc6,7)StaticArrow (0xc6,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xc6,8)
[(0xc6,7)] StaticArrow (0xc6,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0xce,0)StaticArrow (0xc6,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xc6,8)
[(0xc6,8)] %of{0;1} := 0x0{0;1}
[(0xc6,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xc6,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xc6,11)] StaticArrow (0xc6,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xce,0)
[(0xce,0)] 

**** Decode instruction: shl    %bh
[(0xce,0)] @{asm:=shl    %bh}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0xce,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0xce,2)] StaticArrow (0xce,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xce,3)StaticArrow (0xce,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xce,6)
[(0xce,3)] %cf{0;1} := %rbx{15;1}
[(0xce,4)] %rbx{8;8} := (LSH %rbx{8;8} 0x1{0;8}){0;8}
[(0xce,5)] StaticArrow (0xce,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xce,2)
[(0xce,6)] StaticArrow (0xce,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0xce,7)StaticArrow (0xce,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xce,8)
[(0xce,7)] StaticArrow (0xce,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0xd0,0)StaticArrow (0xce,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xce,8)
[(0xce,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0xce,9)] %sf{0;1} := %rbx{15;1}
[(0xce,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0xce,11)] StaticArrow (0xce,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xd0,0)
[(0xd0,0)] 

**** Decode instruction: shlb   0x12345678
[(0xd0,0)] @{asm:=shlb   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0xd0,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xd0,2)] StaticArrow (0xd0,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xd0,3)StaticArrow (0xd0,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xd0,6)
[(0xd0,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0xd0,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xd0,5)] StaticArrow (0xd0,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xd0,2)
[(0xd0,6)] StaticArrow (0xd0,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0xd0,7)StaticArrow (0xd0,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xd0,8)
[(0xd0,7)] StaticArrow (0xd0,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0xd7,0)StaticArrow (0xd0,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xd0,8)
[(0xd0,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0xd0,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xd0,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xd0,11)] StaticArrow (0xd0,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xd7,0)
[(0xd7,0)] 

**** Decode instruction: shl    %cl,%bh
[(0xd7,0)] @{asm:=shl    %cl,%bh}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0xd7,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0xd7,2)] StaticArrow (0xd7,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xd7,3)StaticArrow (0xd7,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xd7,6)
[(0xd7,3)] %cf{0;1} := %rbx{15;1}
[(0xd7,4)] %rbx{8;8} := (LSH %rbx{8;8} 0x1{0;8}){0;8}
[(0xd7,5)] StaticArrow (0xd7,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xd7,2)
[(0xd7,6)] StaticArrow (0xd7,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xd7,7)StaticArrow (0xd7,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xd7,8)
[(0xd7,7)] StaticArrow (0xd7,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xd9,0)StaticArrow (0xd7,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xd7,8)
[(0xd7,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0xd7,9)] %sf{0;1} := %rbx{15;1}
[(0xd7,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0xd7,11)] StaticArrow (0xd7,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xd9,0)
[(0xd9,0)] 

**** Decode instruction: shl    %cl,%ch
[(0xd9,0)] @{asm:=shl    %cl,%ch}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0xd9,1)] %tmpr1_8{0;8} := %rcx{8;8}
[(0xd9,2)] StaticArrow (0xd9,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xd9,3)StaticArrow (0xd9,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xd9,6)
[(0xd9,3)] %cf{0;1} := %rcx{15;1}
[(0xd9,4)] %rcx{8;8} := (LSH %rcx{8;8} 0x1{0;8}){0;8}
[(0xd9,5)] StaticArrow (0xd9,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xd9,2)
[(0xd9,6)] StaticArrow (0xd9,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xd9,7)StaticArrow (0xd9,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xd9,8)
[(0xd9,7)] StaticArrow (0xd9,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xdb,0)StaticArrow (0xd9,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xd9,8)
[(0xd9,8)] %of{0;1} := (XOR %cf{0;1} %rcx{15;1}){0;1}
[(0xd9,9)] %sf{0;1} := %rcx{15;1}
[(0xd9,10)] %zf{0;1} := (EQ %rcx{8;8} 0x0{0;8}){0;1}
[(0xd9,11)] StaticArrow (0xd9,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xdb,0)
[(0xdb,0)] 

**** Decode instruction: shlb   %cl,0x12345678
[(0xdb,0)] @{asm:=shlb   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0xdb,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xdb,2)] StaticArrow (0xdb,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xdb,3)StaticArrow (0xdb,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xdb,6)
[(0xdb,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0xdb,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xdb,5)] StaticArrow (0xdb,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xdb,2)
[(0xdb,6)] StaticArrow (0xdb,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xdb,7)StaticArrow (0xdb,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xdb,8)
[(0xdb,7)] StaticArrow (0xdb,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xe2,0)StaticArrow (0xdb,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xdb,8)
[(0xdb,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0xdb,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xdb,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xdb,11)] StaticArrow (0xdb,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xe2,0)
[(0xe2,0)] 

**** Decode instruction: shl    $0x3,%bh
[(0xe2,0)] @{asm:=shl    $0x3,%bh}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0xe2,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0xe2,2)] StaticArrow (0xe2,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xe2,3)StaticArrow (0xe2,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xe2,6)
[(0xe2,3)] %cf{0;1} := %rbx{15;1}
[(0xe2,4)] %rbx{8;8} := (LSH %rbx{8;8} 0x1{0;8}){0;8}
[(0xe2,5)] StaticArrow (0xe2,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xe2,2)
[(0xe2,6)] StaticArrow (0xe2,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0xe2,7)StaticArrow (0xe2,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xe2,8)
[(0xe2,7)] StaticArrow (0xe2,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0xe5,0)StaticArrow (0xe2,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xe2,8)
[(0xe2,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0xe2,9)] %sf{0;1} := %rbx{15;1}
[(0xe2,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0xe2,11)] StaticArrow (0xe2,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xe5,0)
[(0xe5,0)] 

**** Decode instruction: shlb   $0x3,0x12345678
[(0xe5,0)] @{asm:=shlb   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0xe5,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xe5,2)] StaticArrow (0xe5,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xe5,3)StaticArrow (0xe5,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xe5,6)
[(0xe5,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0xe5,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xe5,5)] StaticArrow (0xe5,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xe5,2)
[(0xe5,6)] StaticArrow (0xe5,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0xe5,7)StaticArrow (0xe5,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xe5,8)
[(0xe5,7)] StaticArrow (0xe5,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0xed,0)StaticArrow (0xe5,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xe5,8)
[(0xe5,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0xe5,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xe5,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xe5,11)] StaticArrow (0xe5,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xed,0)
[(0xed,0)] 

**** Decode instruction: shl    %bx
[(0xed,0)] @{asm:=shl    %bx}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0xed,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0xed,2)] StaticArrow (0xed,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xed,3)StaticArrow (0xed,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xed,6)
[(0xed,3)] %cf{0;1} := %rbx{15;1}
[(0xed,4)] %rbx{0;16} := (LSH %rbx{0;16} 0x1{0;16}){0;16}
[(0xed,5)] StaticArrow (0xed,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xed,2)
[(0xed,6)] StaticArrow (0xed,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0xed,7)StaticArrow (0xed,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xed,8)
[(0xed,7)] StaticArrow (0xed,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0xf0,0)StaticArrow (0xed,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xed,8)
[(0xed,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0xed,9)] %sf{0;1} := %rbx{15;1}
[(0xed,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0xed,11)] StaticArrow (0xed,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xf0,0)
[(0xf0,0)] 

**** Decode instruction: shlw   0x12345678
[(0xf0,0)] @{asm:=shlw   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0xf0,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xf0,2)] StaticArrow (0xf0,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xf0,3)StaticArrow (0xf0,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xf0,6)
[(0xf0,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0xf0,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xf0,5)] StaticArrow (0xf0,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xf0,2)
[(0xf0,6)] StaticArrow (0xf0,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0xf0,7)StaticArrow (0xf0,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xf0,8)
[(0xf0,7)] StaticArrow (0xf0,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0xf8,0)StaticArrow (0xf0,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xf0,8)
[(0xf0,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0xf0,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xf0,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xf0,11)] StaticArrow (0xf0,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xf8,0)
[(0xf8,0)] 

**** Decode instruction: shl    %cl,%bx
[(0xf8,0)] @{asm:=shl    %cl,%bx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0xf8,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0xf8,2)] StaticArrow (0xf8,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xf8,3)StaticArrow (0xf8,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xf8,6)
[(0xf8,3)] %cf{0;1} := %rbx{15;1}
[(0xf8,4)] %rbx{0;16} := (LSH %rbx{0;16} 0x1{0;16}){0;16}
[(0xf8,5)] StaticArrow (0xf8,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xf8,2)
[(0xf8,6)] StaticArrow (0xf8,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xf8,7)StaticArrow (0xf8,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xf8,8)
[(0xf8,7)] StaticArrow (0xf8,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xfb,0)StaticArrow (0xf8,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xf8,8)
[(0xf8,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0xf8,9)] %sf{0;1} := %rbx{15;1}
[(0xf8,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0xf8,11)] StaticArrow (0xf8,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xfb,0)
[(0xfb,0)] 

**** Decode instruction: shl    %cl,%cx
[(0xfb,0)] @{asm:=shl    %cl,%cx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0xfb,1)] %tmpr1_16{0;16} := %rcx{0;16}
[(0xfb,2)] StaticArrow (0xfb,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xfb,3)StaticArrow (0xfb,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xfb,6)
[(0xfb,3)] %cf{0;1} := %rcx{15;1}
[(0xfb,4)] %rcx{0;16} := (LSH %rcx{0;16} 0x1{0;16}){0;16}
[(0xfb,5)] StaticArrow (0xfb,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xfb,2)
[(0xfb,6)] StaticArrow (0xfb,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xfb,7)StaticArrow (0xfb,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xfb,8)
[(0xfb,7)] StaticArrow (0xfb,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0xfe,0)StaticArrow (0xfb,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xfb,8)
[(0xfb,8)] %of{0;1} := (XOR %cf{0;1} %rcx{15;1}){0;1}
[(0xfb,9)] %sf{0;1} := %rcx{15;1}
[(0xfb,10)] %zf{0;1} := (EQ %rcx{0;16} 0x0{0;16}){0;1}
[(0xfb,11)] StaticArrow (0xfb,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xfe,0)
[(0xfe,0)] 

**** Decode instruction: shlw   %cl,0x12345678
[(0xfe,0)] @{asm:=shlw   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0xfe,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0xfe,2)] StaticArrow (0xfe,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0xfe,3)StaticArrow (0xfe,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xfe,6)
[(0xfe,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0xfe,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0xfe,5)] StaticArrow (0xfe,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0xfe,2)
[(0xfe,6)] StaticArrow (0xfe,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0xfe,7)StaticArrow (0xfe,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0xfe,8)
[(0xfe,7)] StaticArrow (0xfe,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x106,0)StaticArrow (0xfe,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0xfe,8)
[(0xfe,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0xfe,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0xfe,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0xfe,11)] StaticArrow (0xfe,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x106,0)
[(0x106,0)] 

**** Decode instruction: shl    $0x3,%bx
[(0x106,0)] @{asm:=shl    $0x3,%bx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x106,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x106,2)] StaticArrow (0x106,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x106,3)StaticArrow (0x106,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x106,6)
[(0x106,3)] %cf{0;1} := %rbx{15;1}
[(0x106,4)] %rbx{0;16} := (LSH %rbx{0;16} 0x1{0;16}){0;16}
[(0x106,5)] StaticArrow (0x106,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x106,2)
[(0x106,6)] StaticArrow (0x106,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x106,7)StaticArrow (0x106,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x106,8)
[(0x106,7)] StaticArrow (0x106,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x10a,0)StaticArrow (0x106,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x106,8)
[(0x106,8)] %of{0;1} := (XOR %cf{0;1} %rbx{15;1}){0;1}
[(0x106,9)] %sf{0;1} := %rbx{15;1}
[(0x106,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x106,11)] StaticArrow (0x106,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x10a,0)
[(0x10a,0)] 

**** Decode instruction: shlw   $0x3,0x12345678
[(0x10a,0)] @{asm:=shlw   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0x10a,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x10a,2)] StaticArrow (0x10a,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x10a,3)StaticArrow (0x10a,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x10a,6)
[(0x10a,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x10a,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x10a,5)] StaticArrow (0x10a,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x10a,2)
[(0x10a,6)] StaticArrow (0x10a,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x10a,7)StaticArrow (0x10a,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x10a,8)
[(0x10a,7)] StaticArrow (0x10a,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x113,0)StaticArrow (0x10a,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x10a,8)
[(0x10a,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x10a,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x10a,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x10a,11)] StaticArrow (0x10a,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x113,0)
[(0x113,0)] 

**** Decode instruction: shl    %ebx
[(0x113,0)] @{asm:=shl    %ebx}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0x113,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0x113,2)] StaticArrow (0x113,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x113,3)StaticArrow (0x113,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x113,6)
[(0x113,3)] %cf{0;1} := %rbx{31;1}
[(0x113,4)] %rbx{0;32} := (LSH %rbx{0;32} 0x1{0;32}){0;32}
[(0x113,5)] StaticArrow (0x113,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x113,2)
[(0x113,6)] StaticArrow (0x113,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x113,7)StaticArrow (0x113,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x113,8)
[(0x113,7)] StaticArrow (0x113,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x115,0)StaticArrow (0x113,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x113,8)
[(0x113,8)] %of{0;1} := (XOR %cf{0;1} %rbx{31;1}){0;1}
[(0x113,9)] %sf{0;1} := %rbx{31;1}
[(0x113,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0x113,11)] StaticArrow (0x113,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x115,0)
[(0x115,0)] 

**** Decode instruction: shll   0x12345678
[(0x115,0)] @{asm:=shll   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0x115,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x115,2)] StaticArrow (0x115,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x115,3)StaticArrow (0x115,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x115,6)
[(0x115,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x115,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x115,5)] StaticArrow (0x115,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x115,2)
[(0x115,6)] StaticArrow (0x115,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x115,7)StaticArrow (0x115,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x115,8)
[(0x115,7)] StaticArrow (0x115,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x11c,0)StaticArrow (0x115,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x115,8)
[(0x115,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x115,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x115,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x115,11)] StaticArrow (0x115,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x11c,0)
[(0x11c,0)] 

**** Decode instruction: shl    %cl,%ebx
[(0x11c,0)] @{asm:=shl    %cl,%ebx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x11c,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0x11c,2)] StaticArrow (0x11c,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x11c,3)StaticArrow (0x11c,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x11c,6)
[(0x11c,3)] %cf{0;1} := %rbx{31;1}
[(0x11c,4)] %rbx{0;32} := (LSH %rbx{0;32} 0x1{0;32}){0;32}
[(0x11c,5)] StaticArrow (0x11c,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x11c,2)
[(0x11c,6)] StaticArrow (0x11c,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x11c,7)StaticArrow (0x11c,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x11c,8)
[(0x11c,7)] StaticArrow (0x11c,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x11e,0)StaticArrow (0x11c,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x11c,8)
[(0x11c,8)] %of{0;1} := (XOR %cf{0;1} %rbx{31;1}){0;1}
[(0x11c,9)] %sf{0;1} := %rbx{31;1}
[(0x11c,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0x11c,11)] StaticArrow (0x11c,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x11e,0)
[(0x11e,0)] 

**** Decode instruction: shl    %cl,%ecx
[(0x11e,0)] @{asm:=shl    %cl,%ecx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x11e,1)] %tmpr1_32{0;32} := %rcx{0;32}
[(0x11e,2)] StaticArrow (0x11e,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x11e,3)StaticArrow (0x11e,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x11e,6)
[(0x11e,3)] %cf{0;1} := %rcx{31;1}
[(0x11e,4)] %rcx{0;32} := (LSH %rcx{0;32} 0x1{0;32}){0;32}
[(0x11e,5)] StaticArrow (0x11e,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x11e,2)
[(0x11e,6)] StaticArrow (0x11e,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x11e,7)StaticArrow (0x11e,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x11e,8)
[(0x11e,7)] StaticArrow (0x11e,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x120,0)StaticArrow (0x11e,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x11e,8)
[(0x11e,8)] %of{0;1} := (XOR %cf{0;1} %rcx{31;1}){0;1}
[(0x11e,9)] %sf{0;1} := %rcx{31;1}
[(0x11e,10)] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1}
[(0x11e,11)] StaticArrow (0x11e,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x120,0)
[(0x120,0)] 

**** Decode instruction: shll   %cl,0x12345678
[(0x120,0)] @{asm:=shll   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0x120,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x120,2)] StaticArrow (0x120,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x120,3)StaticArrow (0x120,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x120,6)
[(0x120,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x120,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x120,5)] StaticArrow (0x120,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x120,2)
[(0x120,6)] StaticArrow (0x120,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x120,7)StaticArrow (0x120,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x120,8)
[(0x120,7)] StaticArrow (0x120,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x127,0)StaticArrow (0x120,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x120,8)
[(0x120,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x120,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x120,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x120,11)] StaticArrow (0x120,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x127,0)
[(0x127,0)] 

**** Decode instruction: shl    $0x3,%ebx
[(0x127,0)] @{asm:=shl    $0x3,%ebx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x127,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0x127,2)] StaticArrow (0x127,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x127,3)StaticArrow (0x127,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x127,6)
[(0x127,3)] %cf{0;1} := %rbx{31;1}
[(0x127,4)] %rbx{0;32} := (LSH %rbx{0;32} 0x1{0;32}){0;32}
[(0x127,5)] StaticArrow (0x127,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x127,2)
[(0x127,6)] StaticArrow (0x127,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x127,7)StaticArrow (0x127,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x127,8)
[(0x127,7)] StaticArrow (0x127,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x12a,0)StaticArrow (0x127,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x127,8)
[(0x127,8)] %of{0;1} := (XOR %cf{0;1} %rbx{31;1}){0;1}
[(0x127,9)] %sf{0;1} := %rbx{31;1}
[(0x127,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0x127,11)] StaticArrow (0x127,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x12a,0)
[(0x12a,0)] 

**** Decode instruction: shl    $0x3,%ecx
[(0x12a,0)] @{asm:=shl    $0x3,%ecx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x12a,1)] %tmpr1_32{0;32} := %rcx{0;32}
[(0x12a,2)] StaticArrow (0x12a,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x12a,3)StaticArrow (0x12a,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x12a,6)
[(0x12a,3)] %cf{0;1} := %rcx{31;1}
[(0x12a,4)] %rcx{0;32} := (LSH %rcx{0;32} 0x1{0;32}){0;32}
[(0x12a,5)] StaticArrow (0x12a,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x12a,2)
[(0x12a,6)] StaticArrow (0x12a,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x12a,7)StaticArrow (0x12a,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x12a,8)
[(0x12a,7)] StaticArrow (0x12a,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x12d,0)StaticArrow (0x12a,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x12a,8)
[(0x12a,8)] %of{0;1} := (XOR %cf{0;1} %rcx{31;1}){0;1}
[(0x12a,9)] %sf{0;1} := %rcx{31;1}
[(0x12a,10)] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1}
[(0x12a,11)] StaticArrow (0x12a,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x12d,0)
[(0x12d,0)] 

**** Decode instruction: shll   $0x3,0x12345678
[(0x12d,0)] @{asm:=shll   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0x12d,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x12d,2)] StaticArrow (0x12d,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x12d,3)StaticArrow (0x12d,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x12d,6)
[(0x12d,3)] %cf{0;1} := [0x12345678{0;32}]{63;1}
[(0x12d,4)] [0x12345678{0;32}]{0;64} := (LSH [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x12d,5)] StaticArrow (0x12d,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x12d,2)
[(0x12d,6)] StaticArrow (0x12d,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x12d,7)StaticArrow (0x12d,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x12d,8)
[(0x12d,7)] StaticArrow (0x12d,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x135,0)StaticArrow (0x12d,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x12d,8)
[(0x12d,8)] %of{0;1} := (XOR %cf{0;1} [0x12345678{0;32}]{63;1}){0;1}
[(0x12d,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x12d,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x12d,11)] StaticArrow (0x12d,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x135,0)
[(0x135,0)] 

**** Decode instruction: shr    %bh
[(0x135,0)] @{asm:=shr    %bh}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0x135,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0x135,2)] StaticArrow (0x135,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x135,3)StaticArrow (0x135,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x135,6)
[(0x135,3)] %cf{0;1} := %rbx{8;1}
[(0x135,4)] %rbx{8;8} := (RSH_U %rbx{8;8} 0x1{0;8}){0;8}
[(0x135,5)] StaticArrow (0x135,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x135,2)
[(0x135,6)] StaticArrow (0x135,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x135,7)StaticArrow (0x135,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x135,8)
[(0x135,7)] StaticArrow (0x135,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x137,0)StaticArrow (0x135,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x135,8)
[(0x135,8)] %of{0;1} := %tmpr1_8{0;1}
[(0x135,9)] %sf{0;1} := %rbx{15;1}
[(0x135,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0x135,11)] StaticArrow (0x135,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x137,0)
[(0x137,0)] 

**** Decode instruction: shrb   0x12345678
[(0x137,0)] @{asm:=shrb   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0x137,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x137,2)] StaticArrow (0x137,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x137,3)StaticArrow (0x137,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x137,6)
[(0x137,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x137,4)] [0x12345678{0;32}]{0;64} := (RSH_U [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x137,5)] StaticArrow (0x137,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x137,2)
[(0x137,6)] StaticArrow (0x137,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x137,7)StaticArrow (0x137,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x137,8)
[(0x137,7)] StaticArrow (0x137,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x13e,0)StaticArrow (0x137,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x137,8)
[(0x137,8)] %of{0;1} := %tmpr1_64{0;1}
[(0x137,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x137,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x137,11)] StaticArrow (0x137,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x13e,0)
[(0x13e,0)] 

**** Decode instruction: shr    %cl,%bh
[(0x13e,0)] @{asm:=shr    %cl,%bh}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x13e,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0x13e,2)] StaticArrow (0x13e,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x13e,3)StaticArrow (0x13e,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x13e,6)
[(0x13e,3)] %cf{0;1} := %rbx{8;1}
[(0x13e,4)] %rbx{8;8} := (RSH_U %rbx{8;8} 0x1{0;8}){0;8}
[(0x13e,5)] StaticArrow (0x13e,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x13e,2)
[(0x13e,6)] StaticArrow (0x13e,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x13e,7)StaticArrow (0x13e,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x13e,8)
[(0x13e,7)] StaticArrow (0x13e,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x140,0)StaticArrow (0x13e,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x13e,8)
[(0x13e,8)] %of{0;1} := %tmpr1_8{0;1}
[(0x13e,9)] %sf{0;1} := %rbx{15;1}
[(0x13e,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0x13e,11)] StaticArrow (0x13e,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x140,0)
[(0x140,0)] 

**** Decode instruction: shr    %cl,%ch
[(0x140,0)] @{asm:=shr    %cl,%ch}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x140,1)] %tmpr1_8{0;8} := %rcx{8;8}
[(0x140,2)] StaticArrow (0x140,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x140,3)StaticArrow (0x140,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x140,6)
[(0x140,3)] %cf{0;1} := %rcx{8;1}
[(0x140,4)] %rcx{8;8} := (RSH_U %rcx{8;8} 0x1{0;8}){0;8}
[(0x140,5)] StaticArrow (0x140,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x140,2)
[(0x140,6)] StaticArrow (0x140,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x140,7)StaticArrow (0x140,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x140,8)
[(0x140,7)] StaticArrow (0x140,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x142,0)StaticArrow (0x140,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x140,8)
[(0x140,8)] %of{0;1} := %tmpr1_8{0;1}
[(0x140,9)] %sf{0;1} := %rcx{15;1}
[(0x140,10)] %zf{0;1} := (EQ %rcx{8;8} 0x0{0;8}){0;1}
[(0x140,11)] StaticArrow (0x140,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x142,0)
[(0x142,0)] 

**** Decode instruction: shrb   %cl,0x12345678
[(0x142,0)] @{asm:=shrb   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0x142,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x142,2)] StaticArrow (0x142,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x142,3)StaticArrow (0x142,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x142,6)
[(0x142,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x142,4)] [0x12345678{0;32}]{0;64} := (RSH_U [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x142,5)] StaticArrow (0x142,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x142,2)
[(0x142,6)] StaticArrow (0x142,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x142,7)StaticArrow (0x142,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x142,8)
[(0x142,7)] StaticArrow (0x142,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x149,0)StaticArrow (0x142,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x142,8)
[(0x142,8)] %of{0;1} := %tmpr1_64{0;1}
[(0x142,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x142,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x142,11)] StaticArrow (0x142,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x149,0)
[(0x149,0)] 

**** Decode instruction: shr    $0x3,%bh
[(0x149,0)] @{asm:=shr    $0x3,%bh}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x149,1)] %tmpr1_8{0;8} := %rbx{8;8}
[(0x149,2)] StaticArrow (0x149,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x149,3)StaticArrow (0x149,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x149,6)
[(0x149,3)] %cf{0;1} := %rbx{8;1}
[(0x149,4)] %rbx{8;8} := (RSH_U %rbx{8;8} 0x1{0;8}){0;8}
[(0x149,5)] StaticArrow (0x149,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x149,2)
[(0x149,6)] StaticArrow (0x149,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x149,7)StaticArrow (0x149,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x149,8)
[(0x149,7)] StaticArrow (0x149,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x14c,0)StaticArrow (0x149,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x149,8)
[(0x149,8)] %of{0;1} := %tmpr1_8{0;1}
[(0x149,9)] %sf{0;1} := %rbx{15;1}
[(0x149,10)] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1}
[(0x149,11)] StaticArrow (0x149,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x14c,0)
[(0x14c,0)] 

**** Decode instruction: shrb   $0x3,0x12345678
[(0x14c,0)] @{asm:=shrb   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0x14c,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x14c,2)] StaticArrow (0x14c,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x14c,3)StaticArrow (0x14c,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x14c,6)
[(0x14c,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x14c,4)] [0x12345678{0;32}]{0;64} := (RSH_U [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x14c,5)] StaticArrow (0x14c,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x14c,2)
[(0x14c,6)] StaticArrow (0x14c,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x14c,7)StaticArrow (0x14c,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x14c,8)
[(0x14c,7)] StaticArrow (0x14c,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x154,0)StaticArrow (0x14c,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x14c,8)
[(0x14c,8)] %of{0;1} := %tmpr1_64{0;1}
[(0x14c,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x14c,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x14c,11)] StaticArrow (0x14c,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x154,0)
[(0x154,0)] 

**** Decode instruction: shr    %bx
[(0x154,0)] @{asm:=shr    %bx}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0x154,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x154,2)] StaticArrow (0x154,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x154,3)StaticArrow (0x154,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x154,6)
[(0x154,3)] %cf{0;1} := %rbx{0;1}
[(0x154,4)] %rbx{0;16} := (RSH_U %rbx{0;16} 0x1{0;16}){0;16}
[(0x154,5)] StaticArrow (0x154,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x154,2)
[(0x154,6)] StaticArrow (0x154,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x154,7)StaticArrow (0x154,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x154,8)
[(0x154,7)] StaticArrow (0x154,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x157,0)StaticArrow (0x154,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x154,8)
[(0x154,8)] %of{0;1} := %tmpr1_16{0;1}
[(0x154,9)] %sf{0;1} := %rbx{15;1}
[(0x154,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x154,11)] StaticArrow (0x154,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x157,0)
[(0x157,0)] 

**** Decode instruction: shrw   0x12345678
[(0x157,0)] @{asm:=shrw   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0x157,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x157,2)] StaticArrow (0x157,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x157,3)StaticArrow (0x157,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x157,6)
[(0x157,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x157,4)] [0x12345678{0;32}]{0;64} := (RSH_U [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x157,5)] StaticArrow (0x157,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x157,2)
[(0x157,6)] StaticArrow (0x157,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x157,7)StaticArrow (0x157,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x157,8)
[(0x157,7)] StaticArrow (0x157,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x15f,0)StaticArrow (0x157,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x157,8)
[(0x157,8)] %of{0;1} := %tmpr1_64{0;1}
[(0x157,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x157,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x157,11)] StaticArrow (0x157,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x15f,0)
[(0x15f,0)] 

**** Decode instruction: shr    %cl,%bx
[(0x15f,0)] @{asm:=shr    %cl,%bx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x15f,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x15f,2)] StaticArrow (0x15f,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x15f,3)StaticArrow (0x15f,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x15f,6)
[(0x15f,3)] %cf{0;1} := %rbx{0;1}
[(0x15f,4)] %rbx{0;16} := (RSH_U %rbx{0;16} 0x1{0;16}){0;16}
[(0x15f,5)] StaticArrow (0x15f,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x15f,2)
[(0x15f,6)] StaticArrow (0x15f,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x15f,7)StaticArrow (0x15f,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x15f,8)
[(0x15f,7)] StaticArrow (0x15f,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x162,0)StaticArrow (0x15f,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x15f,8)
[(0x15f,8)] %of{0;1} := %tmpr1_16{0;1}
[(0x15f,9)] %sf{0;1} := %rbx{15;1}
[(0x15f,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x15f,11)] StaticArrow (0x15f,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x162,0)
[(0x162,0)] 

**** Decode instruction: shr    %cl,%cx
[(0x162,0)] @{asm:=shr    %cl,%cx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x162,1)] %tmpr1_16{0;16} := %rcx{0;16}
[(0x162,2)] StaticArrow (0x162,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x162,3)StaticArrow (0x162,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x162,6)
[(0x162,3)] %cf{0;1} := %rcx{0;1}
[(0x162,4)] %rcx{0;16} := (RSH_U %rcx{0;16} 0x1{0;16}){0;16}
[(0x162,5)] StaticArrow (0x162,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x162,2)
[(0x162,6)] StaticArrow (0x162,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x162,7)StaticArrow (0x162,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x162,8)
[(0x162,7)] StaticArrow (0x162,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x165,0)StaticArrow (0x162,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x162,8)
[(0x162,8)] %of{0;1} := %tmpr1_16{0;1}
[(0x162,9)] %sf{0;1} := %rcx{15;1}
[(0x162,10)] %zf{0;1} := (EQ %rcx{0;16} 0x0{0;16}){0;1}
[(0x162,11)] StaticArrow (0x162,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x165,0)
[(0x165,0)] 

**** Decode instruction: shrw   %cl,0x12345678
[(0x165,0)] @{asm:=shrw   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0x165,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x165,2)] StaticArrow (0x165,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x165,3)StaticArrow (0x165,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x165,6)
[(0x165,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x165,4)] [0x12345678{0;32}]{0;64} := (RSH_U [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x165,5)] StaticArrow (0x165,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x165,2)
[(0x165,6)] StaticArrow (0x165,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x165,7)StaticArrow (0x165,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x165,8)
[(0x165,7)] StaticArrow (0x165,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x16d,0)StaticArrow (0x165,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x165,8)
[(0x165,8)] %of{0;1} := %tmpr1_64{0;1}
[(0x165,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x165,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x165,11)] StaticArrow (0x165,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x16d,0)
[(0x16d,0)] 

**** Decode instruction: shr    $0x3,%bx
[(0x16d,0)] @{asm:=shr    $0x3,%bx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x16d,1)] %tmpr1_16{0;16} := %rbx{0;16}
[(0x16d,2)] StaticArrow (0x16d,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x16d,3)StaticArrow (0x16d,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x16d,6)
[(0x16d,3)] %cf{0;1} := %rbx{0;1}
[(0x16d,4)] %rbx{0;16} := (RSH_U %rbx{0;16} 0x1{0;16}){0;16}
[(0x16d,5)] StaticArrow (0x16d,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x16d,2)
[(0x16d,6)] StaticArrow (0x16d,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x16d,7)StaticArrow (0x16d,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x16d,8)
[(0x16d,7)] StaticArrow (0x16d,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x171,0)StaticArrow (0x16d,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x16d,8)
[(0x16d,8)] %of{0;1} := %tmpr1_16{0;1}
[(0x16d,9)] %sf{0;1} := %rbx{15;1}
[(0x16d,10)] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1}
[(0x16d,11)] StaticArrow (0x16d,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x171,0)
[(0x171,0)] 

**** Decode instruction: shrw   $0x3,0x12345678
[(0x171,0)] @{asm:=shrw   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0x171,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x171,2)] StaticArrow (0x171,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x171,3)StaticArrow (0x171,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x171,6)
[(0x171,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x171,4)] [0x12345678{0;32}]{0;64} := (RSH_U [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x171,5)] StaticArrow (0x171,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x171,2)
[(0x171,6)] StaticArrow (0x171,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x171,7)StaticArrow (0x171,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x171,8)
[(0x171,7)] StaticArrow (0x171,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x17a,0)StaticArrow (0x171,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x171,8)
[(0x171,8)] %of{0;1} := %tmpr1_64{0;1}
[(0x171,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x171,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x171,11)] StaticArrow (0x171,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x17a,0)
[(0x17a,0)] 

**** Decode instruction: shr    %ebx
[(0x17a,0)] @{asm:=shr    %ebx}@ %tmpr0_8{0;8} := (AND 0x1{0;32} 0x1f{0;32}){0;8}
[(0x17a,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0x17a,2)] StaticArrow (0x17a,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x17a,3)StaticArrow (0x17a,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x17a,6)
[(0x17a,3)] %cf{0;1} := %rbx{0;1}
[(0x17a,4)] %rbx{0;32} := (RSH_U %rbx{0;32} 0x1{0;32}){0;32}
[(0x17a,5)] StaticArrow (0x17a,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x17a,2)
[(0x17a,6)] StaticArrow (0x17a,6) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x17a,7)StaticArrow (0x17a,6) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x17a,8)
[(0x17a,7)] StaticArrow (0x17a,7) Skip << (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x17c,0)StaticArrow (0x17a,7) Skip << (NOT (EQ (AND 0x1{0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x17a,8)
[(0x17a,8)] %of{0;1} := %tmpr1_32{0;1}
[(0x17a,9)] %sf{0;1} := %rbx{31;1}
[(0x17a,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0x17a,11)] StaticArrow (0x17a,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x17c,0)
[(0x17c,0)] 

**** Decode instruction: shrl   0x12345678
[(0x17c,0)] @{asm:=shrl   0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8}
[(0x17c,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x17c,2)] StaticArrow (0x17c,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x17c,3)StaticArrow (0x17c,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x17c,6)
[(0x17c,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x17c,4)] [0x12345678{0;32}]{0;64} := (RSH_U [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x17c,5)] StaticArrow (0x17c,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x17c,2)
[(0x17c,6)] StaticArrow (0x17c,6) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1} >> --> (0x17c,7)StaticArrow (0x17c,6) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x17c,8)
[(0x17c,7)] StaticArrow (0x17c,7) Skip << (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1} >> --> (0x183,0)StaticArrow (0x17c,7) Skip << (NOT (EQ (AND (EXTRACT 0x1{0;32} 0x0{0;64} 0x40{0;32}){0;32} 0x1f{0;32}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x17c,8)
[(0x17c,8)] %of{0;1} := %tmpr1_64{0;1}
[(0x17c,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x17c,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x17c,11)] StaticArrow (0x17c,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x183,0)
[(0x183,0)] 

**** Decode instruction: shr    %cl,%ebx
[(0x183,0)] @{asm:=shr    %cl,%ebx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x183,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0x183,2)] StaticArrow (0x183,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x183,3)StaticArrow (0x183,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x183,6)
[(0x183,3)] %cf{0;1} := %rbx{0;1}
[(0x183,4)] %rbx{0;32} := (RSH_U %rbx{0;32} 0x1{0;32}){0;32}
[(0x183,5)] StaticArrow (0x183,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x183,2)
[(0x183,6)] StaticArrow (0x183,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x183,7)StaticArrow (0x183,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x183,8)
[(0x183,7)] StaticArrow (0x183,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x185,0)StaticArrow (0x183,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x183,8)
[(0x183,8)] %of{0;1} := %tmpr1_32{0;1}
[(0x183,9)] %sf{0;1} := %rbx{31;1}
[(0x183,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0x183,11)] StaticArrow (0x183,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x185,0)
[(0x185,0)] 

**** Decode instruction: shr    %cl,%ecx
[(0x185,0)] @{asm:=shr    %cl,%ecx}@ %tmpr0_8{0;8} := (AND %rcx{0;8} 0x1f{0;8}){0;8}
[(0x185,1)] %tmpr1_32{0;32} := %rcx{0;32}
[(0x185,2)] StaticArrow (0x185,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x185,3)StaticArrow (0x185,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x185,6)
[(0x185,3)] %cf{0;1} := %rcx{0;1}
[(0x185,4)] %rcx{0;32} := (RSH_U %rcx{0;32} 0x1{0;32}){0;32}
[(0x185,5)] StaticArrow (0x185,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x185,2)
[(0x185,6)] StaticArrow (0x185,6) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x185,7)StaticArrow (0x185,6) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x185,8)
[(0x185,7)] StaticArrow (0x185,7) Skip << (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x187,0)StaticArrow (0x185,7) Skip << (NOT (EQ (AND %rcx{0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x185,8)
[(0x185,8)] %of{0;1} := %tmpr1_32{0;1}
[(0x185,9)] %sf{0;1} := %rcx{31;1}
[(0x185,10)] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1}
[(0x185,11)] StaticArrow (0x185,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x187,0)
[(0x187,0)] 

**** Decode instruction: shrl   %cl,0x12345678
[(0x187,0)] @{asm:=shrl   %cl,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8}
[(0x187,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x187,2)] StaticArrow (0x187,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x187,3)StaticArrow (0x187,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x187,6)
[(0x187,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x187,4)] [0x12345678{0;32}]{0;64} := (RSH_U [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x187,5)] StaticArrow (0x187,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x187,2)
[(0x187,6)] StaticArrow (0x187,6) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1} >> --> (0x187,7)StaticArrow (0x187,6) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x187,8)
[(0x187,7)] StaticArrow (0x187,7) Skip << (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1} >> --> (0x18e,0)StaticArrow (0x187,7) Skip << (NOT (EQ (AND (EXTRACT %rcx{0;8} 0x0{0;64} 0x40{0;32}){0;8} 0x1f{0;8}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x187,8)
[(0x187,8)] %of{0;1} := %tmpr1_64{0;1}
[(0x187,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x187,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x187,11)] StaticArrow (0x187,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x18e,0)
[(0x18e,0)] 

**** Decode instruction: shr    $0x3,%ebx
[(0x18e,0)] @{asm:=shr    $0x3,%ebx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x18e,1)] %tmpr1_32{0;32} := %rbx{0;32}
[(0x18e,2)] StaticArrow (0x18e,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x18e,3)StaticArrow (0x18e,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x18e,6)
[(0x18e,3)] %cf{0;1} := %rbx{0;1}
[(0x18e,4)] %rbx{0;32} := (RSH_U %rbx{0;32} 0x1{0;32}){0;32}
[(0x18e,5)] StaticArrow (0x18e,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x18e,2)
[(0x18e,6)] StaticArrow (0x18e,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x18e,7)StaticArrow (0x18e,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x18e,8)
[(0x18e,7)] StaticArrow (0x18e,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x191,0)StaticArrow (0x18e,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x18e,8)
[(0x18e,8)] %of{0;1} := %tmpr1_32{0;1}
[(0x18e,9)] %sf{0;1} := %rbx{31;1}
[(0x18e,10)] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1}
[(0x18e,11)] StaticArrow (0x18e,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x191,0)
[(0x191,0)] 

**** Decode instruction: shr    $0x3,%ecx
[(0x191,0)] @{asm:=shr    $0x3,%ecx}@ %tmpr0_8{0;8} := (AND 0x3{0;64} 0x1f{0;64}){0;8}
[(0x191,1)] %tmpr1_32{0;32} := %rcx{0;32}
[(0x191,2)] StaticArrow (0x191,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x191,3)StaticArrow (0x191,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x191,6)
[(0x191,3)] %cf{0;1} := %rcx{0;1}
[(0x191,4)] %rcx{0;32} := (RSH_U %rcx{0;32} 0x1{0;32}){0;32}
[(0x191,5)] StaticArrow (0x191,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x191,2)
[(0x191,6)] StaticArrow (0x191,6) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x191,7)StaticArrow (0x191,6) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x191,8)
[(0x191,7)] StaticArrow (0x191,7) Skip << (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x194,0)StaticArrow (0x191,7) Skip << (NOT (EQ (AND 0x3{0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x191,8)
[(0x191,8)] %of{0;1} := %tmpr1_32{0;1}
[(0x191,9)] %sf{0;1} := %rcx{31;1}
[(0x191,10)] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1}
[(0x191,11)] StaticArrow (0x191,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x194,0)
[(0x194,0)] 

**** Decode instruction: shrl   $0x3,0x12345678
[(0x194,0)] @{asm:=shrl   $0x3,0x12345678}@ %tmpr0_8{0;8} := (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8}
[(0x194,1)] %tmpr1_64{0;64} := [0x12345678{0;32}]{0;64}
[(0x194,2)] StaticArrow (0x194,2) Skip << (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1} >> --> (0x194,3)StaticArrow (0x194,2) Skip << (NOT (NEQ %tmpr0_8{0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x194,6)
[(0x194,3)] %cf{0;1} := [0x12345678{0;32}]{0;1}
[(0x194,4)] [0x12345678{0;32}]{0;64} := (RSH_U [0x12345678{0;32}]{0;64} 0x1{0;64}){0;64}
[(0x194,5)] StaticArrow (0x194,5) %tmpr0_8{0;8} := (SUB %tmpr0_8{0;8} 0x1{0;8}){0;8}  --> (0x194,2)
[(0x194,6)] StaticArrow (0x194,6) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1} >> --> (0x194,7)StaticArrow (0x194,6) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x1{0;8}){0;1}){0;1} >> --> (0x194,8)
[(0x194,7)] StaticArrow (0x194,7) Skip << (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1} >> --> (0x19c,0)StaticArrow (0x194,7) Skip << (NOT (EQ (AND (EXTRACT 0x3{0;64} 0x0{0;64} 0x40{0;32}){0;64} 0x1f{0;64}){0;8} 0x0{0;8}){0;1}){0;1} >> --> (0x194,8)
[(0x194,8)] %of{0;1} := %tmpr1_64{0;1}
[(0x194,9)] %sf{0;1} := [0x12345678{0;32}]{63;1}
[(0x194,10)] %zf{0;1} := (EQ [0x12345678{0;32}]{0;64} 0x0{0;64}){0;1}
[(0x194,11)] StaticArrow (0x194,11) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT [0x12345678{0;32}]{0;64} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x19c,0)
[(0x19c,0)] 

