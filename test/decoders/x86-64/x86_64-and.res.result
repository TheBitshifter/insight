**** Decode instruction: and    $0x12,%ah
[0x0,0] @{asm:=and    $0x12,%ah}@ %rax{8;8} := (AND %rax{8;8} 0x12{0;8}){0;8} --> (0x0,1);
[0x0,1] %sf{0;1} := %rax{15;1} --> (0x0,2);
[0x0,2] %zf{0;1} := (EQ %rax{8;8} 0x0{0;8}){0;1} --> (0x0,3);
[0x0,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rax{8;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{8;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{8;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{8;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{8;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{8;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{8;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{8;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x0,4);
[0x0,4] %cf{0;1} := 0x0{0;1} --> (0x0,5);
[0x0,5] %of{0;1} := 0x0{0;1} --> (0x3,0);
[0x3,0]

**** Decode instruction: and    $0x1234,%ax
[0x3,0] @{asm:=and    $0x1234,%ax}@ %rax{0;16} := (AND %rax{0;16} 0x1234{0;16}){0;16} --> (0x3,1);
[0x3,1] %sf{0;1} := %rax{15;1} --> (0x3,2);
[0x3,2] %zf{0;1} := (EQ %rax{0;16} 0x0{0;16}){0;1} --> (0x3,3);
[0x3,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rax{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x3,4);
[0x3,4] %cf{0;1} := 0x0{0;1} --> (0x3,5);
[0x3,5] %of{0;1} := 0x0{0;1} --> (0x7,0);
[0x7,0]

**** Decode instruction: and    $0x12345678,%eax
[0x7,0] @{asm:=and    $0x12345678,%eax}@ %rax{0;32} := (AND %rax{0;32} 0x12345678{0;32}){0;32} --> (0x7,1);
[0x7,1] %sf{0;1} := %rax{31;1} --> (0x7,2);
[0x7,2] %zf{0;1} := (EQ %rax{0;32} 0x0{0;32}){0;1} --> (0x7,3);
[0x7,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rax{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x7,4);
[0x7,4] %cf{0;1} := 0x0{0;1} --> (0x7,5);
[0x7,5] %of{0;1} := 0x0{0;1} --> (0xc,0);
[0xc,0]

**** Decode instruction: and    $0x12345678,%rax
[0xc,0] @{asm:=and    $0x12345678,%rax}@ %rax{0;64} := (AND %rax{0;64} 0x12345678{0;64}){0;64} --> (0xc,1);
[0xc,1] %sf{0;1} := %rax{63;1} --> (0xc,2);
[0xc,2] %zf{0;1} := (EQ %rax{0;64} 0x0{0;64}){0;1} --> (0xc,3);
[0xc,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rax{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xc,4);
[0xc,4] %cf{0;1} := 0x0{0;1} --> (0xc,5);
[0xc,5] %of{0;1} := 0x0{0;1} --> (0x12,0);
[0x12,0]

**** Decode instruction: and    $0x12,%bh
[0x12,0] @{asm:=and    $0x12,%bh}@ %rbx{8;8} := (AND %rbx{8;8} 0x12{0;8}){0;8} --> (0x12,1);
[0x12,1] %sf{0;1} := %rbx{15;1} --> (0x12,2);
[0x12,2] %zf{0;1} := (EQ %rbx{8;8} 0x0{0;8}){0;1} --> (0x12,3);
[0x12,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{8;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{8;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x12,4);
[0x12,4] %cf{0;1} := 0x0{0;1} --> (0x12,5);
[0x12,5] %of{0;1} := 0x0{0;1} --> (0x15,0);
[0x15,0]

**** Decode instruction: andb   $0x12,0x11011972
[0x15,0] @{asm:=andb   $0x12,0x11011972}@ [0x11011972{0;64}]{0;8} := (AND [0x11011972{0;64}]{0;8} 0x12{0;8}){0;8} --> (0x15,1);
[0x15,1] %sf{0;1} := [0x11011972{0;64}]{7;1} --> (0x15,2);
[0x15,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;8} 0x0{0;8}){0;1} --> (0x15,3);
[0x15,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x15,4);
[0x15,4] %cf{0;1} := 0x0{0;1} --> (0x15,5);
[0x15,5] %of{0;1} := 0x0{0;1} --> (0x1d,0);
[0x1d,0]

**** Decode instruction: and    $0x1234,%bx
[0x1d,0] @{asm:=and    $0x1234,%bx}@ %rbx{0;16} := (AND %rbx{0;16} 0x1234{0;16}){0;16} --> (0x1d,1);
[0x1d,1] %sf{0;1} := %rbx{15;1} --> (0x1d,2);
[0x1d,2] %zf{0;1} := (EQ %rbx{0;16} 0x0{0;16}){0;1} --> (0x1d,3);
[0x1d,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x1d,4);
[0x1d,4] %cf{0;1} := 0x0{0;1} --> (0x1d,5);
[0x1d,5] %of{0;1} := 0x0{0;1} --> (0x22,0);
[0x22,0]

**** Decode instruction: andw   $0x1234,0x11011972
[0x22,0] @{asm:=andw   $0x1234,0x11011972}@ [0x11011972{0;64}]{0;16} := (AND [0x11011972{0;64}]{0;16} 0x1234{0;16}){0;16} --> (0x22,1);
[0x22,1] %sf{0;1} := [0x11011972{0;64}]{15;1} --> (0x22,2);
[0x22,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;16} 0x0{0;16}){0;1} --> (0x22,3);
[0x22,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x22,4);
[0x22,4] %cf{0;1} := 0x0{0;1} --> (0x22,5);
[0x22,5] %of{0;1} := 0x0{0;1} --> (0x2c,0);
[0x2c,0]

**** Decode instruction: and    $0x12345678,%ebx
[0x2c,0] @{asm:=and    $0x12345678,%ebx}@ %rbx{0;32} := (AND %rbx{0;32} 0x12345678{0;32}){0;32} --> (0x2c,1);
[0x2c,1] %sf{0;1} := %rbx{31;1} --> (0x2c,2);
[0x2c,2] %zf{0;1} := (EQ %rbx{0;32} 0x0{0;32}){0;1} --> (0x2c,3);
[0x2c,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x2c,4);
[0x2c,4] %cf{0;1} := 0x0{0;1} --> (0x2c,5);
[0x2c,5] %of{0;1} := 0x0{0;1} --> (0x32,0);
[0x32,0]

**** Decode instruction: andl   $0x12345678,0x11011972
[0x32,0] @{asm:=andl   $0x12345678,0x11011972}@ [0x11011972{0;64}]{0;32} := (AND [0x11011972{0;64}]{0;32} 0x12345678{0;32}){0;32} --> (0x32,1);
[0x32,1] %sf{0;1} := [0x11011972{0;64}]{31;1} --> (0x32,2);
[0x32,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;32} 0x0{0;32}){0;1} --> (0x32,3);
[0x32,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x32,4);
[0x32,4] %cf{0;1} := 0x0{0;1} --> (0x32,5);
[0x32,5] %of{0;1} := 0x0{0;1} --> (0x3d,0);
[0x3d,0]

**** Decode instruction: and    $0x12345678,%rbx
[0x3d,0] @{asm:=and    $0x12345678,%rbx}@ %rbx{0;64} := (AND %rbx{0;64} 0x12345678{0;64}){0;64} --> (0x3d,1);
[0x3d,1] %sf{0;1} := %rbx{63;1} --> (0x3d,2);
[0x3d,2] %zf{0;1} := (EQ %rbx{0;64} 0x0{0;64}){0;1} --> (0x3d,3);
[0x3d,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rbx{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rbx{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x3d,4);
[0x3d,4] %cf{0;1} := 0x0{0;1} --> (0x3d,5);
[0x3d,5] %of{0;1} := 0x0{0;1} --> (0x44,0);
[0x44,0]

**** Decode instruction: andq   $0x12345678,0x11011972
[0x44,0] @{asm:=andq   $0x12345678,0x11011972}@ [0x11011972{0;64}]{0;32} := (AND [0x11011972{0;64}]{0;32} 0x12345678{0;32}){0;32} --> (0x44,1);
[0x44,1] %sf{0;1} := [0x11011972{0;64}]{31;1} --> (0x44,2);
[0x44,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;32} 0x0{0;32}){0;1} --> (0x44,3);
[0x44,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x44,4);
[0x44,4] %cf{0;1} := 0x0{0;1} --> (0x44,5);
[0x44,5] %of{0;1} := 0x0{0;1} --> (0x50,0);
[0x50,0]

**** Decode instruction: and    $0x12,%ax
[0x50,0] @{asm:=and    $0x12,%ax}@ %rax{0;16} := (AND %rax{0;16} 0x12{0;16}){0;16} --> (0x50,1);
[0x50,1] %sf{0;1} := %rax{15;1} --> (0x50,2);
[0x50,2] %zf{0;1} := (EQ %rax{0;16} 0x0{0;16}){0;1} --> (0x50,3);
[0x50,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rax{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x50,4);
[0x50,4] %cf{0;1} := 0x0{0;1} --> (0x50,5);
[0x50,5] %of{0;1} := 0x0{0;1} --> (0x54,0);
[0x54,0]

**** Decode instruction: andb   $0x12,0x11011972
[0x54,0] @{asm:=andb   $0x12,0x11011972}@ [0x11011972{0;64}]{0;8} := (AND [0x11011972{0;64}]{0;8} 0x12{0;8}){0;8} --> (0x54,1);
[0x54,1] %sf{0;1} := [0x11011972{0;64}]{7;1} --> (0x54,2);
[0x54,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;8} 0x0{0;8}){0;1} --> (0x54,3);
[0x54,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x54,4);
[0x54,4] %cf{0;1} := 0x0{0;1} --> (0x54,5);
[0x54,5] %of{0;1} := 0x0{0;1} --> (0x5c,0);
[0x5c,0]

**** Decode instruction: and    $0x12,%eax
[0x5c,0] @{asm:=and    $0x12,%eax}@ %rax{0;32} := (AND %rax{0;32} 0x12{0;32}){0;32} --> (0x5c,1);
[0x5c,1] %sf{0;1} := %rax{31;1} --> (0x5c,2);
[0x5c,2] %zf{0;1} := (EQ %rax{0;32} 0x0{0;32}){0;1} --> (0x5c,3);
[0x5c,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rax{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x5c,4);
[0x5c,4] %cf{0;1} := 0x0{0;1} --> (0x5c,5);
[0x5c,5] %of{0;1} := 0x0{0;1} --> (0x5f,0);
[0x5f,0]

**** Decode instruction: andb   $0x12,0x11011972
[0x5f,0] @{asm:=andb   $0x12,0x11011972}@ [0x11011972{0;64}]{0;8} := (AND [0x11011972{0;64}]{0;8} 0x12{0;8}){0;8} --> (0x5f,1);
[0x5f,1] %sf{0;1} := [0x11011972{0;64}]{7;1} --> (0x5f,2);
[0x5f,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;8} 0x0{0;8}){0;1} --> (0x5f,3);
[0x5f,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x5f,4);
[0x5f,4] %cf{0;1} := 0x0{0;1} --> (0x5f,5);
[0x5f,5] %of{0;1} := 0x0{0;1} --> (0x67,0);
[0x67,0]

**** Decode instruction: and    $0x12,%rax
[0x67,0] @{asm:=and    $0x12,%rax}@ %rax{0;64} := (AND %rax{0;64} 0x12{0;64}){0;64} --> (0x67,1);
[0x67,1] %sf{0;1} := %rax{63;1} --> (0x67,2);
[0x67,2] %zf{0;1} := (EQ %rax{0;64} 0x0{0;64}){0;1} --> (0x67,3);
[0x67,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rax{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rax{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x67,4);
[0x67,4] %cf{0;1} := 0x0{0;1} --> (0x67,5);
[0x67,5] %of{0;1} := 0x0{0;1} --> (0x6b,0);
[0x6b,0]

**** Decode instruction: andq   $0x12,0x11011972
[0x6b,0] @{asm:=andq   $0x12,0x11011972}@ [0x11011972{0;64}]{0;32} := (AND [0x11011972{0;64}]{0;32} 0x12{0;32}){0;32} --> (0x6b,1);
[0x6b,1] %sf{0;1} := [0x11011972{0;64}]{31;1} --> (0x6b,2);
[0x6b,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;32} 0x0{0;32}){0;1} --> (0x6b,3);
[0x6b,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x6b,4);
[0x6b,4] %cf{0;1} := 0x0{0;1} --> (0x6b,5);
[0x6b,5] %of{0;1} := 0x0{0;1} --> (0x74,0);
[0x74,0]

**** Decode instruction: and    %bh,%cl
[0x74,0] @{asm:=and    %bh,%cl}@ %rcx{0;8} := (AND %rcx{0;8} %rbx{8;8}){0;8} --> (0x74,1);
[0x74,1] %sf{0;1} := %rcx{7;1} --> (0x74,2);
[0x74,2] %zf{0;1} := (EQ %rcx{0;8} 0x0{0;8}){0;1} --> (0x74,3);
[0x74,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x74,4);
[0x74,4] %cf{0;1} := 0x0{0;1} --> (0x74,5);
[0x74,5] %of{0;1} := 0x0{0;1} --> (0x76,0);
[0x76,0]

**** Decode instruction: and    %ch,0x11011972
[0x76,0] @{asm:=and    %ch,0x11011972}@ [0x11011972{0;64}]{0;8} := (AND [0x11011972{0;64}]{0;8} %rcx{8;8}){0;8} --> (0x76,1);
[0x76,1] %sf{0;1} := [0x11011972{0;64}]{7;1} --> (0x76,2);
[0x76,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;8} 0x0{0;8}){0;1} --> (0x76,3);
[0x76,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x76,4);
[0x76,4] %cf{0;1} := 0x0{0;1} --> (0x76,5);
[0x76,5] %of{0;1} := 0x0{0;1} --> (0x7d,0);
[0x7d,0]

**** Decode instruction: and    %bx,%cx
[0x7d,0] @{asm:=and    %bx,%cx}@ %rcx{0;16} := (AND %rcx{0;16} %rbx{0;16}){0;16} --> (0x7d,1);
[0x7d,1] %sf{0;1} := %rcx{15;1} --> (0x7d,2);
[0x7d,2] %zf{0;1} := (EQ %rcx{0;16} 0x0{0;16}){0;1} --> (0x7d,3);
[0x7d,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x7d,4);
[0x7d,4] %cf{0;1} := 0x0{0;1} --> (0x7d,5);
[0x7d,5] %of{0;1} := 0x0{0;1} --> (0x80,0);
[0x80,0]

**** Decode instruction: and    %cx,0x11011972
[0x80,0] @{asm:=and    %cx,0x11011972}@ [0x11011972{0;64}]{0;16} := (AND [0x11011972{0;64}]{0;16} %rcx{0;16}){0;16} --> (0x80,1);
[0x80,1] %sf{0;1} := [0x11011972{0;64}]{15;1} --> (0x80,2);
[0x80,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;16} 0x0{0;16}){0;1} --> (0x80,3);
[0x80,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x80,4);
[0x80,4] %cf{0;1} := 0x0{0;1} --> (0x80,5);
[0x80,5] %of{0;1} := 0x0{0;1} --> (0x88,0);
[0x88,0]

**** Decode instruction: and    %ebx,%ecx
[0x88,0] @{asm:=and    %ebx,%ecx}@ %rcx{0;32} := (AND %rcx{0;32} %rbx{0;32}){0;32} --> (0x88,1);
[0x88,1] %sf{0;1} := %rcx{31;1} --> (0x88,2);
[0x88,2] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1} --> (0x88,3);
[0x88,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x88,4);
[0x88,4] %cf{0;1} := 0x0{0;1} --> (0x88,5);
[0x88,5] %of{0;1} := 0x0{0;1} --> (0x8a,0);
[0x8a,0]

**** Decode instruction: and    %ecx,0x11011972
[0x8a,0] @{asm:=and    %ecx,0x11011972}@ [0x11011972{0;64}]{0;32} := (AND [0x11011972{0;64}]{0;32} %rcx{0;32}){0;32} --> (0x8a,1);
[0x8a,1] %sf{0;1} := [0x11011972{0;64}]{31;1} --> (0x8a,2);
[0x8a,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;32} 0x0{0;32}){0;1} --> (0x8a,3);
[0x8a,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x8a,4);
[0x8a,4] %cf{0;1} := 0x0{0;1} --> (0x8a,5);
[0x8a,5] %of{0;1} := 0x0{0;1} --> (0x91,0);
[0x91,0]

**** Decode instruction: and    %rbx,%rcx
[0x91,0] @{asm:=and    %rbx,%rcx}@ %rcx{0;64} := (AND %rcx{0;64} %rbx{0;64}){0;64} --> (0x91,1);
[0x91,1] %sf{0;1} := %rcx{63;1} --> (0x91,2);
[0x91,2] %zf{0;1} := (EQ %rcx{0;64} 0x0{0;64}){0;1} --> (0x91,3);
[0x91,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x91,4);
[0x91,4] %cf{0;1} := 0x0{0;1} --> (0x91,5);
[0x91,5] %of{0;1} := 0x0{0;1} --> (0x94,0);
[0x94,0]

**** Decode instruction: and    %rcx,0x11011972
[0x94,0] @{asm:=and    %rcx,0x11011972}@ [0x11011972{0;64}]{0;64} := (AND [0x11011972{0;64}]{0;64} %rcx{0;64}){0;64} --> (0x94,1);
[0x94,1] %sf{0;1} := [0x11011972{0;64}]{63;1} --> (0x94,2);
[0x94,2] %zf{0;1} := (EQ [0x11011972{0;64}]{0;64} 0x0{0;64}){0;1} --> (0x94,3);
[0x94,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT [0x11011972{0;64}]{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT [0x11011972{0;64}]{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x94,4);
[0x94,4] %cf{0;1} := 0x0{0;1} --> (0x94,5);
[0x94,5] %of{0;1} := 0x0{0;1} --> (0x9c,0);
[0x9c,0]

**** Decode instruction: and    %bh,%cl
[0x9c,0] @{asm:=and    %bh,%cl}@ %rcx{0;8} := (AND %rcx{0;8} %rbx{8;8}){0;8} --> (0x9c,1);
[0x9c,1] %sf{0;1} := %rcx{7;1} --> (0x9c,2);
[0x9c,2] %zf{0;1} := (EQ %rcx{0;8} 0x0{0;8}){0;1} --> (0x9c,3);
[0x9c,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x9c,4);
[0x9c,4] %cf{0;1} := 0x0{0;1} --> (0x9c,5);
[0x9c,5] %of{0;1} := 0x0{0;1} --> (0x9e,0);
[0x9e,0]

**** Decode instruction: and    0x11011972,%ch
[0x9e,0] @{asm:=and    0x11011972,%ch}@ %rcx{8;8} := (AND %rcx{8;8} [0x11011972{0;64}]{0;8}){0;8} --> (0x9e,1);
[0x9e,1] %sf{0;1} := %rcx{15;1} --> (0x9e,2);
[0x9e,2] %zf{0;1} := (EQ %rcx{8;8} 0x0{0;8}){0;1} --> (0x9e,3);
[0x9e,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{8;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{8;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x9e,4);
[0x9e,4] %cf{0;1} := 0x0{0;1} --> (0x9e,5);
[0x9e,5] %of{0;1} := 0x0{0;1} --> (0xa5,0);
[0xa5,0]

**** Decode instruction: and    %bx,%cx
[0xa5,0] @{asm:=and    %bx,%cx}@ %rcx{0;16} := (AND %rcx{0;16} %rbx{0;16}){0;16} --> (0xa5,1);
[0xa5,1] %sf{0;1} := %rcx{15;1} --> (0xa5,2);
[0xa5,2] %zf{0;1} := (EQ %rcx{0;16} 0x0{0;16}){0;1} --> (0xa5,3);
[0xa5,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xa5,4);
[0xa5,4] %cf{0;1} := 0x0{0;1} --> (0xa5,5);
[0xa5,5] %of{0;1} := 0x0{0;1} --> (0xa8,0);
[0xa8,0]

**** Decode instruction: and    0x11011972,%cx
[0xa8,0] @{asm:=and    0x11011972,%cx}@ %rcx{0;16} := (AND %rcx{0;16} [0x11011972{0;64}]{0;16}){0;16} --> (0xa8,1);
[0xa8,1] %sf{0;1} := %rcx{15;1} --> (0xa8,2);
[0xa8,2] %zf{0;1} := (EQ %rcx{0;16} 0x0{0;16}){0;1} --> (0xa8,3);
[0xa8,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xa8,4);
[0xa8,4] %cf{0;1} := 0x0{0;1} --> (0xa8,5);
[0xa8,5] %of{0;1} := 0x0{0;1} --> (0xb0,0);
[0xb0,0]

**** Decode instruction: and    %ebx,%ecx
[0xb0,0] @{asm:=and    %ebx,%ecx}@ %rcx{0;32} := (AND %rcx{0;32} %rbx{0;32}){0;32} --> (0xb0,1);
[0xb0,1] %sf{0;1} := %rcx{31;1} --> (0xb0,2);
[0xb0,2] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1} --> (0xb0,3);
[0xb0,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xb0,4);
[0xb0,4] %cf{0;1} := 0x0{0;1} --> (0xb0,5);
[0xb0,5] %of{0;1} := 0x0{0;1} --> (0xb2,0);
[0xb2,0]

**** Decode instruction: and    0x11011972,%ecx
[0xb2,0] @{asm:=and    0x11011972,%ecx}@ %rcx{0;32} := (AND %rcx{0;32} [0x11011972{0;64}]{0;32}){0;32} --> (0xb2,1);
[0xb2,1] %sf{0;1} := %rcx{31;1} --> (0xb2,2);
[0xb2,2] %zf{0;1} := (EQ %rcx{0;32} 0x0{0;32}){0;1} --> (0xb2,3);
[0xb2,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xb2,4);
[0xb2,4] %cf{0;1} := 0x0{0;1} --> (0xb2,5);
[0xb2,5] %of{0;1} := 0x0{0;1} --> (0xb9,0);
[0xb9,0]

**** Decode instruction: and    %rbx,%rcx
[0xb9,0] @{asm:=and    %rbx,%rcx}@ %rcx{0;64} := (AND %rcx{0;64} %rbx{0;64}){0;64} --> (0xb9,1);
[0xb9,1] %sf{0;1} := %rcx{63;1} --> (0xb9,2);
[0xb9,2] %zf{0;1} := (EQ %rcx{0;64} 0x0{0;64}){0;1} --> (0xb9,3);
[0xb9,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xb9,4);
[0xb9,4] %cf{0;1} := 0x0{0;1} --> (0xb9,5);
[0xb9,5] %of{0;1} := 0x0{0;1} --> (0xbc,0);
[0xbc,0]

**** Decode instruction: and    0x11011972,%rcx
[0xbc,0] @{asm:=and    0x11011972,%rcx}@ %rcx{0;64} := (AND %rcx{0;64} [0x11011972{0;64}]{0;64}){0;64} --> (0xbc,1);
[0xbc,1] %sf{0;1} := %rcx{63;1} --> (0xbc,2);
[0xbc,2] %zf{0;1} := (EQ %rcx{0;64} 0x0{0;64}){0;1} --> (0xbc,3);
[0xbc,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %rcx{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %rcx{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xbc,4);
[0xbc,4] %cf{0;1} := 0x0{0;1} --> (0xbc,5);
[0xbc,5] %of{0;1} := 0x0{0;1} --> (0xc4,0);
[0xc4,0]

**** Decode instruction: test   $0x12,%ah
[0xc4,0] @{asm:=test   $0x12,%ah}@ %tmpr0_8{0;8} := (AND 0x12{0;8} %rax{8;8}){0;8} --> (0xc4,1);
[0xc4,1] %sf{0;1} := %tmpr0_8{7;1} --> (0xc4,2);
[0xc4,2] %zf{0;1} := (EQ %tmpr0_8{0;8} 0x0{0;8}){0;1} --> (0xc4,3);
[0xc4,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_8{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xc4,4);
[0xc4,4] %cf{0;1} := 0x0{0;1} --> (0xc4,5);
[0xc4,5] %of{0;1} := 0x0{0;1} --> (0xc7,0);
[0xc7,0]

**** Decode instruction: test   $0x1234,%ax
[0xc7,0] @{asm:=test   $0x1234,%ax}@ %tmpr0_16{0;16} := (AND 0x1234{0;16} %rax{0;16}){0;16} --> (0xc7,1);
[0xc7,1] %sf{0;1} := %tmpr0_16{15;1} --> (0xc7,2);
[0xc7,2] %zf{0;1} := (EQ %tmpr0_16{0;16} 0x0{0;16}){0;1} --> (0xc7,3);
[0xc7,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_16{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xc7,4);
[0xc7,4] %cf{0;1} := 0x0{0;1} --> (0xc7,5);
[0xc7,5] %of{0;1} := 0x0{0;1} --> (0xcb,0);
[0xcb,0]

**** Decode instruction: test   $0x12345678,%eax
[0xcb,0] @{asm:=test   $0x12345678,%eax}@ %tmpr0_32{0;32} := (AND 0x12345678{0;32} %rax{0;32}){0;32} --> (0xcb,1);
[0xcb,1] %sf{0;1} := %tmpr0_32{31;1} --> (0xcb,2);
[0xcb,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0xcb,3);
[0xcb,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xcb,4);
[0xcb,4] %cf{0;1} := 0x0{0;1} --> (0xcb,5);
[0xcb,5] %of{0;1} := 0x0{0;1} --> (0xd0,0);
[0xd0,0]

**** Decode instruction: test   $0x12345678,%rax
[0xd0,0] @{asm:=test   $0x12345678,%rax}@ %tmpr0_64{0;64} := (AND 0x12345678{0;64} %rax{0;64}){0;64} --> (0xd0,1);
[0xd0,1] %sf{0;1} := %tmpr0_64{63;1} --> (0xd0,2);
[0xd0,2] %zf{0;1} := (EQ %tmpr0_64{0;64} 0x0{0;64}){0;1} --> (0xd0,3);
[0xd0,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_64{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xd0,4);
[0xd0,4] %cf{0;1} := 0x0{0;1} --> (0xd0,5);
[0xd0,5] %of{0;1} := 0x0{0;1} --> (0xd6,0);
[0xd6,0]

**** Decode instruction: test   $0x12,%bh
[0xd6,0] @{asm:=test   $0x12,%bh}@ %tmpr0_8{0;8} := (AND 0x12{0;8} %rbx{8;8}){0;8} --> (0xd6,1);
[0xd6,1] %sf{0;1} := %tmpr0_8{7;1} --> (0xd6,2);
[0xd6,2] %zf{0;1} := (EQ %tmpr0_8{0;8} 0x0{0;8}){0;1} --> (0xd6,3);
[0xd6,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_8{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xd6,4);
[0xd6,4] %cf{0;1} := 0x0{0;1} --> (0xd6,5);
[0xd6,5] %of{0;1} := 0x0{0;1} --> (0xd9,0);
[0xd9,0]

**** Decode instruction: testb  $0x12,0x11011972
[0xd9,0] @{asm:=testb  $0x12,0x11011972}@ %tmpr0_8{0;8} := (AND 0x12{0;8} [0x11011972{0;64}]{0;8}){0;8} --> (0xd9,1);
[0xd9,1] %sf{0;1} := %tmpr0_8{7;1} --> (0xd9,2);
[0xd9,2] %zf{0;1} := (EQ %tmpr0_8{0;8} 0x0{0;8}){0;1} --> (0xd9,3);
[0xd9,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_8{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xd9,4);
[0xd9,4] %cf{0;1} := 0x0{0;1} --> (0xd9,5);
[0xd9,5] %of{0;1} := 0x0{0;1} --> (0xe1,0);
[0xe1,0]

**** Decode instruction: test   $0x1234,%bx
[0xe1,0] @{asm:=test   $0x1234,%bx}@ %tmpr0_16{0;16} := (AND 0x1234{0;16} %rbx{0;16}){0;16} --> (0xe1,1);
[0xe1,1] %sf{0;1} := %tmpr0_16{15;1} --> (0xe1,2);
[0xe1,2] %zf{0;1} := (EQ %tmpr0_16{0;16} 0x0{0;16}){0;1} --> (0xe1,3);
[0xe1,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_16{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xe1,4);
[0xe1,4] %cf{0;1} := 0x0{0;1} --> (0xe1,5);
[0xe1,5] %of{0;1} := 0x0{0;1} --> (0xe6,0);
[0xe6,0]

**** Decode instruction: testw  $0x1234,0x11011972
[0xe6,0] @{asm:=testw  $0x1234,0x11011972}@ %tmpr0_16{0;16} := (AND 0x1234{0;16} [0x11011972{0;64}]{0;16}){0;16} --> (0xe6,1);
[0xe6,1] %sf{0;1} := %tmpr0_16{15;1} --> (0xe6,2);
[0xe6,2] %zf{0;1} := (EQ %tmpr0_16{0;16} 0x0{0;16}){0;1} --> (0xe6,3);
[0xe6,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_16{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xe6,4);
[0xe6,4] %cf{0;1} := 0x0{0;1} --> (0xe6,5);
[0xe6,5] %of{0;1} := 0x0{0;1} --> (0xf0,0);
[0xf0,0]

**** Decode instruction: test   $0x12345678,%ebx
[0xf0,0] @{asm:=test   $0x12345678,%ebx}@ %tmpr0_32{0;32} := (AND 0x12345678{0;32} %rbx{0;32}){0;32} --> (0xf0,1);
[0xf0,1] %sf{0;1} := %tmpr0_32{31;1} --> (0xf0,2);
[0xf0,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0xf0,3);
[0xf0,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xf0,4);
[0xf0,4] %cf{0;1} := 0x0{0;1} --> (0xf0,5);
[0xf0,5] %of{0;1} := 0x0{0;1} --> (0xf6,0);
[0xf6,0]

**** Decode instruction: testl  $0x12345678,0x11011972
[0xf6,0] @{asm:=testl  $0x12345678,0x11011972}@ %tmpr0_32{0;32} := (AND 0x12345678{0;32} [0x11011972{0;64}]{0;32}){0;32} --> (0xf6,1);
[0xf6,1] %sf{0;1} := %tmpr0_32{31;1} --> (0xf6,2);
[0xf6,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0xf6,3);
[0xf6,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0xf6,4);
[0xf6,4] %cf{0;1} := 0x0{0;1} --> (0xf6,5);
[0xf6,5] %of{0;1} := 0x0{0;1} --> (0x101,0);
[0x101,0]

**** Decode instruction: test   $0x12345678,%rbx
[0x101,0] @{asm:=test   $0x12345678,%rbx}@ %tmpr0_64{0;64} := (AND 0x12345678{0;64} %rbx{0;64}){0;64} --> (0x101,1);
[0x101,1] %sf{0;1} := %tmpr0_64{63;1} --> (0x101,2);
[0x101,2] %zf{0;1} := (EQ %tmpr0_64{0;64} 0x0{0;64}){0;1} --> (0x101,3);
[0x101,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_64{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x101,4);
[0x101,4] %cf{0;1} := 0x0{0;1} --> (0x101,5);
[0x101,5] %of{0;1} := 0x0{0;1} --> (0x108,0);
[0x108,0]

**** Decode instruction: testq  $0x12345678,0x11011972
[0x108,0] @{asm:=testq  $0x12345678,0x11011972}@ %tmpr0_32{0;32} := (AND 0x12345678{0;32} [0x11011972{0;64}]{0;32}){0;32} --> (0x108,1);
[0x108,1] %sf{0;1} := %tmpr0_32{31;1} --> (0x108,2);
[0x108,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0x108,3);
[0x108,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x108,4);
[0x108,4] %cf{0;1} := 0x0{0;1} --> (0x108,5);
[0x108,5] %of{0;1} := 0x0{0;1} --> (0x114,0);
[0x114,0]

**** Decode instruction: test   $0x12,%ax
[0x114,0] @{asm:=test   $0x12,%ax}@ %tmpr0_16{0;16} := (AND 0x12{0;16} %rax{0;16}){0;16} --> (0x114,1);
[0x114,1] %sf{0;1} := %tmpr0_16{15;1} --> (0x114,2);
[0x114,2] %zf{0;1} := (EQ %tmpr0_16{0;16} 0x0{0;16}){0;1} --> (0x114,3);
[0x114,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_16{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x114,4);
[0x114,4] %cf{0;1} := 0x0{0;1} --> (0x114,5);
[0x114,5] %of{0;1} := 0x0{0;1} --> (0x118,0);
[0x118,0]

**** Decode instruction: testb  $0x12,0x11011972
[0x118,0] @{asm:=testb  $0x12,0x11011972}@ %tmpr0_8{0;8} := (AND 0x12{0;8} [0x11011972{0;64}]{0;8}){0;8} --> (0x118,1);
[0x118,1] %sf{0;1} := %tmpr0_8{7;1} --> (0x118,2);
[0x118,2] %zf{0;1} := (EQ %tmpr0_8{0;8} 0x0{0;8}){0;1} --> (0x118,3);
[0x118,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_8{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x118,4);
[0x118,4] %cf{0;1} := 0x0{0;1} --> (0x118,5);
[0x118,5] %of{0;1} := 0x0{0;1} --> (0x120,0);
[0x120,0]

**** Decode instruction: test   $0x12,%eax
[0x120,0] @{asm:=test   $0x12,%eax}@ %tmpr0_32{0;32} := (AND 0x12{0;32} %rax{0;32}){0;32} --> (0x120,1);
[0x120,1] %sf{0;1} := %tmpr0_32{31;1} --> (0x120,2);
[0x120,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0x120,3);
[0x120,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x120,4);
[0x120,4] %cf{0;1} := 0x0{0;1} --> (0x120,5);
[0x120,5] %of{0;1} := 0x0{0;1} --> (0x125,0);
[0x125,0]

**** Decode instruction: testb  $0x12,0x11011972
[0x125,0] @{asm:=testb  $0x12,0x11011972}@ %tmpr0_8{0;8} := (AND 0x12{0;8} [0x11011972{0;64}]{0;8}){0;8} --> (0x125,1);
[0x125,1] %sf{0;1} := %tmpr0_8{7;1} --> (0x125,2);
[0x125,2] %zf{0;1} := (EQ %tmpr0_8{0;8} 0x0{0;8}){0;1} --> (0x125,3);
[0x125,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_8{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x125,4);
[0x125,4] %cf{0;1} := 0x0{0;1} --> (0x125,5);
[0x125,5] %of{0;1} := 0x0{0;1} --> (0x12d,0);
[0x12d,0]

**** Decode instruction: test   $0x12,%rax
[0x12d,0] @{asm:=test   $0x12,%rax}@ %tmpr0_64{0;64} := (AND 0x12{0;64} %rax{0;64}){0;64} --> (0x12d,1);
[0x12d,1] %sf{0;1} := %tmpr0_64{63;1} --> (0x12d,2);
[0x12d,2] %zf{0;1} := (EQ %tmpr0_64{0;64} 0x0{0;64}){0;1} --> (0x12d,3);
[0x12d,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_64{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x12d,4);
[0x12d,4] %cf{0;1} := 0x0{0;1} --> (0x12d,5);
[0x12d,5] %of{0;1} := 0x0{0;1} --> (0x133,0);
[0x133,0]

**** Decode instruction: testq  $0x12,0x11011972
[0x133,0] @{asm:=testq  $0x12,0x11011972}@ %tmpr0_32{0;32} := (AND 0x12{0;32} [0x11011972{0;64}]{0;32}){0;32} --> (0x133,1);
[0x133,1] %sf{0;1} := %tmpr0_32{31;1} --> (0x133,2);
[0x133,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0x133,3);
[0x133,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x133,4);
[0x133,4] %cf{0;1} := 0x0{0;1} --> (0x133,5);
[0x133,5] %of{0;1} := 0x0{0;1} --> (0x13f,0);
[0x13f,0]

**** Decode instruction: test   %bh,%cl
[0x13f,0] @{asm:=test   %bh,%cl}@ %tmpr0_8{0;8} := (AND %rbx{8;8} %rcx{0;8}){0;8} --> (0x13f,1);
[0x13f,1] %sf{0;1} := %tmpr0_8{7;1} --> (0x13f,2);
[0x13f,2] %zf{0;1} := (EQ %tmpr0_8{0;8} 0x0{0;8}){0;1} --> (0x13f,3);
[0x13f,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_8{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x13f,4);
[0x13f,4] %cf{0;1} := 0x0{0;1} --> (0x13f,5);
[0x13f,5] %of{0;1} := 0x0{0;1} --> (0x141,0);
[0x141,0]

**** Decode instruction: test   %ch,0x11011972
[0x141,0] @{asm:=test   %ch,0x11011972}@ %tmpr0_8{0;8} := (AND %rcx{8;8} [0x11011972{0;64}]{0;8}){0;8} --> (0x141,1);
[0x141,1] %sf{0;1} := %tmpr0_8{7;1} --> (0x141,2);
[0x141,2] %zf{0;1} := (EQ %tmpr0_8{0;8} 0x0{0;8}){0;1} --> (0x141,3);
[0x141,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_8{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x141,4);
[0x141,4] %cf{0;1} := 0x0{0;1} --> (0x141,5);
[0x141,5] %of{0;1} := 0x0{0;1} --> (0x148,0);
[0x148,0]

**** Decode instruction: test   %bx,%cx
[0x148,0] @{asm:=test   %bx,%cx}@ %tmpr0_16{0;16} := (AND %rbx{0;16} %rcx{0;16}){0;16} --> (0x148,1);
[0x148,1] %sf{0;1} := %tmpr0_16{15;1} --> (0x148,2);
[0x148,2] %zf{0;1} := (EQ %tmpr0_16{0;16} 0x0{0;16}){0;1} --> (0x148,3);
[0x148,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_16{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x148,4);
[0x148,4] %cf{0;1} := 0x0{0;1} --> (0x148,5);
[0x148,5] %of{0;1} := 0x0{0;1} --> (0x14b,0);
[0x14b,0]

**** Decode instruction: test   %cx,0x11011972
[0x14b,0] @{asm:=test   %cx,0x11011972}@ %tmpr0_16{0;16} := (AND %rcx{0;16} [0x11011972{0;64}]{0;16}){0;16} --> (0x14b,1);
[0x14b,1] %sf{0;1} := %tmpr0_16{15;1} --> (0x14b,2);
[0x14b,2] %zf{0;1} := (EQ %tmpr0_16{0;16} 0x0{0;16}){0;1} --> (0x14b,3);
[0x14b,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_16{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x14b,4);
[0x14b,4] %cf{0;1} := 0x0{0;1} --> (0x14b,5);
[0x14b,5] %of{0;1} := 0x0{0;1} --> (0x153,0);
[0x153,0]

**** Decode instruction: test   %ebx,%ecx
[0x153,0] @{asm:=test   %ebx,%ecx}@ %tmpr0_32{0;32} := (AND %rbx{0;32} %rcx{0;32}){0;32} --> (0x153,1);
[0x153,1] %sf{0;1} := %tmpr0_32{31;1} --> (0x153,2);
[0x153,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0x153,3);
[0x153,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x153,4);
[0x153,4] %cf{0;1} := 0x0{0;1} --> (0x153,5);
[0x153,5] %of{0;1} := 0x0{0;1} --> (0x155,0);
[0x155,0]

**** Decode instruction: test   %ecx,0x11011972
[0x155,0] @{asm:=test   %ecx,0x11011972}@ %tmpr0_32{0;32} := (AND %rcx{0;32} [0x11011972{0;64}]{0;32}){0;32} --> (0x155,1);
[0x155,1] %sf{0;1} := %tmpr0_32{31;1} --> (0x155,2);
[0x155,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0x155,3);
[0x155,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x155,4);
[0x155,4] %cf{0;1} := 0x0{0;1} --> (0x155,5);
[0x155,5] %of{0;1} := 0x0{0;1} --> (0x15c,0);
[0x15c,0]

**** Decode instruction: test   %rbx,%rcx
[0x15c,0] @{asm:=test   %rbx,%rcx}@ %tmpr0_64{0;64} := (AND %rbx{0;64} %rcx{0;64}){0;64} --> (0x15c,1);
[0x15c,1] %sf{0;1} := %tmpr0_64{63;1} --> (0x15c,2);
[0x15c,2] %zf{0;1} := (EQ %tmpr0_64{0;64} 0x0{0;64}){0;1} --> (0x15c,3);
[0x15c,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_64{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x15c,4);
[0x15c,4] %cf{0;1} := 0x0{0;1} --> (0x15c,5);
[0x15c,5] %of{0;1} := 0x0{0;1} --> (0x15f,0);
[0x15f,0]

**** Decode instruction: test   %rcx,0x11011972
[0x15f,0] @{asm:=test   %rcx,0x11011972}@ %tmpr0_64{0;64} := (AND %rcx{0;64} [0x11011972{0;64}]{0;64}){0;64} --> (0x15f,1);
[0x15f,1] %sf{0;1} := %tmpr0_64{63;1} --> (0x15f,2);
[0x15f,2] %zf{0;1} := (EQ %tmpr0_64{0;64} 0x0{0;64}){0;1} --> (0x15f,3);
[0x15f,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_64{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x15f,4);
[0x15f,4] %cf{0;1} := 0x0{0;1} --> (0x15f,5);
[0x15f,5] %of{0;1} := 0x0{0;1} --> (0x167,0);
[0x167,0]

**** Decode instruction: test   %bh,%cl
[0x167,0] @{asm:=test   %bh,%cl}@ %tmpr0_8{0;8} := (AND %rbx{8;8} %rcx{0;8}){0;8} --> (0x167,1);
[0x167,1] %sf{0;1} := %tmpr0_8{7;1} --> (0x167,2);
[0x167,2] %zf{0;1} := (EQ %tmpr0_8{0;8} 0x0{0;8}){0;1} --> (0x167,3);
[0x167,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_8{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x167,4);
[0x167,4] %cf{0;1} := 0x0{0;1} --> (0x167,5);
[0x167,5] %of{0;1} := 0x0{0;1} --> (0x169,0);
[0x169,0]

**** Decode instruction: test   %ch,0x11011972
[0x169,0] @{asm:=test   %ch,0x11011972}@ %tmpr0_8{0;8} := (AND %rcx{8;8} [0x11011972{0;64}]{0;8}){0;8} --> (0x169,1);
[0x169,1] %sf{0;1} := %tmpr0_8{7;1} --> (0x169,2);
[0x169,2] %zf{0;1} := (EQ %tmpr0_8{0;8} 0x0{0;8}){0;1} --> (0x169,3);
[0x169,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_8{0;8} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_8{0;8} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x169,4);
[0x169,4] %cf{0;1} := 0x0{0;1} --> (0x169,5);
[0x169,5] %of{0;1} := 0x0{0;1} --> (0x170,0);
[0x170,0]

**** Decode instruction: test   %bx,%cx
[0x170,0] @{asm:=test   %bx,%cx}@ %tmpr0_16{0;16} := (AND %rbx{0;16} %rcx{0;16}){0;16} --> (0x170,1);
[0x170,1] %sf{0;1} := %tmpr0_16{15;1} --> (0x170,2);
[0x170,2] %zf{0;1} := (EQ %tmpr0_16{0;16} 0x0{0;16}){0;1} --> (0x170,3);
[0x170,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_16{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x170,4);
[0x170,4] %cf{0;1} := 0x0{0;1} --> (0x170,5);
[0x170,5] %of{0;1} := 0x0{0;1} --> (0x173,0);
[0x173,0]

**** Decode instruction: test   %cx,0x11011972
[0x173,0] @{asm:=test   %cx,0x11011972}@ %tmpr0_16{0;16} := (AND %rcx{0;16} [0x11011972{0;64}]{0;16}){0;16} --> (0x173,1);
[0x173,1] %sf{0;1} := %tmpr0_16{15;1} --> (0x173,2);
[0x173,2] %zf{0;1} := (EQ %tmpr0_16{0;16} 0x0{0;16}){0;1} --> (0x173,3);
[0x173,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_16{0;16} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_16{0;16} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x173,4);
[0x173,4] %cf{0;1} := 0x0{0;1} --> (0x173,5);
[0x173,5] %of{0;1} := 0x0{0;1} --> (0x17b,0);
[0x17b,0]

**** Decode instruction: test   %ebx,%ecx
[0x17b,0] @{asm:=test   %ebx,%ecx}@ %tmpr0_32{0;32} := (AND %rbx{0;32} %rcx{0;32}){0;32} --> (0x17b,1);
[0x17b,1] %sf{0;1} := %tmpr0_32{31;1} --> (0x17b,2);
[0x17b,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0x17b,3);
[0x17b,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x17b,4);
[0x17b,4] %cf{0;1} := 0x0{0;1} --> (0x17b,5);
[0x17b,5] %of{0;1} := 0x0{0;1} --> (0x17d,0);
[0x17d,0]

**** Decode instruction: test   %ecx,0x11011972
[0x17d,0] @{asm:=test   %ecx,0x11011972}@ %tmpr0_32{0;32} := (AND %rcx{0;32} [0x11011972{0;64}]{0;32}){0;32} --> (0x17d,1);
[0x17d,1] %sf{0;1} := %tmpr0_32{31;1} --> (0x17d,2);
[0x17d,2] %zf{0;1} := (EQ %tmpr0_32{0;32} 0x0{0;32}){0;1} --> (0x17d,3);
[0x17d,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_32{0;32} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_32{0;32} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x17d,4);
[0x17d,4] %cf{0;1} := 0x0{0;1} --> (0x17d,5);
[0x17d,5] %of{0;1} := 0x0{0;1} --> (0x184,0);
[0x184,0]

**** Decode instruction: test   %rbx,%rcx
[0x184,0] @{asm:=test   %rbx,%rcx}@ %tmpr0_64{0;64} := (AND %rbx{0;64} %rcx{0;64}){0;64} --> (0x184,1);
[0x184,1] %sf{0;1} := %tmpr0_64{63;1} --> (0x184,2);
[0x184,2] %zf{0;1} := (EQ %tmpr0_64{0;64} 0x0{0;64}){0;1} --> (0x184,3);
[0x184,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_64{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x184,4);
[0x184,4] %cf{0;1} := 0x0{0;1} --> (0x184,5);
[0x184,5] %of{0;1} := 0x0{0;1} --> (0x187,0);
[0x187,0]

**** Decode instruction: test   %rcx,0x11011972
[0x187,0] @{asm:=test   %rcx,0x11011972}@ %tmpr0_64{0;64} := (AND %rcx{0;64} [0x11011972{0;64}]{0;64}){0;64} --> (0x187,1);
[0x187,1] %sf{0;1} := %tmpr0_64{63;1} --> (0x187,2);
[0x187,2] %zf{0;1} := (EQ %tmpr0_64{0;64} 0x0{0;64}){0;1} --> (0x187,3);
[0x187,3] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_64{0;64} 0x0{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x1{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x2{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x3{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x4{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x5{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x6{0;64} 0x1{0;64}){0;1}){0;1} (EXTRACT %tmpr0_64{0;64} 0x7{0;64} 0x1{0;64}){0;1}){0;1} --> (0x187,4);
[0x187,4] %cf{0;1} := 0x0{0;1} --> (0x187,5);
[0x187,5] %of{0;1} := 0x0{0;1} --> (0x18f,0);
[0x18f,0]

