**** Decode instruction: cmpxchg %bh,%ch
[0x0,0] @{asm:=cmpxchg %bh,%ch}@ << (NOT (EQ %rax{0;8} %rcx{8;8}){0;1}){0;1} >> Skip --> (0x0,3); << (EQ %rax{0;8} %rcx{8;8}){0;1} >> Skip --> (0x0,1);
[0x0,1] %zf{0;1} := 0x1{0;1} --> (0x0,2);
[0x0,2] %rcx{8;8} := %rbx{8;8} --> (0x3,0);
[0x0,3] %zf{0;1} := 0x0{0;1} --> (0x0,4);
[0x0,4] %rax{0;8} := %rcx{8;8} --> (0x3,0);
[0x3,0]

**** Decode instruction: cmpxchg %bh,0x1232
[0x3,0] @{asm:=cmpxchg %bh,0x1232}@ << (NOT (EQ %rax{0;8} [0x1232{0;64}]{0;8}){0;1}){0;1} >> Skip --> (0x3,3); << (EQ %rax{0;8} [0x1232{0;64}]{0;8}){0;1} >> Skip --> (0x3,1);
[0x3,1] %zf{0;1} := 0x1{0;1} --> (0x3,2);
[0x3,2] [0x1232{0;64}]{0;8} := %rbx{8;8} --> (0xb,0);
[0x3,3] %zf{0;1} := 0x0{0;1} --> (0x3,4);
[0x3,4] %rax{0;8} := [0x1232{0;64}]{0;8} --> (0xb,0);
[0xb,0]

**** Decode instruction: cmpxchg %bx,%cx
[0xb,0] @{asm:=cmpxchg %bx,%cx}@ << (NOT (EQ %rax{0;16} %rcx{0;16}){0;1}){0;1} >> Skip --> (0xb,3); << (EQ %rax{0;16} %rcx{0;16}){0;1} >> Skip --> (0xb,1);
[0xb,1] %zf{0;1} := 0x1{0;1} --> (0xb,2);
[0xb,2] %rcx{0;16} := %rbx{0;16} --> (0xf,0);
[0xb,3] %zf{0;1} := 0x0{0;1} --> (0xb,4);
[0xb,4] %rax{0;16} := %rcx{0;16} --> (0xf,0);
[0xf,0]

**** Decode instruction: cmpxchg %bx,0x1232
[0xf,0] @{asm:=cmpxchg %bx,0x1232}@ << (NOT (EQ %rax{0;16} [0x1232{0;64}]{0;16}){0;1}){0;1} >> Skip --> (0xf,3); << (EQ %rax{0;16} [0x1232{0;64}]{0;16}){0;1} >> Skip --> (0xf,1);
[0xf,1] %zf{0;1} := 0x1{0;1} --> (0xf,2);
[0xf,2] [0x1232{0;64}]{0;16} := %rbx{0;16} --> (0x18,0);
[0xf,3] %zf{0;1} := 0x0{0;1} --> (0xf,4);
[0xf,4] %rax{0;16} := [0x1232{0;64}]{0;16} --> (0x18,0);
[0x18,0]

**** Decode instruction: cmpxchg %ebx,%ecx
[0x18,0] @{asm:=cmpxchg %ebx,%ecx}@ << (NOT (EQ %rax{0;32} %rcx{0;32}){0;1}){0;1} >> Skip --> (0x18,3); << (EQ %rax{0;32} %rcx{0;32}){0;1} >> Skip --> (0x18,1);
[0x18,1] %zf{0;1} := 0x1{0;1} --> (0x18,2);
[0x18,2] %rcx{0;32} := %rbx{0;32} --> (0x1b,0);
[0x18,3] %zf{0;1} := 0x0{0;1} --> (0x18,4);
[0x18,4] %rax{0;32} := %rcx{0;32} --> (0x1b,0);
[0x1b,0]

**** Decode instruction: cmpxchg %ebx,0x1232
[0x1b,0] @{asm:=cmpxchg %ebx,0x1232}@ << (NOT (EQ %rax{0;32} [0x1232{0;64}]{0;32}){0;1}){0;1} >> Skip --> (0x1b,3); << (EQ %rax{0;32} [0x1232{0;64}]{0;32}){0;1} >> Skip --> (0x1b,1);
[0x1b,1] %zf{0;1} := 0x1{0;1} --> (0x1b,2);
[0x1b,2] [0x1232{0;64}]{0;32} := %rbx{0;32} --> (0x23,0);
[0x1b,3] %zf{0;1} := 0x0{0;1} --> (0x1b,4);
[0x1b,4] %rax{0;32} := [0x1232{0;64}]{0;32} --> (0x23,0);
[0x23,0]

