**** Decode instruction: idivb  0xff
[(0x0,0)] @{asm:=idivb  0xff}@ ; StaticArrow (0x0,0) Skip << (NEQ [0xFF]{0;8} 0x0{0;8}){0;1} >> --> (0x0,1)
[(0x0,1)] ; %tmpr0_16{0;16} := (sDIV %eax{0;16} [0xFF]{0;8})
[(0x0,2)] ; StaticArrow (0x0,2) Skip << (OR (GT_S %tmpr0_16{0;16} (EXTEND_S 0x7F{0;8} 0x10){0;16}){0;1} (LT_S %tmpr0_16{0;16} (EXTEND_S 0x80{0;8} 0x10){0;16}){0;1}){0;1} >> --> (0x6,0); StaticArrow (0x0,2) Skip << (NOT (OR (GT_S %tmpr0_16{0;16} (EXTEND_S 0x7F{0;8} 0x10){0;16}){0;1} (LT_S %tmpr0_16{0;16} (EXTEND_S 0x80{0;8} 0x10){0;16}){0;1}){0;1}){0;1} >> --> (0x0,3)
[(0x0,3)] ; %tmpr1_16{0;16} := (MODULO %eax{0;16} [0xFF]{0;8}){0;8}
[(0x0,4)] ; %eax{0;8} := %tmpr0_16{0;8}
[(0x0,5)] ; StaticArrow (0x0,5) %eax{8;8} := %tmpr1_16{0;8}  --> (0x6,0)
[(0x6,0)] 

**** Decode instruction: idiv   %bl
[(0x6,0)] @{asm:=idiv   %bl}@ ; StaticArrow (0x6,0) Skip << (NEQ %ebx{0;8} 0x0{0;8}){0;1} >> --> (0x6,1)
[(0x6,1)] ; %tmpr0_16{0;16} := (sDIV %eax{0;16} %ebx{0;8})
[(0x6,2)] ; StaticArrow (0x6,2) Skip << (OR (GT_S %tmpr0_16{0;16} (EXTEND_S 0x7F{0;8} 0x10){0;16}){0;1} (LT_S %tmpr0_16{0;16} (EXTEND_S 0x80{0;8} 0x10){0;16}){0;1}){0;1} >> --> (0x8,0); StaticArrow (0x6,2) Skip << (NOT (OR (GT_S %tmpr0_16{0;16} (EXTEND_S 0x7F{0;8} 0x10){0;16}){0;1} (LT_S %tmpr0_16{0;16} (EXTEND_S 0x80{0;8} 0x10){0;16}){0;1}){0;1}){0;1} >> --> (0x6,3)
[(0x6,3)] ; %tmpr1_16{0;16} := (MODULO %eax{0;16} %ebx{0;8}){0;8}
[(0x6,4)] ; %eax{0;8} := %tmpr0_16{0;8}
[(0x6,5)] ; StaticArrow (0x6,5) %eax{8;8} := %tmpr1_16{0;8}  --> (0x8,0)
[(0x8,0)] 

**** Decode instruction: idivw  0xff
[(0x8,0)] @{asm:=idivw  0xff}@ ; StaticArrow (0x8,0) Skip << (NEQ [0xFF]{0;16} 0x0{0;16}){0;1} >> --> (0x8,1)
[(0x8,1)] ; %tmpr0_32 := (sDIV (CC %edx{0;16} %eax{0;16}) [0xFF]{0;16})
[(0x8,2)] ; StaticArrow (0x8,2) Skip << (OR (GT_S %tmpr0_32 (EXTEND_S 0x7FFF{0;16} 0x20)){0;1} (LT_S %tmpr0_32 (EXTEND_S 0x8000{0;16} 0x20)){0;1}){0;1} >> --> (0xF,0); StaticArrow (0x8,2) Skip << (NOT (OR (GT_S %tmpr0_32 (EXTEND_S 0x7FFF{0;16} 0x20)){0;1} (LT_S %tmpr0_32 (EXTEND_S 0x8000{0;16} 0x20)){0;1}){0;1}){0;1} >> --> (0x8,3)
[(0x8,3)] ; %tmpr1_32 := (MODULO (CC %edx{0;16} %eax{0;16}) [0xFF]{0;16}){0;16}
[(0x8,4)] ; %eax{0;16} := %tmpr0_32{0;16}
[(0x8,5)] ; StaticArrow (0x8,5) %edx{0;16} := %tmpr1_32{0;16}  --> (0xF,0)
[(0xF,0)] 

**** Decode instruction: idiv   %bx
[(0xF,0)] @{asm:=idiv   %bx}@ ; StaticArrow (0xF,0) Skip << (NEQ %ebx{0;16} 0x0{0;16}){0;1} >> --> (0xF,1)
[(0xF,1)] ; %tmpr0_32 := (sDIV (CC %edx{0;16} %eax{0;16}) %ebx{0;16})
[(0xF,2)] ; StaticArrow (0xF,2) Skip << (OR (GT_S %tmpr0_32 (EXTEND_S 0x7FFF{0;16} 0x20)){0;1} (LT_S %tmpr0_32 (EXTEND_S 0x8000{0;16} 0x20)){0;1}){0;1} >> --> (0x12,0); StaticArrow (0xF,2) Skip << (NOT (OR (GT_S %tmpr0_32 (EXTEND_S 0x7FFF{0;16} 0x20)){0;1} (LT_S %tmpr0_32 (EXTEND_S 0x8000{0;16} 0x20)){0;1}){0;1}){0;1} >> --> (0xF,3)
[(0xF,3)] ; %tmpr1_32 := (MODULO (CC %edx{0;16} %eax{0;16}) %ebx{0;16}){0;16}
[(0xF,4)] ; %eax{0;16} := %tmpr0_32{0;16}
[(0xF,5)] ; StaticArrow (0xF,5) %edx{0;16} := %tmpr1_32{0;16}  --> (0x12,0)
[(0x12,0)] 

**** Decode instruction: idivl  0xff
[(0x12,0)] @{asm:=idivl  0xff}@ ; StaticArrow (0x12,0) Skip << (NEQ [0xFF] 0x0){0;1} >> --> (0x12,1)
[(0x12,1)] ; %tmpr0_64{0;64} := (sDIV (CC %edx %eax){0;64} [0xFF])
[(0x12,2)] ; StaticArrow (0x12,2) Skip << (OR (GT_S %tmpr0_64{0;64} (EXTEND_S 0x7FFFFFFF 0x40){0;64}){0;1} (LT_S %tmpr0_64{0;64} (EXTEND_S 0x80000000 0x40){0;64}){0;1}){0;1} >> --> (0x18,0); StaticArrow (0x12,2) Skip << (NOT (OR (GT_S %tmpr0_64{0;64} (EXTEND_S 0x7FFFFFFF 0x40){0;64}){0;1} (LT_S %tmpr0_64{0;64} (EXTEND_S 0x80000000 0x40){0;64}){0;1}){0;1}){0;1} >> --> (0x12,3)
[(0x12,3)] ; %tmpr1_64{0;64} := (MODULO (CC %edx %eax){0;64} [0xFF])
[(0x12,4)] ; %eax := %tmpr0_64
[(0x12,5)] ; StaticArrow (0x12,5) %edx := %tmpr1_64  --> (0x18,0)
[(0x18,0)] 

**** Decode instruction: idiv   %ebx
[(0x18,0)] @{asm:=idiv   %ebx}@ ; StaticArrow (0x18,0) Skip << (NEQ %ebx 0x0){0;1} >> --> (0x18,1)
[(0x18,1)] ; %tmpr0_64{0;64} := (sDIV (CC %edx %eax){0;64} %ebx)
[(0x18,2)] ; StaticArrow (0x18,2) Skip << (OR (GT_S %tmpr0_64{0;64} (EXTEND_S 0x7FFFFFFF 0x40){0;64}){0;1} (LT_S %tmpr0_64{0;64} (EXTEND_S 0x80000000 0x40){0;64}){0;1}){0;1} >> --> (0x1A,0); StaticArrow (0x18,2) Skip << (NOT (OR (GT_S %tmpr0_64{0;64} (EXTEND_S 0x7FFFFFFF 0x40){0;64}){0;1} (LT_S %tmpr0_64{0;64} (EXTEND_S 0x80000000 0x40){0;64}){0;1}){0;1}){0;1} >> --> (0x18,3)
[(0x18,3)] ; %tmpr1_64{0;64} := (MODULO (CC %edx %eax){0;64} %ebx)
[(0x18,4)] ; %eax := %tmpr0_64
[(0x18,5)] ; StaticArrow (0x18,5) %edx := %tmpr1_64  --> (0x1A,0)
[(0x1A,0)] 

