**** Decode instruction: popa   
[(0x0,0)] @{asm:=popa   }@ ; %edi := [%esp]
[(0x0,1)] ; %esp := (ADD %esp 0x4)
[(0x0,2)] ; %esi := [%esp]
[(0x0,3)] ; %esp := (ADD %esp 0x4)
[(0x0,4)] ; %ebp := [%esp]
[(0x0,5)] ; %esp := (ADD %esp 0x4)
[(0x0,6)] ; %esp := (ADD %esp 0x4)
[(0x0,7)] ; %esp := [%esp]
[(0x0,8)] ; %esp := (ADD %esp 0x4)
[(0x0,9)] ; %ebx := [%esp]
[(0x0,10)] ; %esp := (ADD %esp 0x4)
[(0x0,11)] ; %edx := [%esp]
[(0x0,12)] ; %esp := (ADD %esp 0x4)
[(0x0,13)] ; %ecx := [%esp]
[(0x0,14)] ; StaticArrow (0x0,14) %esp := (ADD %esp 0x4)  --> (0x1,0)
[(0x1,0)] 

**** Decode instruction: popaw  
[(0x1,0)] @{asm:=popaw  }@ ; %edi{0;16} := [%esp]{0;16}
[(0x1,1)] ; %esp := (ADD %esp 0x2)
[(0x1,2)] ; %esi{0;16} := [%esp]{0;16}
[(0x1,3)] ; %esp := (ADD %esp 0x2)
[(0x1,4)] ; %ebp{0;16} := [%esp]{0;16}
[(0x1,5)] ; %esp := (ADD %esp 0x2)
[(0x1,6)] ; %esp{0;16} := (ADD %esp{0;16} 0x2{0;16})
[(0x1,7)] ; %esp{0;16} := [%esp]{0;16}
[(0x1,8)] ; %esp := (ADD %esp 0x2)
[(0x1,9)] ; %ebx{0;16} := [%esp]{0;16}
[(0x1,10)] ; %esp := (ADD %esp 0x2)
[(0x1,11)] ; %edx{0;16} := [%esp]{0;16}
[(0x1,12)] ; %esp := (ADD %esp 0x2)
[(0x1,13)] ; %ecx{0;16} := [%esp]{0;16}
[(0x1,14)] ; StaticArrow (0x1,14) %esp := (ADD %esp 0x2)  --> (0x3,0)
[(0x3,0)] 

**** Decode instruction: popa   
[(0x3,0)] @{asm:=popa   }@ ; %edi := [%esp]
[(0x3,1)] ; %esp := (ADD %esp 0x4)
[(0x3,2)] ; %esi := [%esp]
[(0x3,3)] ; %esp := (ADD %esp 0x4)
[(0x3,4)] ; %ebp := [%esp]
[(0x3,5)] ; %esp := (ADD %esp 0x4)
[(0x3,6)] ; %esp := (ADD %esp 0x4)
[(0x3,7)] ; %esp := [%esp]
[(0x3,8)] ; %esp := (ADD %esp 0x4)
[(0x3,9)] ; %ebx := [%esp]
[(0x3,10)] ; %esp := (ADD %esp 0x4)
[(0x3,11)] ; %edx := [%esp]
[(0x3,12)] ; %esp := (ADD %esp 0x4)
[(0x3,13)] ; %ecx := [%esp]
[(0x3,14)] ; StaticArrow (0x3,14) %esp := (ADD %esp 0x4)  --> (0x4,0)
[(0x4,0)] 

