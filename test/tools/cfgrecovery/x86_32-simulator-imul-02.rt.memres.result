[0x0,0] @{asm:=movb   $0x0,0x12fa792, next-inst:=(0x7,0)}@ [0x12fa792{0;32}]{0;8} := 0x0{0;8} --> (0x7,0);
[0x7,0] @{asm:=mov    $0xffff,%esp, next-inst:=(0xc,0)}@ %esp{0;32} := 0xffff{0;32} --> (0xc,0);
[0xc,0] @{asm:=mov    $0x12345678,%ebp, next-inst:=(0x11,0)}@ %ebp{0;32} := 0x12345678{0;32} --> (0x11,0);
[0x11,0] @{asm:=mov    $0x1111,%cx, next-inst:=(0x15,0)}@ %ecx{0;16} := 0x1111{0;16} --> (0x15,0);
[0x15,0] @{asm:=mov    %cx,%bx, next-inst:=(0x18,0)}@ %ebx{0;16} := %ecx{0;16} --> (0x18,0);
[0x18,0] @{asm:=imul   %bx,%cx, next-inst:=(0x1c,0)}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} %ebx{0;16}){0;32} --> (0x18,1);
[0x18,1] %ecx{0;16} := %tmpr0_32{0;16} --> (0x18,2);
[0x18,2] << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> Skip --> (0x18,3); << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> Skip --> (0x18,5);
[0x18,3] %cf{0;1} := 0x1{0;1} --> (0x18,4);
[0x18,4] %of{0;1} := 0x1{0;1} --> (0x1c,0);
[0x18,5] %cf{0;1} := 0x0{0;1} --> (0x18,6);
[0x18,6] %of{0;1} := 0x0{0;1} --> (0x1c,0);
[0x1c,0] @{asm:=call   0x667b, next-inst:=(0x21,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x1c,1);
[0x1c,1] [%esp{0;32}]{0;32} := 0x21{0;32} --> (0x1c,2);
[0x1c,2] @{callret:=CALL}@ Skip --> (0x667b,0);
[0x21,0] @{asm:=cmp    $0x4321,%cx, next-inst:=(0x26,0)}@ %tmpr0_17{0;17} := (SUB (EXTEND_U %ecx{0;16} 0x11{0;32}){0;17} (EXTEND_U 0x4321{0;16} 0x11{0;32}){0;17}){0;17} --> (0x21,1);
[0x21,1] %cf{0;1} := %tmpr0_17{16;1} --> (0x21,2);
[0x21,2] %of{0;1} := (AND (XOR %ecx{15;1} %tmpr0_17{15;1}){0;1} (XOR %ecx{15;1} 0x0{0;1}){0;1}){0;1} --> (0x21,3);
[0x21,3] %sf{0;1} := %tmpr0_17{15;1} --> (0x21,4);
[0x21,4] %zf{0;1} := (EQ %tmpr0_17{0;16} 0x0{0;16}){0;1} --> (0x21,5);
[0x21,5] %af{0;1} := %tmpr0_17{4;1} --> (0x21,6);
[0x21,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_17{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0x26,0);
[0x26,0] @{asm:=jne    0x6666, next-inst:=(0x2c,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0x2c,0);
[0x2c,0] @{asm:=mov    $0x1234,%cx, next-inst:=(0x30,0)}@ %ecx{0;16} := 0x1234{0;16} --> (0x30,0);
[0x30,0] @{asm:=mov    $0x3,%bx, next-inst:=(0x34,0)}@ %ebx{0;16} := 0x3{0;16} --> (0x34,0);
[0x34,0] @{asm:=imul   %bx,%cx, next-inst:=(0x38,0)}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} %ebx{0;16}){0;32} --> (0x34,1);
[0x34,1] %ecx{0;16} := %tmpr0_32{0;16} --> (0x34,2);
[0x34,2] << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> Skip --> (0x34,3); << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> Skip --> (0x34,5);
[0x34,3] %cf{0;1} := 0x1{0;1} --> (0x34,4);
[0x34,4] %of{0;1} := 0x1{0;1} --> (0x38,0);
[0x34,5] %cf{0;1} := 0x0{0;1} --> (0x34,6);
[0x34,6] %of{0;1} := 0x0{0;1} --> (0x38,0);
[0x38,0] @{asm:=call   0x6680, next-inst:=(0x3d,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x38,1);
[0x38,1] [%esp{0;32}]{0;32} := 0x3d{0;32} --> (0x38,2);
[0x38,2] @{callret:=CALL}@ Skip --> (0x6680,0);
[0x3d,0] @{asm:=cmp    $0x369c,%cx, next-inst:=(0x42,0)}@ %tmpr0_17{0;17} := (SUB (EXTEND_U %ecx{0;16} 0x11{0;32}){0;17} (EXTEND_U 0x369c{0;16} 0x11{0;32}){0;17}){0;17} --> (0x3d,1);
[0x3d,1] %cf{0;1} := %tmpr0_17{16;1} --> (0x3d,2);
[0x3d,2] %of{0;1} := (AND (XOR %ecx{15;1} %tmpr0_17{15;1}){0;1} (XOR %ecx{15;1} 0x0{0;1}){0;1}){0;1} --> (0x3d,3);
[0x3d,3] %sf{0;1} := %tmpr0_17{15;1} --> (0x3d,4);
[0x3d,4] %zf{0;1} := (EQ %tmpr0_17{0;16} 0x0{0;16}){0;1} --> (0x3d,5);
[0x3d,5] %af{0;1} := %tmpr0_17{4;1} --> (0x3d,6);
[0x3d,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_17{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0x42,0);
[0x42,0] @{asm:=jne    0x6666, next-inst:=(0x48,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0x48,0);
[0x48,0] @{asm:=mov    $0xfffd,%bx, next-inst:=(0x4c,0)}@ %ebx{0;16} := 0xfffd{0;16} --> (0x4c,0);
[0x4c,0] @{asm:=imul   %bx,%cx, next-inst:=(0x50,0)}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} %ebx{0;16}){0;32} --> (0x4c,1);
[0x4c,1] %ecx{0;16} := %tmpr0_32{0;16} --> (0x4c,2);
[0x4c,2] << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> Skip --> (0x4c,3); << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> Skip --> (0x4c,5);
[0x4c,3] %cf{0;1} := 0x1{0;1} --> (0x4c,4);
[0x4c,4] %of{0;1} := 0x1{0;1} --> (0x50,0);
[0x4c,5] %cf{0;1} := 0x0{0;1} --> (0x4c,6);
[0x4c,6] %of{0;1} := 0x0{0;1} --> (0x50,0);
[0x50,0] @{asm:=call   0x667b, next-inst:=(0x55,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x50,1);
[0x50,1] [%esp{0;32}]{0;32} := 0x55{0;32} --> (0x50,2);
[0x50,2] @{callret:=CALL}@ Skip --> (0x667b,0);
[0x55,0] @{asm:=cmp    $0x5c2c,%cx, next-inst:=(0x5a,0)}@ %tmpr0_17{0;17} := (SUB (EXTEND_U %ecx{0;16} 0x11{0;32}){0;17} (EXTEND_U 0x5c2c{0;16} 0x11{0;32}){0;17}){0;17} --> (0x55,1);
[0x55,1] %cf{0;1} := %tmpr0_17{16;1} --> (0x55,2);
[0x55,2] %of{0;1} := (AND (XOR %ecx{15;1} %tmpr0_17{15;1}){0;1} (XOR %ecx{15;1} 0x0{0;1}){0;1}){0;1} --> (0x55,3);
[0x55,3] %sf{0;1} := %tmpr0_17{15;1} --> (0x55,4);
[0x55,4] %zf{0;1} := (EQ %tmpr0_17{0;16} 0x0{0;16}){0;1} --> (0x55,5);
[0x55,5] %af{0;1} := %tmpr0_17{4;1} --> (0x55,6);
[0x55,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_17{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0x5a,0);
[0x5a,0] @{asm:=jne    0x6666, next-inst:=(0x60,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0x60,0);
[0x60,0] @{asm:=mov    $0xf234,%cx, next-inst:=(0x64,0)}@ %ecx{0;16} := 0xf234{0;16} --> (0x64,0);
[0x64,0] @{asm:=mov    $0xfffd,%bx, next-inst:=(0x68,0)}@ %ebx{0;16} := 0xfffd{0;16} --> (0x68,0);
[0x68,0] @{asm:=imul   %bx,%cx, next-inst:=(0x6c,0)}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} %ebx{0;16}){0;32} --> (0x68,1);
[0x68,1] %ecx{0;16} := %tmpr0_32{0;16} --> (0x68,2);
[0x68,2] << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> Skip --> (0x68,3); << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> Skip --> (0x68,5);
[0x68,3] %cf{0;1} := 0x1{0;1} --> (0x68,4);
[0x68,4] %of{0;1} := 0x1{0;1} --> (0x6c,0);
[0x68,5] %cf{0;1} := 0x0{0;1} --> (0x68,6);
[0x68,6] %of{0;1} := 0x0{0;1} --> (0x6c,0);
[0x6c,0] @{asm:=call   0x6680, next-inst:=(0x71,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x6c,1);
[0x6c,1] [%esp{0;32}]{0;32} := 0x71{0;32} --> (0x6c,2);
[0x6c,2] @{callret:=CALL}@ Skip --> (0x6680,0);
[0x71,0] @{asm:=cmp    $0x2964,%cx, next-inst:=(0x76,0)}@ %tmpr0_17{0;17} := (SUB (EXTEND_U %ecx{0;16} 0x11{0;32}){0;17} (EXTEND_U 0x2964{0;16} 0x11{0;32}){0;17}){0;17} --> (0x71,1);
[0x71,1] %cf{0;1} := %tmpr0_17{16;1} --> (0x71,2);
[0x71,2] %of{0;1} := (AND (XOR %ecx{15;1} %tmpr0_17{15;1}){0;1} (XOR %ecx{15;1} 0x0{0;1}){0;1}){0;1} --> (0x71,3);
[0x71,3] %sf{0;1} := %tmpr0_17{15;1} --> (0x71,4);
[0x71,4] %zf{0;1} := (EQ %tmpr0_17{0;16} 0x0{0;16}){0;1} --> (0x71,5);
[0x71,5] %af{0;1} := %tmpr0_17{4;1} --> (0x71,6);
[0x71,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_17{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0x76,0);
[0x76,0] @{asm:=jne    0x6666, next-inst:=(0x7c,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0x7c,0);
[0x7c,0] @{asm:=mov    $0x11111111,%ecx, next-inst:=(0x81,0)}@ %ecx{0;32} := 0x11111111{0;32} --> (0x81,0);
[0x81,0] @{asm:=mov    %ecx,%ebx, next-inst:=(0x83,0)}@ %ebx{0;32} := %ecx{0;32} --> (0x83,0);
[0x83,0] @{asm:=imul   %ebx,%ecx, next-inst:=(0x86,0)}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} %ebx{0;32}){0;64} --> (0x83,1);
[0x83,1] %ecx{0;32} := %tmpr0_64{0;32} --> (0x83,2);
[0x83,2] << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> Skip --> (0x83,3); << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> Skip --> (0x83,5);
[0x83,3] %cf{0;1} := 0x1{0;1} --> (0x83,4);
[0x83,4] %of{0;1} := 0x1{0;1} --> (0x86,0);
[0x83,5] %cf{0;1} := 0x0{0;1} --> (0x83,6);
[0x83,6] %of{0;1} := 0x0{0;1} --> (0x86,0);
[0x86,0] @{asm:=call   0x667b, next-inst:=(0x8b,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x86,1);
[0x86,1] [%esp{0;32}]{0;32} := 0x8b{0;32} --> (0x86,2);
[0x86,2] @{callret:=CALL}@ Skip --> (0x667b,0);
[0x8b,0] @{asm:=cmp    $0x87654321,%ecx, next-inst:=(0x91,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %ecx{0;32} 0x21{0;32}){0;33} (EXTEND_U 0x87654321{0;32} 0x21{0;32}){0;33}){0;33} --> (0x8b,1);
[0x8b,1] %cf{0;1} := %tmpr0_33{32;1} --> (0x8b,2);
[0x8b,2] %of{0;1} := (AND (XOR %ecx{31;1} %tmpr0_33{31;1}){0;1} (XOR %ecx{31;1} 0x1{0;1}){0;1}){0;1} --> (0x8b,3);
[0x8b,3] %sf{0;1} := %tmpr0_33{31;1} --> (0x8b,4);
[0x8b,4] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1} --> (0x8b,5);
[0x8b,5] %af{0;1} := %tmpr0_33{4;1} --> (0x8b,6);
[0x8b,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0x91,0);
[0x91,0] @{asm:=jne    0x6666, next-inst:=(0x97,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0x97,0);
[0x97,0] @{asm:=mov    $0x12345678,%ecx, next-inst:=(0x9c,0)}@ %ecx{0;32} := 0x12345678{0;32} --> (0x9c,0);
[0x9c,0] @{asm:=mov    $0x3,%ebx, next-inst:=(0xa1,0)}@ %ebx{0;32} := 0x3{0;32} --> (0xa1,0);
[0xa1,0] @{asm:=imul   %ebx,%ecx, next-inst:=(0xa4,0)}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} %ebx{0;32}){0;64} --> (0xa1,1);
[0xa1,1] %ecx{0;32} := %tmpr0_64{0;32} --> (0xa1,2);
[0xa1,2] << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> Skip --> (0xa1,3); << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> Skip --> (0xa1,5);
[0xa1,3] %cf{0;1} := 0x1{0;1} --> (0xa1,4);
[0xa1,4] %of{0;1} := 0x1{0;1} --> (0xa4,0);
[0xa1,5] %cf{0;1} := 0x0{0;1} --> (0xa1,6);
[0xa1,6] %of{0;1} := 0x0{0;1} --> (0xa4,0);
[0xa4,0] @{asm:=call   0x6680, next-inst:=(0xa9,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0xa4,1);
[0xa4,1] [%esp{0;32}]{0;32} := 0xa9{0;32} --> (0xa4,2);
[0xa4,2] @{callret:=CALL}@ Skip --> (0x6680,0);
[0xa9,0] @{asm:=cmp    $0x369d0368,%ecx, next-inst:=(0xaf,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %ecx{0;32} 0x21{0;32}){0;33} (EXTEND_U 0x369d0368{0;32} 0x21{0;32}){0;33}){0;33} --> (0xa9,1);
[0xa9,1] %cf{0;1} := %tmpr0_33{32;1} --> (0xa9,2);
[0xa9,2] %of{0;1} := (AND (XOR %ecx{31;1} %tmpr0_33{31;1}){0;1} (XOR %ecx{31;1} 0x0{0;1}){0;1}){0;1} --> (0xa9,3);
[0xa9,3] %sf{0;1} := %tmpr0_33{31;1} --> (0xa9,4);
[0xa9,4] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1} --> (0xa9,5);
[0xa9,5] %af{0;1} := %tmpr0_33{4;1} --> (0xa9,6);
[0xa9,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0xaf,0);
[0xaf,0] @{asm:=jne    0x6666, next-inst:=(0xb5,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0xb5,0);
[0xb5,0] @{asm:=mov    $0xfffffffd,%ebx, next-inst:=(0xba,0)}@ %ebx{0;32} := 0xfffffffd{0;32} --> (0xba,0);
[0xba,0] @{asm:=imul   %ebx,%ecx, next-inst:=(0xbd,0)}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} %ebx{0;32}){0;64} --> (0xba,1);
[0xba,1] %ecx{0;32} := %tmpr0_64{0;32} --> (0xba,2);
[0xba,2] << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> Skip --> (0xba,3); << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> Skip --> (0xba,5);
[0xba,3] %cf{0;1} := 0x1{0;1} --> (0xba,4);
[0xba,4] %of{0;1} := 0x1{0;1} --> (0xbd,0);
[0xba,5] %cf{0;1} := 0x0{0;1} --> (0xba,6);
[0xba,6] %of{0;1} := 0x0{0;1} --> (0xbd,0);
[0xbd,0] @{asm:=call   0x667b, next-inst:=(0xc2,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0xbd,1);
[0xbd,1] [%esp{0;32}]{0;32} := 0xc2{0;32} --> (0xbd,2);
[0xbd,2] @{callret:=CALL}@ Skip --> (0x667b,0);
[0xc2,0] @{asm:=cmp    $0x5c28f5c8,%ecx, next-inst:=(0xc8,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %ecx{0;32} 0x21{0;32}){0;33} (EXTEND_U 0x5c28f5c8{0;32} 0x21{0;32}){0;33}){0;33} --> (0xc2,1);
[0xc2,1] %cf{0;1} := %tmpr0_33{32;1} --> (0xc2,2);
[0xc2,2] %of{0;1} := (AND (XOR %ecx{31;1} %tmpr0_33{31;1}){0;1} (XOR %ecx{31;1} 0x0{0;1}){0;1}){0;1} --> (0xc2,3);
[0xc2,3] %sf{0;1} := %tmpr0_33{31;1} --> (0xc2,4);
[0xc2,4] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1} --> (0xc2,5);
[0xc2,5] %af{0;1} := %tmpr0_33{4;1} --> (0xc2,6);
[0xc2,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0xc8,0);
[0xc8,0] @{asm:=jne    0x6666, next-inst:=(0xce,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0xce,0);
[0xce,0] @{asm:=mov    $0xf2345678,%ecx, next-inst:=(0xd3,0)}@ %ecx{0;32} := 0xf2345678{0;32} --> (0xd3,0);
[0xd3,0] @{asm:=mov    $0xfffffffd,%ebx, next-inst:=(0xd8,0)}@ %ebx{0;32} := 0xfffffffd{0;32} --> (0xd8,0);
[0xd8,0] @{asm:=imul   %ebx,%ecx, next-inst:=(0xdb,0)}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} %ebx{0;32}){0;64} --> (0xd8,1);
[0xd8,1] %ecx{0;32} := %tmpr0_64{0;32} --> (0xd8,2);
[0xd8,2] << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> Skip --> (0xd8,3); << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> Skip --> (0xd8,5);
[0xd8,3] %cf{0;1} := 0x1{0;1} --> (0xd8,4);
[0xd8,4] %of{0;1} := 0x1{0;1} --> (0xdb,0);
[0xd8,5] %cf{0;1} := 0x0{0;1} --> (0xd8,6);
[0xd8,6] %of{0;1} := 0x0{0;1} --> (0xdb,0);
[0xdb,0] @{asm:=call   0x6680, next-inst:=(0xe0,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0xdb,1);
[0xdb,1] [%esp{0;32}]{0;32} := 0xe0{0;32} --> (0xdb,2);
[0xdb,2] @{callret:=CALL}@ Skip --> (0x6680,0);
[0xe0,0] @{asm:=cmp    $0x2962fc98,%ecx, next-inst:=(0xe6,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %ecx{0;32} 0x21{0;32}){0;33} (EXTEND_U 0x2962fc98{0;32} 0x21{0;32}){0;33}){0;33} --> (0xe0,1);
[0xe0,1] %cf{0;1} := %tmpr0_33{32;1} --> (0xe0,2);
[0xe0,2] %of{0;1} := (AND (XOR %ecx{31;1} %tmpr0_33{31;1}){0;1} (XOR %ecx{31;1} 0x0{0;1}){0;1}){0;1} --> (0xe0,3);
[0xe0,3] %sf{0;1} := %tmpr0_33{31;1} --> (0xe0,4);
[0xe0,4] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1} --> (0xe0,5);
[0xe0,5] %af{0;1} := %tmpr0_33{4;1} --> (0xe0,6);
[0xe0,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0xe6,0);
[0xe6,0] @{asm:=jne    0x6666, next-inst:=(0xec,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0xec,0);
[0xec,0] @{asm:=jmp    0x1000, next-inst:=(0xf1,0)}@ Skip --> (0x1000,0);
[0x1000,0] @{asm:=cmp    $0xffff,%esp, next-inst:=(0x1006,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %esp{0;32} 0x21{0;32}){0;33} (EXTEND_U 0xffff{0;32} 0x21{0;32}){0;33}){0;33} --> (0x1000,1);
[0x1000,1] %cf{0;1} := %tmpr0_33{32;1} --> (0x1000,2);
[0x1000,2] %of{0;1} := (AND (XOR %esp{31;1} %tmpr0_33{31;1}){0;1} (XOR %esp{31;1} 0x0{0;1}){0;1}){0;1} --> (0x1000,3);
[0x1000,3] %sf{0;1} := %tmpr0_33{31;1} --> (0x1000,4);
[0x1000,4] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1} --> (0x1000,5);
[0x1000,5] %af{0;1} := %tmpr0_33{4;1} --> (0x1000,6);
[0x1000,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0x1006,0);
[0x1006,0] @{asm:=jne    0x6666, next-inst:=(0x100c,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0x100c,0);
[0x100c,0] @{asm:=jmp    0x1111, next-inst:=(0x1011,0)}@ Skip --> (0x1111,0);
[0x1111,0] @{asm:=jmp    0x1111, next-inst:=(0x1113,0)}@ Skip --> (0x1111,0);
[0x6666,0] @{asm:=jmp    0x6666, next-inst:=(0x6668,0)}@ Skip --> (0x6666,0);
[0x667b,0] @{asm:=jae    0x6666, next-inst:=(0x667d,0)}@ << (NOT %cf{0;1}){0;1} >> Skip --> (0x6666,0); << %cf{0;1} >> Skip --> (0x667d,0);
[0x667d,0] @{asm:=jno    0x6666, next-inst:=(0x667f,0)}@ << (NOT %of{0;1}){0;1} >> Skip --> (0x6666,0); << %of{0;1} >> Skip --> (0x667f,0);
[0x667f,0] @{asm:=ret    , next-inst:=(0x6680,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x667f,1);
[0x667f,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x667f,2);
[0x667f,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};
[0x6680,0] @{asm:=jb     0x6666, next-inst:=(0x6682,0)}@ << %cf{0;1} >> Skip --> (0x6666,0); << (NOT %cf{0;1}){0;1} >> Skip --> (0x6682,0);
[0x6682,0] @{asm:=jo     0x6666, next-inst:=(0x6684,0)}@ << %of{0;1} >> Skip --> (0x6666,0); << (NOT %of{0;1}){0;1} >> Skip --> (0x6684,0);
[0x6684,0] @{asm:=ret    , next-inst:=(0x6685,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x6684,1);
[0x6684,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x6684,2);
[0x6684,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};
