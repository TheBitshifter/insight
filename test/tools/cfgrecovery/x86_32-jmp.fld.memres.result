((0x0,0), [(0x0,0)] @{asm:=jmp    0x13, next-inst:=(0x5,0)}@ StaticArrow (0x0,0) Skip  --> (0x13,0))
((0x5,0), [(0x5,0)] @{asm:=jmp    0x123a, next-inst:=(0xA,0)}@ StaticArrow (0x5,0) Skip  --> (0x123A,0))
((0xA,0), [(0xA,0)] @{asm:=jmp    0xedcba993, next-inst:=(0xF,0)}@ StaticArrow (0xA,0) Skip  --> (0xEDCBA993,0))
((0xF,0), [(0xF,0)] @{asm:=jmpw   *%ax, next-inst:=(0x12,0)}@ DynamicArrow (0xF,0) Jmp %eax{0;16}  --> << %eax{0;16} >>@{solved-jmp:={ (0x12,0)}}@ )
((0x12,0), [(0x12,0)] @{asm:=jmp    *0x12345678, next-inst:=(0x18,0)}@ DynamicArrow (0x12,0) Jmp [0x12345678{0;32}]{0;32}  --> << [0x12345678{0;32}]{0;32} >>@{solved-jmp:={ (0x18,0)}}@ )
((0x13,0), [(0x13,0)] @{asm:=and    $0x12345678,%eax, next-inst:=(0x18,0)}@ %eax{0;32} := (AND %eax{0;32} 0x12345678{0;32}){0;32})
((0x13,1), [(0x13,1)] %sf{0;1} := %eax{31;1})
((0x13,2), [(0x13,2)] %zf{0;1} := (EQ %eax{0;32} 0x0{0;32}){0;1})
((0x13,3), [(0x13,3)] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %eax{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %eax{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %eax{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %eax{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %eax{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %eax{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %eax{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %eax{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1})
((0x13,4), [(0x13,4)] %cf{0;1} := 0x0{0;1})
((0x13,5), [(0x13,5)] StaticArrow (0x13,5) %of{0;1} := 0x0{0;1}  --> (0x18,0))
((0x18,0), [(0x18,0)] @{asm:=jmp    *%eax, next-inst:=(0x1A,0)}@ DynamicArrow (0x18,0) Jmp %eax{0;32}  --> << %eax{0;32} >>@{solved-jmp:={ (0x1A,0)}}@ )
((0x1A,0), [(0x1A,0)] @{asm:=jmp    *0x12345678, next-inst:=(0x20,0)}@ DynamicArrow (0x1A,0) Jmp [0x12345678{0;32}]{0;32}  --> << [0x12345678{0;32}]{0;32} >>@{solved-jmp:={ (0x20,0)}}@ )
((0x123A,0), [(0x123A,0)] )
((0xEDCBA993,0), [(0xEDCBA993,0)] )

