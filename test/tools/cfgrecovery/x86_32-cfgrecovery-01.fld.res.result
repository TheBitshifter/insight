[(0x0,0)] @{asm:=mov    $0x1,%ax, next-inst:=(0x4,0)}@ StaticArrow (0x0,0) %eax{0;16} := 0x1{0;16}  --> (0x4,0)
[(0x4,0)] @{asm:=mov    $0x2,%bx, next-inst:=(0x8,0)}@ StaticArrow (0x4,0) %ebx{0;16} := 0x2{0;16}  --> (0x8,0)
[(0x8,0)] @{asm:=call   0x18, next-inst:=(0xD,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32}
[(0x8,1)] [%esp{0;32}]{0;32} := 0xD{0;32}
[(0x8,2)] @{callret:=CALL}@ StaticArrow (0x8,2) Skip  --> (0x18,0)
[(0xD,0)] @{asm:=call   0x1d, next-inst:=(0x12,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32}
[(0xD,1)] [%esp{0;32}]{0;32} := 0x12{0;32}
[(0xD,2)] @{callret:=CALL}@ StaticArrow (0xD,2) Skip  --> (0x1D,0)
[(0x12,0)] @{asm:=call   0x22, next-inst:=(0x17,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32}
[(0x12,1)] [%esp{0;32}]{0;32} := 0x17{0;32}
[(0x12,2)] @{callret:=CALL}@ StaticArrow (0x12,2) Skip  --> (0x22,0)
[(0x17,0)] @{asm:=ret    , next-inst:=(0x18,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32}
[(0x17,1)] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32}
[(0x17,2)] @{callret:=RET}@ DynamicArrow (0x17,2) Jmp %tmpr0_32{0;32}  --> << %tmpr0_32{0;32} >>
[(0x18,0)] @{asm:=mov    $0x3,%ax, next-inst:=(0x1C,0)}@ StaticArrow (0x18,0) %eax{0;16} := 0x3{0;16}  --> (0x1C,0)
[(0x1C,0)] @{asm:=ret    , next-inst:=(0x1D,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32}
[(0x1C,1)] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32}
[(0x1C,2)] @{callret:=RET}@ DynamicArrow (0x1C,2) Jmp %tmpr0_32{0;32}  --> << %tmpr0_32{0;32} >>
[(0x1D,0)] @{asm:=mov    $0x4,%ax, next-inst:=(0x21,0)}@ StaticArrow (0x1D,0) %eax{0;16} := 0x4{0;16}  --> (0x21,0)
[(0x21,0)] @{asm:=ret    , next-inst:=(0x22,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32}
[(0x21,1)] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32}
[(0x21,2)] @{callret:=RET}@ DynamicArrow (0x21,2) Jmp %tmpr0_32{0;32}  --> << %tmpr0_32{0;32} >>
[(0x22,0)] @{asm:=call   0x18, next-inst:=(0x27,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32}
[(0x22,1)] [%esp{0;32}]{0;32} := 0x27{0;32}
[(0x22,2)] @{callret:=CALL}@ StaticArrow (0x22,2) Skip  --> (0x18,0)
[(0x27,0)] @{asm:=mov    %bx,%ax, next-inst:=(0x2A,0)}@ StaticArrow (0x27,0) %eax{0;16} := %ebx{0;16}  --> (0x2A,0)
[(0x2A,0)] @{asm:=call   0x1d, next-inst:=(0x2F,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32}
[(0x2A,1)] [%esp{0;32}]{0;32} := 0x2F{0;32}
[(0x2A,2)] @{callret:=CALL}@ StaticArrow (0x2A,2) Skip  --> (0x1D,0)
[(0x2F,0)] @{asm:=ret    , next-inst:=(0x30,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32}
[(0x2F,1)] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32}
[(0x2F,2)] @{callret:=RET}@ DynamicArrow (0x2F,2) Jmp %tmpr0_32{0;32}  --> << %tmpr0_32{0;32} >>

