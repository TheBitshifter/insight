(0x17,2): error: ret without matching call
[0x0,0] @{asm:=mov    $0x1,%ax, next-inst:=(0x4,0)}@ %eax{0;16} := 0x1{0;16} --> (0x4,0);
[0x4,0] @{asm:=mov    $0x2,%bx, next-inst:=(0x8,0)}@ %ebx{0;16} := 0x2{0;16} --> (0x8,0);
[0x8,0] @{asm:=call   0x18, next-inst:=(0xd,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x8,1);
[0x8,1] [%esp{0;32}]{0;32} := 0xd{0;32} --> (0x8,2);
[0x8,2] @{callret:=CALL}@ Skip --> (0x18,0);
[0xd,0] @{asm:=call   0x1d, next-inst:=(0x12,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0xd,1);
[0xd,1] [%esp{0;32}]{0;32} := 0x12{0;32} --> (0xd,2);
[0xd,2] @{callret:=CALL}@ Skip --> (0x1d,0);
[0x12,0] @{asm:=call   0x22, next-inst:=(0x17,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x12,1);
[0x12,1] [%esp{0;32}]{0;32} := 0x17{0;32} --> (0x12,2);
[0x12,2] @{callret:=CALL}@ Skip --> (0x22,0);
[0x17,0] @{asm:=ret    , next-inst:=(0x18,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x17,1);
[0x17,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x17,2);
[0x17,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};
[0x18,0] @{asm:=mov    $0x3,%ax, next-inst:=(0x1c,0)}@ %eax{0;16} := 0x3{0;16} --> (0x1c,0);
[0x1c,0] @{asm:=ret    , next-inst:=(0x1d,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x1c,1);
[0x1c,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x1c,2);
[0x1c,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};
[0x1d,0] @{asm:=mov    $0x4,%ax, next-inst:=(0x21,0)}@ %eax{0;16} := 0x4{0;16} --> (0x21,0);
[0x21,0] @{asm:=ret    , next-inst:=(0x22,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x21,1);
[0x21,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x21,2);
[0x21,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};
[0x22,0] @{asm:=call   0x18, next-inst:=(0x27,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x22,1);
[0x22,1] [%esp{0;32}]{0;32} := 0x27{0;32} --> (0x22,2);
[0x22,2] @{callret:=CALL}@ Skip --> (0x18,0);
[0x27,0] @{asm:=mov    %bx,%ax, next-inst:=(0x2a,0)}@ %eax{0;16} := %ebx{0;16} --> (0x2a,0);
[0x2a,0] @{asm:=call   0x1d, next-inst:=(0x2f,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x2a,1);
[0x2a,1] [%esp{0;32}]{0;32} := 0x2f{0;32} --> (0x2a,2);
[0x2a,2] @{callret:=CALL}@ Skip --> (0x1d,0);
[0x2f,0] @{asm:=ret    , next-inst:=(0x30,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x2f,1);
[0x2f,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x2f,2);
[0x2f,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};
