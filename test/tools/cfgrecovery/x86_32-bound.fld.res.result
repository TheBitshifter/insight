[0x0,0] @{asm:=bound  %bx,0x1234, next-inst:=(0x7,0)}@ << (AND (LEQ_S [0x1234{0;32}]{0;16} %ebx{0;16}){0;1} (LEQ_S %ebx{0;16} [(ADD 0x1234{0;32} 0x2{0;32}){0;32}]{0;16}){0;1}){0;1} >> Skip --> (0x7,0);
[0x7,0] @{asm:=bound  %ebx,0x1234, next-inst:=(0xd,0)}@ << (AND (LEQ_S [0x1234{0;32}]{0;32} %ebx{0;32}){0;1} (LEQ_S %ebx{0;32} [(ADD 0x1234{0;32} 0x4{0;32}){0;32}]{0;32}){0;1}){0;1} >> Skip --> (0xd,0);
[0xd,0]
