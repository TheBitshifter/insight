[(0x0,0)] @{asm:=movb   $0x0,0x12fa792}@ StaticArrow (0x0,0) [0x12FA792{0;32}]{0;8} := 0x0{0;8}  --> (0x7,0)
[(0x7,0)] @{asm:=mov    $0xffff,%esp}@ StaticArrow (0x7,0) %esp{0;32} := 0xFFFF{0;32}  --> (0xC,0)
[(0xC,0)] @{asm:=mov    $0x12345678,%ebp}@ StaticArrow (0xC,0) %ebp{0;32} := 0x12345678{0;32}  --> (0x11,0)
[(0x11,0)] @{asm:=mov    $0xffff,%esp}@ StaticArrow (0x11,0) %esp{0;32} := 0xFFFF{0;32}  --> (0x16,0)
[(0x16,0)] @{asm:=call   0x667b}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32}
[(0x16,1)] [%esp{0;32}]{0;32} := 0x1B{0;32}
[(0x16,2)] @{callret:=CALL}@ StaticArrow (0x16,2) Skip  --> (0x667B,0)
[(0x1B,0)] @{asm:=call   *%eax}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32}
[(0x1B,1)] [%esp{0;32}]{0;32} := 0x1D{0;32}
[(0x1B,2)] @{callret:=CALL}@ DynamicArrow (0x1B,2) Jmp %eax{0;32}  --> << %eax{0;32} >>
[(0x667B,0)] @{asm:=call   0x6681}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32}
[(0x667B,1)] [%esp{0;32}]{0;32} := 0x6680{0;32}
[(0x667B,2)] @{callret:=CALL}@ StaticArrow (0x667B,2) Skip  --> (0x6681,0)
[(0x6680,0)] @{asm:=ret    }@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32}
[(0x6680,1)] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32}
[(0x6680,2)] @{callret:=RET}@ DynamicArrow (0x6680,2) Jmp %tmpr0_32{0;32}  --> << %tmpr0_32{0;32} >>@{solved-jmp:={ (0x1B,0)}}@ 
[(0x6681,0)] @{asm:=mov    $0x6687,%eax}@ StaticArrow (0x6681,0) %eax{0;32} := 0x6687{0;32}  --> (0x6686,0)
[(0x6686,0)] @{asm:=ret    }@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32}
[(0x6686,1)] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32}
[(0x6686,2)] @{callret:=RET}@ DynamicArrow (0x6686,2) Jmp %tmpr0_32{0;32}  --> << %tmpr0_32{0;32} >>@{solved-jmp:={ (0x6680,0)}}@ 

