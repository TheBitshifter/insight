[(0x0,0)] @{asm:=movb   $0x0,0x12fa792}@ ; StaticArrow (0x0,0) [0x12FA792]{0;8} := 0x0{0;8}  --> (0x7,0)
[(0x7,0)] @{asm:=mov    $0xffff,%esp}@ ; StaticArrow (0x7,0) %esp := 0xFFFF  --> (0xC,0)
[(0xC,0)] @{asm:=mov    $0x12345678,%ebp}@ ; StaticArrow (0xC,0) %ebp := 0x12345678  --> (0x11,0)
[(0x11,0)] @{asm:=mov    $0xffff,%esp}@ ; StaticArrow (0x11,0) %esp := 0xFFFF  --> (0x16,0)
[(0x16,0)] @{callret:=CALL, asm:=call   0x6668}@ ; %esp := (SUB %esp 0x4)
[(0x16,1)] ; [%esp] := 0x1B
[(0x16,2)] ; StaticArrow (0x16,2) Skip  --> (0x6668,0)
[(0x1B,0)] @{callret:=CALL, asm:=call   *%eax}@ ; %esp := (SUB %esp 0x4)
[(0x1B,1)] ; [%esp] := 0x1D
[(0x1B,2)] ; DynamicArrow (0x1B,2) Jmp %eax  --> << %eax >>
[(0x6668,0)] @{callret:=CALL, asm:=call   0x666e}@ ; %esp := (SUB %esp 0x4)
[(0x6668,1)] ; [%esp] := 0x666D
[(0x6668,2)] ; StaticArrow (0x6668,2) Skip  --> (0x666E,0)
[(0x666E,0)] @{asm:=mov    $0x6674,%eax}@ ; StaticArrow (0x666E,0) %eax := 0x6674  --> (0x6673,0)
[(0x6673,0)] @{callret:=RET, asm:=ret    }@ ; %tmpr0_32 := [%esp]
[(0x6673,1)] ; %esp := (ADD %esp 0x4)
[(0x6673,2)] ; DynamicArrow (0x6673,2) Jmp %tmpr0_32  --> << %tmpr0_32 >>

