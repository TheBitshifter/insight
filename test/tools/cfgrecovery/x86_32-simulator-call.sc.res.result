[0x0,0] @{asm:=movb   $0x0,0x12fa792, next-inst:=(0x7,0)}@ [0x12fa792{0;32}]{0;8} := 0x0{0;8} --> (0x7,0);
[0x7,0] @{asm:=mov    $0xffff,%esp, next-inst:=(0xc,0)}@ %esp{0;32} := 0xffff{0;32} --> (0xc,0);
[0xc,0] @{asm:=mov    $0x12345678,%ebp, next-inst:=(0x11,0)}@ %ebp{0;32} := 0x12345678{0;32} --> (0x11,0);
[0x11,0] @{asm:=mov    $0xffff,%esp, next-inst:=(0x16,0)}@ %esp{0;32} := 0xffff{0;32} --> (0x16,0);
[0x16,0] @{asm:=call   0x667b, next-inst:=(0x1b,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x16,1);
[0x16,1] [%esp{0;32}]{0;32} := 0x1b{0;32} --> (0x16,2);
[0x16,2] @{callret:=CALL}@ Skip --> (0x667b,0);
[0x1b,0] @{asm:=call   *%eax, next-inst:=(0x1d,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x1b,1);
[0x1b,1] [%esp{0;32}]{0;32} := 0x1d{0;32} --> (0x1b,2);
[0x1b,2] @{callret:=CALL}@ Jmp --> %eax{0;32};
[0x1d,0] @{asm:=cmp    $0x1f2f3f4f,%eax, next-inst:=(0x22,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %eax{0;32} 0x21{0;32}){0;33} (EXTEND_U 0x1f2f3f4f{0;32} 0x21{0;32}){0;33}){0;33} --> (0x1d,1);
[0x1d,1] %cf{0;1} := %tmpr0_33{32;1} --> (0x1d,2);
[0x1d,2] %of{0;1} := (AND (XOR %eax{31;1} %tmpr0_33{31;1}){0;1} (XOR %eax{31;1} 0x0{0;1}){0;1}){0;1} --> (0x1d,3);
[0x1d,3] %sf{0;1} := %tmpr0_33{31;1} --> (0x1d,4);
[0x1d,4] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1} --> (0x1d,5);
[0x1d,5] %af{0;1} := %tmpr0_33{4;1} --> (0x1d,6);
[0x1d,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0x22,0);
[0x22,0] @{asm:=jne    0x6666, next-inst:=(0x28,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0x28,0);
[0x28,0] @{asm:=jmp    0x1000, next-inst:=(0x2d,0)}@ Skip --> (0x1000,0);
[0x1000,0] @{asm:=cmp    $0xffff,%esp, next-inst:=(0x1006,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %esp{0;32} 0x21{0;32}){0;33} (EXTEND_U 0xffff{0;32} 0x21{0;32}){0;33}){0;33} --> (0x1000,1);
[0x1000,1] %cf{0;1} := %tmpr0_33{32;1} --> (0x1000,2);
[0x1000,2] %of{0;1} := (AND (XOR %esp{31;1} %tmpr0_33{31;1}){0;1} (XOR %esp{31;1} 0x0{0;1}){0;1}){0;1} --> (0x1000,3);
[0x1000,3] %sf{0;1} := %tmpr0_33{31;1} --> (0x1000,4);
[0x1000,4] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1} --> (0x1000,5);
[0x1000,5] %af{0;1} := %tmpr0_33{4;1} --> (0x1000,6);
[0x1000,6] %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1} --> (0x1006,0);
[0x1006,0] @{asm:=jne    0x6666, next-inst:=(0x100c,0)}@ << (NOT %zf{0;1}){0;1} >> Skip --> (0x6666,0); << %zf{0;1} >> Skip --> (0x100c,0);
[0x100c,0] @{asm:=jmp    0x1111, next-inst:=(0x1011,0)}@ Skip --> (0x1111,0);
[0x1111,0] @{asm:=jmp    0x1111, next-inst:=(0x1113,0)}@ Skip --> (0x1111,0);
[0x6666,0]
[0x667b,0] @{asm:=call   0x6681, next-inst:=(0x6680,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32} --> (0x667b,1);
[0x667b,1] [%esp{0;32}]{0;32} := 0x6680{0;32} --> (0x667b,2);
[0x667b,2] @{callret:=CALL}@ Skip --> (0x6681,0);
[0x6680,0] @{asm:=ret    , next-inst:=(0x6681,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x6680,1);
[0x6680,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x6680,2);
[0x6680,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};
[0x6681,0] @{asm:=mov    $0x6687,%eax, next-inst:=(0x6686,0)}@ %eax{0;32} := 0x6687{0;32} --> (0x6686,0);
[0x6686,0] @{asm:=ret    , next-inst:=(0x6687,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x6686,1);
[0x6686,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x6686,2);
[0x6686,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};
[0x6687,0] @{asm:=mov    $0x1f2f3f4f,%eax, next-inst:=(0x668c,0)}@ %eax{0;32} := 0x1f2f3f4f{0;32} --> (0x668c,0);
[0x668c,0] @{asm:=ret    , next-inst:=(0x668d,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32} --> (0x668c,1);
[0x668c,1] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32} --> (0x668c,2);
[0x668c,2] @{callret:=RET}@ Jmp --> %tmpr0_32{0;32};
