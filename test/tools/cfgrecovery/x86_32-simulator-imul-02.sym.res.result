((0x0,0), [(0x0,0)] @{asm:=movb   $0x0,0x12fa792, next-inst:=(0x7,0)}@ StaticArrow (0x0,0) [0x12FA792{0;32}]{0;8} := 0x0{0;8}  --> (0x7,0))
((0x7,0), [(0x7,0)] @{asm:=mov    $0xffff,%esp, next-inst:=(0xC,0)}@ StaticArrow (0x7,0) %esp{0;32} := 0xFFFF{0;32}  --> (0xC,0))
((0xC,0), [(0xC,0)] @{asm:=mov    $0x12345678,%ebp, next-inst:=(0x11,0)}@ StaticArrow (0xC,0) %ebp{0;32} := 0x12345678{0;32}  --> (0x11,0))
((0x11,0), [(0x11,0)] @{asm:=mov    $0x1111,%cx, next-inst:=(0x15,0)}@ StaticArrow (0x11,0) %ecx{0;16} := 0x1111{0;16}  --> (0x15,0))
((0x15,0), [(0x15,0)] @{asm:=mov    %cx,%bx, next-inst:=(0x18,0)}@ StaticArrow (0x15,0) %ebx{0;16} := %ecx{0;16}  --> (0x18,0))
((0x18,0), [(0x18,0)] @{asm:=imul   %bx,%cx, next-inst:=(0x1C,0)}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} %ebx{0;16}){0;32})
((0x18,1), [(0x18,1)] %ecx{0;16} := %tmpr0_32{0;16})
((0x18,2), [(0x18,2)] StaticArrow (0x18,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x18,3)StaticArrow (0x18,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x18,5))
((0x18,3), [(0x18,3)] %cf{0;1} := 0x1{0;1})
((0x18,4), [(0x18,4)] StaticArrow (0x18,4) %of{0;1} := 0x1{0;1}  --> (0x1C,0))
((0x18,5), [(0x18,5)] %cf{0;1} := 0x0{0;1})
((0x18,6), [(0x18,6)] StaticArrow (0x18,6) %of{0;1} := 0x0{0;1}  --> (0x1C,0))
((0x1C,0), [(0x1C,0)] @{asm:=call   0x667b, next-inst:=(0x21,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32})
((0x1C,1), [(0x1C,1)] [%esp{0;32}]{0;32} := 0x21{0;32})
((0x1C,2), [(0x1C,2)] @{callret:=CALL}@ StaticArrow (0x1C,2) Skip  --> (0x667B,0))
((0x21,0), [(0x21,0)] @{asm:=cmp    $0x4321,%cx, next-inst:=(0x26,0)}@ %tmpr0_17{0;17} := (SUB (EXTEND_U %ecx{0;16} 0x11{0;32}){0;17} (EXTEND_U 0x4321{0;16} 0x11{0;32}){0;17}){0;17})
((0x21,1), [(0x21,1)] %cf{0;1} := %tmpr0_17{16;1})
((0x21,2), [(0x21,2)] %of{0;1} := (AND (XOR %ecx{15;1} %tmpr0_17{15;1}){0;1} (XOR %ecx{15;1} 0x0{0;1}){0;1}){0;1})
((0x21,3), [(0x21,3)] %sf{0;1} := %tmpr0_17{15;1})
((0x21,4), [(0x21,4)] %zf{0;1} := (EQ %tmpr0_17{0;16} 0x0{0;16}){0;1})
((0x21,5), [(0x21,5)] %af{0;1} := %tmpr0_17{4;1})
((0x21,6), [(0x21,6)] StaticArrow (0x21,6) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_17{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x26,0))
((0x26,0), [(0x26,0)] @{asm:=jne    0x6666, next-inst:=(0x2C,0)}@ StaticArrow (0x26,0) Skip << (NOT %zf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0x26,0) Skip << %zf{0;1} >> --> (0x2C,0))
((0x2C,0), [(0x2C,0)] @{asm:=mov    $0x1234,%cx, next-inst:=(0x30,0)}@ StaticArrow (0x2C,0) %ecx{0;16} := 0x1234{0;16}  --> (0x30,0))
((0x30,0), [(0x30,0)] @{asm:=mov    $0x3,%bx, next-inst:=(0x34,0)}@ StaticArrow (0x30,0) %ebx{0;16} := 0x3{0;16}  --> (0x34,0))
((0x34,0), [(0x34,0)] @{asm:=imul   %bx,%cx, next-inst:=(0x38,0)}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} %ebx{0;16}){0;32})
((0x34,1), [(0x34,1)] %ecx{0;16} := %tmpr0_32{0;16})
((0x34,2), [(0x34,2)] StaticArrow (0x34,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x34,3)StaticArrow (0x34,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x34,5))
((0x34,3), [(0x34,3)] %cf{0;1} := 0x1{0;1})
((0x34,4), [(0x34,4)] StaticArrow (0x34,4) %of{0;1} := 0x1{0;1}  --> (0x38,0))
((0x34,5), [(0x34,5)] %cf{0;1} := 0x0{0;1})
((0x34,6), [(0x34,6)] StaticArrow (0x34,6) %of{0;1} := 0x0{0;1}  --> (0x38,0))
((0x38,0), [(0x38,0)] @{asm:=call   0x6680, next-inst:=(0x3D,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32})
((0x38,1), [(0x38,1)] [%esp{0;32}]{0;32} := 0x3D{0;32})
((0x38,2), [(0x38,2)] @{callret:=CALL}@ StaticArrow (0x38,2) Skip  --> (0x6680,0))
((0x3D,0), [(0x3D,0)] @{asm:=cmp    $0x369c,%cx, next-inst:=(0x42,0)}@ %tmpr0_17{0;17} := (SUB (EXTEND_U %ecx{0;16} 0x11{0;32}){0;17} (EXTEND_U 0x369C{0;16} 0x11{0;32}){0;17}){0;17})
((0x3D,1), [(0x3D,1)] %cf{0;1} := %tmpr0_17{16;1})
((0x3D,2), [(0x3D,2)] %of{0;1} := (AND (XOR %ecx{15;1} %tmpr0_17{15;1}){0;1} (XOR %ecx{15;1} 0x0{0;1}){0;1}){0;1})
((0x3D,3), [(0x3D,3)] %sf{0;1} := %tmpr0_17{15;1})
((0x3D,4), [(0x3D,4)] %zf{0;1} := (EQ %tmpr0_17{0;16} 0x0{0;16}){0;1})
((0x3D,5), [(0x3D,5)] %af{0;1} := %tmpr0_17{4;1})
((0x3D,6), [(0x3D,6)] StaticArrow (0x3D,6) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_17{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x42,0))
((0x42,0), [(0x42,0)] @{asm:=jne    0x6666, next-inst:=(0x48,0)}@ StaticArrow (0x42,0) Skip << (NOT %zf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0x42,0) Skip << %zf{0;1} >> --> (0x48,0))
((0x48,0), [(0x48,0)] @{asm:=mov    $0xfffd,%bx, next-inst:=(0x4C,0)}@ StaticArrow (0x48,0) %ebx{0;16} := 0xFFFD{0;16}  --> (0x4C,0))
((0x4C,0), [(0x4C,0)] @{asm:=imul   %bx,%cx, next-inst:=(0x50,0)}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} %ebx{0;16}){0;32})
((0x4C,1), [(0x4C,1)] %ecx{0;16} := %tmpr0_32{0;16})
((0x4C,2), [(0x4C,2)] StaticArrow (0x4C,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x4C,3)StaticArrow (0x4C,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x4C,5))
((0x4C,3), [(0x4C,3)] %cf{0;1} := 0x1{0;1})
((0x4C,4), [(0x4C,4)] StaticArrow (0x4C,4) %of{0;1} := 0x1{0;1}  --> (0x50,0))
((0x4C,5), [(0x4C,5)] %cf{0;1} := 0x0{0;1})
((0x4C,6), [(0x4C,6)] StaticArrow (0x4C,6) %of{0;1} := 0x0{0;1}  --> (0x50,0))
((0x50,0), [(0x50,0)] @{asm:=call   0x667b, next-inst:=(0x55,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32})
((0x50,1), [(0x50,1)] [%esp{0;32}]{0;32} := 0x55{0;32})
((0x50,2), [(0x50,2)] @{callret:=CALL}@ StaticArrow (0x50,2) Skip  --> (0x667B,0))
((0x55,0), [(0x55,0)] @{asm:=cmp    $0x5c2c,%cx, next-inst:=(0x5A,0)}@ %tmpr0_17{0;17} := (SUB (EXTEND_U %ecx{0;16} 0x11{0;32}){0;17} (EXTEND_U 0x5C2C{0;16} 0x11{0;32}){0;17}){0;17})
((0x55,1), [(0x55,1)] %cf{0;1} := %tmpr0_17{16;1})
((0x55,2), [(0x55,2)] %of{0;1} := (AND (XOR %ecx{15;1} %tmpr0_17{15;1}){0;1} (XOR %ecx{15;1} 0x0{0;1}){0;1}){0;1})
((0x55,3), [(0x55,3)] %sf{0;1} := %tmpr0_17{15;1})
((0x55,4), [(0x55,4)] %zf{0;1} := (EQ %tmpr0_17{0;16} 0x0{0;16}){0;1})
((0x55,5), [(0x55,5)] %af{0;1} := %tmpr0_17{4;1})
((0x55,6), [(0x55,6)] StaticArrow (0x55,6) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_17{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x5A,0))
((0x5A,0), [(0x5A,0)] @{asm:=jne    0x6666, next-inst:=(0x60,0)}@ StaticArrow (0x5A,0) Skip << (NOT %zf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0x5A,0) Skip << %zf{0;1} >> --> (0x60,0))
((0x60,0), [(0x60,0)] @{asm:=mov    $0xf234,%cx, next-inst:=(0x64,0)}@ StaticArrow (0x60,0) %ecx{0;16} := 0xF234{0;16}  --> (0x64,0))
((0x64,0), [(0x64,0)] @{asm:=mov    $0xfffd,%bx, next-inst:=(0x68,0)}@ StaticArrow (0x64,0) %ebx{0;16} := 0xFFFD{0;16}  --> (0x68,0))
((0x68,0), [(0x68,0)] @{asm:=imul   %bx,%cx, next-inst:=(0x6C,0)}@ %tmpr0_32{0;32} := (MUL_S %ecx{0;16} %ebx{0;16}){0;32})
((0x68,1), [(0x68,1)] %ecx{0;16} := %tmpr0_32{0;16})
((0x68,2), [(0x68,2)] StaticArrow (0x68,2) Skip << (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1} >> --> (0x68,3)StaticArrow (0x68,2) Skip << (NOT (NEQ 0x0{0;16} %tmpr0_32{16;16}){0;1}){0;1} >> --> (0x68,5))
((0x68,3), [(0x68,3)] %cf{0;1} := 0x1{0;1})
((0x68,4), [(0x68,4)] StaticArrow (0x68,4) %of{0;1} := 0x1{0;1}  --> (0x6C,0))
((0x68,5), [(0x68,5)] %cf{0;1} := 0x0{0;1})
((0x68,6), [(0x68,6)] StaticArrow (0x68,6) %of{0;1} := 0x0{0;1}  --> (0x6C,0))
((0x6C,0), [(0x6C,0)] @{asm:=call   0x6680, next-inst:=(0x71,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32})
((0x6C,1), [(0x6C,1)] [%esp{0;32}]{0;32} := 0x71{0;32})
((0x6C,2), [(0x6C,2)] @{callret:=CALL}@ StaticArrow (0x6C,2) Skip  --> (0x6680,0))
((0x71,0), [(0x71,0)] @{asm:=cmp    $0x2964,%cx, next-inst:=(0x76,0)}@ %tmpr0_17{0;17} := (SUB (EXTEND_U %ecx{0;16} 0x11{0;32}){0;17} (EXTEND_U 0x2964{0;16} 0x11{0;32}){0;17}){0;17})
((0x71,1), [(0x71,1)] %cf{0;1} := %tmpr0_17{16;1})
((0x71,2), [(0x71,2)] %of{0;1} := (AND (XOR %ecx{15;1} %tmpr0_17{15;1}){0;1} (XOR %ecx{15;1} 0x0{0;1}){0;1}){0;1})
((0x71,3), [(0x71,3)] %sf{0;1} := %tmpr0_17{15;1})
((0x71,4), [(0x71,4)] %zf{0;1} := (EQ %tmpr0_17{0;16} 0x0{0;16}){0;1})
((0x71,5), [(0x71,5)] %af{0;1} := %tmpr0_17{4;1})
((0x71,6), [(0x71,6)] StaticArrow (0x71,6) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_17{0;16} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_17{0;16} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x76,0))
((0x76,0), [(0x76,0)] @{asm:=jne    0x6666, next-inst:=(0x7C,0)}@ StaticArrow (0x76,0) Skip << (NOT %zf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0x76,0) Skip << %zf{0;1} >> --> (0x7C,0))
((0x7C,0), [(0x7C,0)] @{asm:=mov    $0x11111111,%ecx, next-inst:=(0x81,0)}@ StaticArrow (0x7C,0) %ecx{0;32} := 0x11111111{0;32}  --> (0x81,0))
((0x81,0), [(0x81,0)] @{asm:=mov    %ecx,%ebx, next-inst:=(0x83,0)}@ StaticArrow (0x81,0) %ebx{0;32} := %ecx{0;32}  --> (0x83,0))
((0x83,0), [(0x83,0)] @{asm:=imul   %ebx,%ecx, next-inst:=(0x86,0)}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} %ebx{0;32}){0;64})
((0x83,1), [(0x83,1)] %ecx{0;32} := %tmpr0_64{0;32})
((0x83,2), [(0x83,2)] StaticArrow (0x83,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0x83,3)StaticArrow (0x83,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0x83,5))
((0x83,3), [(0x83,3)] %cf{0;1} := 0x1{0;1})
((0x83,4), [(0x83,4)] StaticArrow (0x83,4) %of{0;1} := 0x1{0;1}  --> (0x86,0))
((0x83,5), [(0x83,5)] %cf{0;1} := 0x0{0;1})
((0x83,6), [(0x83,6)] StaticArrow (0x83,6) %of{0;1} := 0x0{0;1}  --> (0x86,0))
((0x86,0), [(0x86,0)] @{asm:=call   0x667b, next-inst:=(0x8B,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32})
((0x86,1), [(0x86,1)] [%esp{0;32}]{0;32} := 0x8B{0;32})
((0x86,2), [(0x86,2)] @{callret:=CALL}@ StaticArrow (0x86,2) Skip  --> (0x667B,0))
((0x8B,0), [(0x8B,0)] @{asm:=cmp    $0x87654321,%ecx, next-inst:=(0x91,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %ecx{0;32} 0x21{0;32}){0;33} (EXTEND_U 0x87654321{0;32} 0x21{0;32}){0;33}){0;33})
((0x8B,1), [(0x8B,1)] %cf{0;1} := %tmpr0_33{32;1})
((0x8B,2), [(0x8B,2)] %of{0;1} := (AND (XOR %ecx{31;1} %tmpr0_33{31;1}){0;1} (XOR %ecx{31;1} 0x1{0;1}){0;1}){0;1})
((0x8B,3), [(0x8B,3)] %sf{0;1} := %tmpr0_33{31;1})
((0x8B,4), [(0x8B,4)] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1})
((0x8B,5), [(0x8B,5)] %af{0;1} := %tmpr0_33{4;1})
((0x8B,6), [(0x8B,6)] StaticArrow (0x8B,6) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x91,0))
((0x91,0), [(0x91,0)] @{asm:=jne    0x6666, next-inst:=(0x97,0)}@ StaticArrow (0x91,0) Skip << (NOT %zf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0x91,0) Skip << %zf{0;1} >> --> (0x97,0))
((0x97,0), [(0x97,0)] @{asm:=mov    $0x12345678,%ecx, next-inst:=(0x9C,0)}@ StaticArrow (0x97,0) %ecx{0;32} := 0x12345678{0;32}  --> (0x9C,0))
((0x9C,0), [(0x9C,0)] @{asm:=mov    $0x3,%ebx, next-inst:=(0xA1,0)}@ StaticArrow (0x9C,0) %ebx{0;32} := 0x3{0;32}  --> (0xA1,0))
((0xA1,0), [(0xA1,0)] @{asm:=imul   %ebx,%ecx, next-inst:=(0xA4,0)}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} %ebx{0;32}){0;64})
((0xA1,1), [(0xA1,1)] %ecx{0;32} := %tmpr0_64{0;32})
((0xA1,2), [(0xA1,2)] StaticArrow (0xA1,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0xA1,3)StaticArrow (0xA1,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0xA1,5))
((0xA1,3), [(0xA1,3)] %cf{0;1} := 0x1{0;1})
((0xA1,4), [(0xA1,4)] StaticArrow (0xA1,4) %of{0;1} := 0x1{0;1}  --> (0xA4,0))
((0xA1,5), [(0xA1,5)] %cf{0;1} := 0x0{0;1})
((0xA1,6), [(0xA1,6)] StaticArrow (0xA1,6) %of{0;1} := 0x0{0;1}  --> (0xA4,0))
((0xA4,0), [(0xA4,0)] @{asm:=call   0x6680, next-inst:=(0xA9,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32})
((0xA4,1), [(0xA4,1)] [%esp{0;32}]{0;32} := 0xA9{0;32})
((0xA4,2), [(0xA4,2)] @{callret:=CALL}@ StaticArrow (0xA4,2) Skip  --> (0x6680,0))
((0xA9,0), [(0xA9,0)] @{asm:=cmp    $0x369d0368,%ecx, next-inst:=(0xAF,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %ecx{0;32} 0x21{0;32}){0;33} (EXTEND_U 0x369D0368{0;32} 0x21{0;32}){0;33}){0;33})
((0xA9,1), [(0xA9,1)] %cf{0;1} := %tmpr0_33{32;1})
((0xA9,2), [(0xA9,2)] %of{0;1} := (AND (XOR %ecx{31;1} %tmpr0_33{31;1}){0;1} (XOR %ecx{31;1} 0x0{0;1}){0;1}){0;1})
((0xA9,3), [(0xA9,3)] %sf{0;1} := %tmpr0_33{31;1})
((0xA9,4), [(0xA9,4)] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1})
((0xA9,5), [(0xA9,5)] %af{0;1} := %tmpr0_33{4;1})
((0xA9,6), [(0xA9,6)] StaticArrow (0xA9,6) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xAF,0))
((0xAF,0), [(0xAF,0)] @{asm:=jne    0x6666, next-inst:=(0xB5,0)}@ StaticArrow (0xAF,0) Skip << (NOT %zf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0xAF,0) Skip << %zf{0;1} >> --> (0xB5,0))
((0xB5,0), [(0xB5,0)] @{asm:=mov    $0xfffffffd,%ebx, next-inst:=(0xBA,0)}@ StaticArrow (0xB5,0) %ebx{0;32} := 0xFFFFFFFD{0;32}  --> (0xBA,0))
((0xBA,0), [(0xBA,0)] @{asm:=imul   %ebx,%ecx, next-inst:=(0xBD,0)}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} %ebx{0;32}){0;64})
((0xBA,1), [(0xBA,1)] %ecx{0;32} := %tmpr0_64{0;32})
((0xBA,2), [(0xBA,2)] StaticArrow (0xBA,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0xBA,3)StaticArrow (0xBA,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0xBA,5))
((0xBA,3), [(0xBA,3)] %cf{0;1} := 0x1{0;1})
((0xBA,4), [(0xBA,4)] StaticArrow (0xBA,4) %of{0;1} := 0x1{0;1}  --> (0xBD,0))
((0xBA,5), [(0xBA,5)] %cf{0;1} := 0x0{0;1})
((0xBA,6), [(0xBA,6)] StaticArrow (0xBA,6) %of{0;1} := 0x0{0;1}  --> (0xBD,0))
((0xBD,0), [(0xBD,0)] @{asm:=call   0x667b, next-inst:=(0xC2,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32})
((0xBD,1), [(0xBD,1)] [%esp{0;32}]{0;32} := 0xC2{0;32})
((0xBD,2), [(0xBD,2)] @{callret:=CALL}@ StaticArrow (0xBD,2) Skip  --> (0x667B,0))
((0xC2,0), [(0xC2,0)] @{asm:=cmp    $0x5c28f5c8,%ecx, next-inst:=(0xC8,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %ecx{0;32} 0x21{0;32}){0;33} (EXTEND_U 0x5C28F5C8{0;32} 0x21{0;32}){0;33}){0;33})
((0xC2,1), [(0xC2,1)] %cf{0;1} := %tmpr0_33{32;1})
((0xC2,2), [(0xC2,2)] %of{0;1} := (AND (XOR %ecx{31;1} %tmpr0_33{31;1}){0;1} (XOR %ecx{31;1} 0x0{0;1}){0;1}){0;1})
((0xC2,3), [(0xC2,3)] %sf{0;1} := %tmpr0_33{31;1})
((0xC2,4), [(0xC2,4)] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1})
((0xC2,5), [(0xC2,5)] %af{0;1} := %tmpr0_33{4;1})
((0xC2,6), [(0xC2,6)] StaticArrow (0xC2,6) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xC8,0))
((0xC8,0), [(0xC8,0)] @{asm:=jne    0x6666, next-inst:=(0xCE,0)}@ StaticArrow (0xC8,0) Skip << (NOT %zf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0xC8,0) Skip << %zf{0;1} >> --> (0xCE,0))
((0xCE,0), [(0xCE,0)] @{asm:=mov    $0xf2345678,%ecx, next-inst:=(0xD3,0)}@ StaticArrow (0xCE,0) %ecx{0;32} := 0xF2345678{0;32}  --> (0xD3,0))
((0xD3,0), [(0xD3,0)] @{asm:=mov    $0xfffffffd,%ebx, next-inst:=(0xD8,0)}@ StaticArrow (0xD3,0) %ebx{0;32} := 0xFFFFFFFD{0;32}  --> (0xD8,0))
((0xD8,0), [(0xD8,0)] @{asm:=imul   %ebx,%ecx, next-inst:=(0xDB,0)}@ %tmpr0_64{0;64} := (MUL_S %ecx{0;32} %ebx{0;32}){0;64})
((0xD8,1), [(0xD8,1)] %ecx{0;32} := %tmpr0_64{0;32})
((0xD8,2), [(0xD8,2)] StaticArrow (0xD8,2) Skip << (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1} >> --> (0xD8,3)StaticArrow (0xD8,2) Skip << (NOT (NEQ 0x0{0;32} %tmpr0_64{32;32}){0;1}){0;1} >> --> (0xD8,5))
((0xD8,3), [(0xD8,3)] %cf{0;1} := 0x1{0;1})
((0xD8,4), [(0xD8,4)] StaticArrow (0xD8,4) %of{0;1} := 0x1{0;1}  --> (0xDB,0))
((0xD8,5), [(0xD8,5)] %cf{0;1} := 0x0{0;1})
((0xD8,6), [(0xD8,6)] StaticArrow (0xD8,6) %of{0;1} := 0x0{0;1}  --> (0xDB,0))
((0xDB,0), [(0xDB,0)] @{asm:=call   0x6680, next-inst:=(0xE0,0)}@ %esp{0;32} := (SUB %esp{0;32} 0x4{0;32}){0;32})
((0xDB,1), [(0xDB,1)] [%esp{0;32}]{0;32} := 0xE0{0;32})
((0xDB,2), [(0xDB,2)] @{callret:=CALL}@ StaticArrow (0xDB,2) Skip  --> (0x6680,0))
((0xE0,0), [(0xE0,0)] @{asm:=cmp    $0x2962fc98,%ecx, next-inst:=(0xE6,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %ecx{0;32} 0x21{0;32}){0;33} (EXTEND_U 0x2962FC98{0;32} 0x21{0;32}){0;33}){0;33})
((0xE0,1), [(0xE0,1)] %cf{0;1} := %tmpr0_33{32;1})
((0xE0,2), [(0xE0,2)] %of{0;1} := (AND (XOR %ecx{31;1} %tmpr0_33{31;1}){0;1} (XOR %ecx{31;1} 0x0{0;1}){0;1}){0;1})
((0xE0,3), [(0xE0,3)] %sf{0;1} := %tmpr0_33{31;1})
((0xE0,4), [(0xE0,4)] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1})
((0xE0,5), [(0xE0,5)] %af{0;1} := %tmpr0_33{4;1})
((0xE0,6), [(0xE0,6)] StaticArrow (0xE0,6) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0xE6,0))
((0xE6,0), [(0xE6,0)] @{asm:=jne    0x6666, next-inst:=(0xEC,0)}@ StaticArrow (0xE6,0) Skip << (NOT %zf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0xE6,0) Skip << %zf{0;1} >> --> (0xEC,0))
((0xEC,0), [(0xEC,0)] @{asm:=jmp    0x1000, next-inst:=(0xF1,0)}@ StaticArrow (0xEC,0) Skip  --> (0x1000,0))
((0x1000,0), [(0x1000,0)] @{asm:=cmp    $0xffff,%esp, next-inst:=(0x1006,0)}@ %tmpr0_33{0;33} := (SUB (EXTEND_U %esp{0;32} 0x21{0;32}){0;33} (EXTEND_U 0xFFFF{0;32} 0x21{0;32}){0;33}){0;33})
((0x1000,1), [(0x1000,1)] %cf{0;1} := %tmpr0_33{32;1})
((0x1000,2), [(0x1000,2)] %of{0;1} := (AND (XOR %esp{31;1} %tmpr0_33{31;1}){0;1} (XOR %esp{31;1} 0x0{0;1}){0;1}){0;1})
((0x1000,3), [(0x1000,3)] %sf{0;1} := %tmpr0_33{31;1})
((0x1000,4), [(0x1000,4)] %zf{0;1} := (EQ %tmpr0_33{0;32} 0x0{0;32}){0;1})
((0x1000,5), [(0x1000,5)] %af{0;1} := %tmpr0_33{4;1})
((0x1000,6), [(0x1000,6)] StaticArrow (0x1000,6) %pf{0;1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR (XOR 0x1{0;1} (EXTRACT %tmpr0_33{0;32} 0x0{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x1{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x2{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x3{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x4{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x5{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x6{0;32} 0x1{0;32}){0;1}){0;1} (EXTRACT %tmpr0_33{0;32} 0x7{0;32} 0x1{0;32}){0;1}){0;1}  --> (0x1006,0))
((0x1006,0), [(0x1006,0)] @{asm:=jne    0x6666, next-inst:=(0x100C,0)}@ StaticArrow (0x1006,0) Skip << (NOT %zf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0x1006,0) Skip << %zf{0;1} >> --> (0x100C,0))
((0x100C,0), [(0x100C,0)] @{asm:=jmp    0x1111, next-inst:=(0x1011,0)}@ StaticArrow (0x100C,0) Skip  --> (0x1111,0))
((0x1111,0), [(0x1111,0)] @{asm:=jmp    0x1111, next-inst:=(0x1113,0)}@ StaticArrow (0x1111,0) Skip  --> (0x1111,0))
((0x6666,0), [(0x6666,0)] )
((0x667B,0), [(0x667B,0)] @{asm:=jae    0x6666, next-inst:=(0x667D,0)}@ StaticArrow (0x667B,0) Skip << (NOT %cf{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0x667B,0) Skip << %cf{0;1} >> --> (0x667D,0))
((0x667D,0), [(0x667D,0)] @{asm:=jno    0x6666, next-inst:=(0x667F,0)}@ StaticArrow (0x667D,0) Skip << (NOT %of{0;1}){0;1} >> --> (0x6666,0)StaticArrow (0x667D,0) Skip << %of{0;1} >> --> (0x667F,0))
((0x667F,0), [(0x667F,0)] @{asm:=ret    , next-inst:=(0x6680,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32})
((0x667F,1), [(0x667F,1)] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32})
((0x667F,2), [(0x667F,2)] @{callret:=RET}@ DynamicArrow (0x667F,2) Jmp %tmpr0_32{0;32}  --> << %tmpr0_32{0;32} >>@{solved-jmp:={ (0x21,0) (0x55,0) (0x8B,0) (0xC2,0)}}@ )
((0x6680,0), [(0x6680,0)] @{asm:=jb     0x6666, next-inst:=(0x6682,0)}@ StaticArrow (0x6680,0) Skip << %cf{0;1} >> --> (0x6666,0)StaticArrow (0x6680,0) Skip << (NOT %cf{0;1}){0;1} >> --> (0x6682,0))
((0x6682,0), [(0x6682,0)] @{asm:=jo     0x6666, next-inst:=(0x6684,0)}@ StaticArrow (0x6682,0) Skip << %of{0;1} >> --> (0x6666,0)StaticArrow (0x6682,0) Skip << (NOT %of{0;1}){0;1} >> --> (0x6684,0))
((0x6684,0), [(0x6684,0)] @{asm:=ret    , next-inst:=(0x6685,0)}@ %tmpr0_32{0;32} := [%esp{0;32}]{0;32})
((0x6684,1), [(0x6684,1)] %esp{0;32} := (ADD %esp{0;32} 0x4{0;32}){0;32})
((0x6684,2), [(0x6684,2)] @{callret:=RET}@ DynamicArrow (0x6684,2) Jmp %tmpr0_32{0;32}  --> << %tmpr0_32{0;32} >>@{solved-jmp:={ (0x3D,0) (0x71,0) (0xA9,0) (0xE0,0)}}@ )

