*** Test of slicing algorithm ***

input file: test-x86_32-01.o
max number of steps: 100
targeted address: 43
lvalue: %eax

LOG[2]: warning: AF flags is not implemented

LOG[2]: warning: AF flags is not implemented

LOG[2]: warning: AF flags is not implemented

LOG[2]: warning: AF flags is not implemented

LOG[2]: warning: AF flags is not implemented

================================================================================
Running backward arrow < StaticArrow (0x28,2) Skip << (EQ %tmpr0 0x0) >> --> (0x2B,0) >
New context at pp (0x28,2) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,2) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,5) Skip << (NEQ %tmpr0 0x1) >> --> (0x2B,0) >
New context at pp (0x28,5) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,5) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,9) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %esp{0:1} %esp{1:1}) %esp{2:1}) %esp{3:1}) %esp{4:1}) %esp{5:1}) %esp{6:1}) %esp{7:1})  --> (0x2B,0) >
New context at pp (0x28,9) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,9) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,1) %tmpr1 := %esp  --> (0x28,2) >
New context at pp (0x28,1) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,1) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,4) %eflags{0:1} := (RSH %esp (SUB 0x20 %tmpr0)){0:1}  --> (0x28,5) >
New context at pp (0x28,4) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,4) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,8) %eflags{6:1} := (EQ %esp 0x0)  --> (0x28,9) >
New context at pp (0x28,8) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,8) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,0) %tmpr0 := (AND 0x2 0x1F)  --> (0x28,1) >
New context at pp (0x28,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,3) %esp := (LSH %esp %tmpr0)  --> (0x28,4) >
New context at pp (0x28,3) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,3) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,7) %eflags{7:1} := (LT %esp 0x0)  --> (0x28,8) >
New context at pp (0x28,7) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,7) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x26,0) %esp := %esi  --> (0x28,0) >
New context at pp (0x26,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x26,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,2) Skip << (NEQ %tmpr0 0x0) >> --> (0x28,3) >
New context at pp (0x28,2) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,2) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,6) %eflags{11:1} := (XOR %esp %eflags{0:1})  --> (0x28,7) >
New context at pp (0x28,6) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,6) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x21,0) %ebp := 0x2  --> (0x26,0) >
New context at pp (0x21,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x21,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x28,5) Skip << (EQ %tmpr0 0x1) >> --> (0x28,6) >
New context at pp (0x28,5) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x28,5) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x20,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %ebp{0:1} %ebp{1:1}) %ebp{2:1}) %ebp{3:1}) %ebp{4:1}) %ebp{5:1}) %ebp{6:1}) %ebp{7:1})  --> (0x21,0) >
New context at pp (0x20,4) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x20,4) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x20,3) %eflags{6:1} := (EQ %ebp 0x0)  --> (0x20,4) >
New context at pp (0x20,3) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x20,3) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x20,2) %eflags{7:1} := (LT %ebp 0x0)  --> (0x20,3) >
New context at pp (0x20,2) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x20,2) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x20,1) %eflags{11:1} := (GEQ (ADD %ebp 0x1) 0x7FFFFFFF)  --> (0x20,2) >
New context at pp (0x20,1) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x20,1) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x20,0) %ebp := (ADD %ebp 0x1)  --> (0x20,1) >
New context at pp (0x20,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x20,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1F,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %ebx{0:1} %ebx{1:1}) %ebx{2:1}) %ebx{3:1}) %ebx{4:1}) %ebx{5:1}) %ebx{6:1}) %ebx{7:1})  --> (0x20,0) >
New context at pp (0x1F,4) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1F,4) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1F,3) %eflags{6:1} := (EQ %ebx 0x0)  --> (0x1F,4) >
New context at pp (0x1F,3) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1F,3) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1F,2) %eflags{7:1} := (LT %ebx 0x0)  --> (0x1F,3) >
New context at pp (0x1F,2) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1F,2) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1F,1) %eflags{11:1} := (GEQ (ADD %ebx 0x1) 0x7FFFFFFF)  --> (0x1F,2) >
New context at pp (0x1F,1) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1F,1) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1F,0) %ebx := (ADD %ebx 0x1)  --> (0x1F,1) >
New context at pp (0x1F,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1F,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1D,0) %ebx := %eax  --> (0x1F,0) >
New context at pp (0x1D,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1D,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1B,5) %eflags{0:1} := (ADD [(ADD %edi 0x0)] 0x1){32:1}  --> (0x1D,0) >
New context at pp (0x1B,5) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1B,5) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1B,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR [(ADD %edi 0x0)]{0:1} [(ADD %edi 0x0)]{1:1}) [(ADD %edi 0x0)]{2:1}) [(ADD %edi 0x0)]{3:1}) [(ADD %edi 0x0)]{4:1}) [(ADD %edi 0x0)]{5:1}) [(ADD %edi 0x0)]{6:1}) [(ADD %edi 0x0)]{7:1})  --> (0x1B,5) >
New context at pp (0x1B,4) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1B,4) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1B,3) %eflags{6:1} := (EQ [(ADD %edi 0x0)] 0x0)  --> (0x1B,4) >
New context at pp (0x1B,3) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1B,3) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1B,2) %eflags{7:1} := (LT [(ADD %edi 0x0)] 0x0)  --> (0x1B,3) >
New context at pp (0x1B,2) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1B,2) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1B,1) %eflags{11:1} := (GEQ (ADD [(ADD %edi 0x0)] 0x1) 0x7FFFFFFF)  --> (0x1B,2) >
New context at pp (0x1B,1) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1B,1) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x1B,0) [(ADD %edi 0x0)] := (ADD [(ADD %edi 0x0)] 0x1)  --> (0x1B,1) >
New context at pp (0x1B,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x1B,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x19,1) %esp := (ADD %esp 0x4)  --> (0x1B,0) >
New context at pp (0x19,1) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x19,1) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x19,0) [(ADD %edi 0x0)] := [%esp]  --> (0x19,1) >
New context at pp (0x19,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x19,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x17,1) [%esp] := [(ADD %ecx 0x0)]  --> (0x19,0) >
New context at pp (0x17,1) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x17,1) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x17,0) %esp := (SUB %esp 0x4)  --> (0x17,1) >
New context at pp (0x17,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x17,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x15,5) %eflags{0:1} := (ADD %esi [(ADD %eax 0x0)]){32:1}  --> (0x17,0) >
New context at pp (0x15,5) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x15,5) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x15,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %esi{0:1} %esi{1:1}) %esi{2:1}) %esi{3:1}) %esi{4:1}) %esi{5:1}) %esi{6:1}) %esi{7:1})  --> (0x15,5) >
New context at pp (0x15,4) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x15,4) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x15,3) %eflags{6:1} := (EQ %esi 0x0)  --> (0x15,4) >
New context at pp (0x15,3) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x15,3) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x15,2) %eflags{7:1} := (LT %esi 0x0)  --> (0x15,3) >
New context at pp (0x15,2) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x15,2) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x15,1) %eflags{11:1} := (GEQ (ADD %esi [(ADD %eax 0x0)]) 0x7FFFFFFF)  --> (0x15,2) >
New context at pp (0x15,1) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x15,1) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x15,0) %esi := (ADD %esi [(ADD %eax 0x0)])  --> (0x15,1) >
New context at pp (0x15,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x15,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x10,0) %ecx := 0x4  --> (0x15,0) >
New context at pp (0x10,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x10,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0xB,0) %edx := 0xA  --> (0x10,0) >
New context at pp (0xB,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0xB,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x5,0) [(ADD %ebx 0x0)] := 0x0  --> (0xB,0) >
New context at pp (0x5,0) :
	(EQ {elt} %eax)
Maximum dependencies at pp (0x5,0) : { %eax  }
================================================================================
Running backward arrow < StaticArrow (0x0,0) %eax := 0x4  --> (0x5,0) >
New context at pp (0x0,0) :
	FALSE
Maximum dependencies at pp (0x0,0) : {  }
DataDependency: Fixpoint Reached!
================================================================================
Dependencies:
(0x0,0) <== {  }
StaticArrow (0x0,0) %eax := 0x4  --> (0x5,0)
(0x5,0) <== { %eax  }
StaticArrow (0x5,0) [(ADD %ebx 0x0)] := 0x0  --> (0xB,0)
(0xB,0) <== { %eax  }
StaticArrow (0xB,0) %edx := 0xA  --> (0x10,0)
(0x10,0) <== { %eax  }
StaticArrow (0x10,0) %ecx := 0x4  --> (0x15,0)
(0x15,0) <== { %eax  }
StaticArrow (0x15,0) %esi := (ADD %esi [(ADD %eax 0x0)])  --> (0x15,1)
(0x15,1) <== { %eax  }
StaticArrow (0x15,1) %eflags{11:1} := (GEQ (ADD %esi [(ADD %eax 0x0)]) 0x7FFFFFFF)  --> (0x15,2)
(0x15,2) <== { %eax  }
StaticArrow (0x15,2) %eflags{7:1} := (LT %esi 0x0)  --> (0x15,3)
(0x15,3) <== { %eax  }
StaticArrow (0x15,3) %eflags{6:1} := (EQ %esi 0x0)  --> (0x15,4)
(0x15,4) <== { %eax  }
StaticArrow (0x15,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %esi{0:1} %esi{1:1}) %esi{2:1}) %esi{3:1}) %esi{4:1}) %esi{5:1}) %esi{6:1}) %esi{7:1})  --> (0x15,5)
(0x15,5) <== { %eax  }
StaticArrow (0x15,5) %eflags{0:1} := (ADD %esi [(ADD %eax 0x0)]){32:1}  --> (0x17,0)
(0x17,0) <== { %eax  }
StaticArrow (0x17,0) %esp := (SUB %esp 0x4)  --> (0x17,1)
(0x17,1) <== { %eax  }
StaticArrow (0x17,1) [%esp] := [(ADD %ecx 0x0)]  --> (0x19,0)
(0x19,0) <== { %eax  }
StaticArrow (0x19,0) [(ADD %edi 0x0)] := [%esp]  --> (0x19,1)
(0x19,1) <== { %eax  }
StaticArrow (0x19,1) %esp := (ADD %esp 0x4)  --> (0x1B,0)
(0x1B,0) <== { %eax  }
StaticArrow (0x1B,0) [(ADD %edi 0x0)] := (ADD [(ADD %edi 0x0)] 0x1)  --> (0x1B,1)
(0x1B,1) <== { %eax  }
StaticArrow (0x1B,1) %eflags{11:1} := (GEQ (ADD [(ADD %edi 0x0)] 0x1) 0x7FFFFFFF)  --> (0x1B,2)
(0x1B,2) <== { %eax  }
StaticArrow (0x1B,2) %eflags{7:1} := (LT [(ADD %edi 0x0)] 0x0)  --> (0x1B,3)
(0x1B,3) <== { %eax  }
StaticArrow (0x1B,3) %eflags{6:1} := (EQ [(ADD %edi 0x0)] 0x0)  --> (0x1B,4)
(0x1B,4) <== { %eax  }
StaticArrow (0x1B,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR [(ADD %edi 0x0)]{0:1} [(ADD %edi 0x0)]{1:1}) [(ADD %edi 0x0)]{2:1}) [(ADD %edi 0x0)]{3:1}) [(ADD %edi 0x0)]{4:1}) [(ADD %edi 0x0)]{5:1}) [(ADD %edi 0x0)]{6:1}) [(ADD %edi 0x0)]{7:1})  --> (0x1B,5)
(0x1B,5) <== { %eax  }
StaticArrow (0x1B,5) %eflags{0:1} := (ADD [(ADD %edi 0x0)] 0x1){32:1}  --> (0x1D,0)
(0x1D,0) <== { %eax  }
StaticArrow (0x1D,0) %ebx := %eax  --> (0x1F,0)
(0x1F,0) <== { %eax  }
StaticArrow (0x1F,0) %ebx := (ADD %ebx 0x1)  --> (0x1F,1)
(0x1F,1) <== { %eax  }
StaticArrow (0x1F,1) %eflags{11:1} := (GEQ (ADD %ebx 0x1) 0x7FFFFFFF)  --> (0x1F,2)
(0x1F,2) <== { %eax  }
StaticArrow (0x1F,2) %eflags{7:1} := (LT %ebx 0x0)  --> (0x1F,3)
(0x1F,3) <== { %eax  }
StaticArrow (0x1F,3) %eflags{6:1} := (EQ %ebx 0x0)  --> (0x1F,4)
(0x1F,4) <== { %eax  }
StaticArrow (0x1F,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %ebx{0:1} %ebx{1:1}) %ebx{2:1}) %ebx{3:1}) %ebx{4:1}) %ebx{5:1}) %ebx{6:1}) %ebx{7:1})  --> (0x20,0)
(0x20,0) <== { %eax  }
StaticArrow (0x20,0) %ebp := (ADD %ebp 0x1)  --> (0x20,1)
(0x20,1) <== { %eax  }
StaticArrow (0x20,1) %eflags{11:1} := (GEQ (ADD %ebp 0x1) 0x7FFFFFFF)  --> (0x20,2)
(0x20,2) <== { %eax  }
StaticArrow (0x20,2) %eflags{7:1} := (LT %ebp 0x0)  --> (0x20,3)
(0x20,3) <== { %eax  }
StaticArrow (0x20,3) %eflags{6:1} := (EQ %ebp 0x0)  --> (0x20,4)
(0x20,4) <== { %eax  }
StaticArrow (0x20,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %ebp{0:1} %ebp{1:1}) %ebp{2:1}) %ebp{3:1}) %ebp{4:1}) %ebp{5:1}) %ebp{6:1}) %ebp{7:1})  --> (0x21,0)
(0x21,0) <== { %eax  }
StaticArrow (0x21,0) %ebp := 0x2  --> (0x26,0)
(0x26,0) <== { %eax  }
StaticArrow (0x26,0) %esp := %esi  --> (0x28,0)
(0x28,0) <== { %eax  }
StaticArrow (0x28,0) %tmpr0 := (AND 0x2 0x1F)  --> (0x28,1)
(0x28,1) <== { %eax  }
StaticArrow (0x28,1) %tmpr1 := %esp  --> (0x28,2)
(0x28,2) <== { %eax  }
(0x28,3) <== { %eax  }
StaticArrow (0x28,3) %esp := (LSH %esp %tmpr0)  --> (0x28,4)
(0x28,4) <== { %eax  }
StaticArrow (0x28,4) %eflags{0:1} := (RSH %esp (SUB 0x20 %tmpr0)){0:1}  --> (0x28,5)
(0x28,5) <== { %eax  }
(0x28,6) <== { %eax  }
StaticArrow (0x28,6) %eflags{11:1} := (XOR %esp %eflags{0:1})  --> (0x28,7)
(0x28,7) <== { %eax  }
StaticArrow (0x28,7) %eflags{7:1} := (LT %esp 0x0)  --> (0x28,8)
(0x28,8) <== { %eax  }
StaticArrow (0x28,8) %eflags{6:1} := (EQ %esp 0x0)  --> (0x28,9)
(0x28,9) <== { %eax  }
StaticArrow (0x28,9) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %esp{0:1} %esp{1:1}) %esp{2:1}) %esp{3:1}) %esp{4:1}) %esp{5:1}) %esp{6:1}) %esp{7:1})  --> (0x2B,0)
(0x2B,0) <== { %eax  }
StaticArrow (0x2B,0) %esp := (ADD %esp %eax)  --> (0x2B,1)
(0x2B,1) <== {  }
StaticArrow (0x2B,1) %eflags{11:1} := (GEQ (ADD %esp %eax) 0x7FFFFFFF)  --> (0x2B,2)
(0x2B,2) <== {  }
StaticArrow (0x2B,2) %eflags{7:1} := (LT %esp 0x0)  --> (0x2B,3)
(0x2B,3) <== {  }
StaticArrow (0x2B,3) %eflags{6:1} := (EQ %esp 0x0)  --> (0x2B,4)
(0x2B,4) <== {  }
StaticArrow (0x2B,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %esp{0:1} %esp{1:1}) %esp{2:1}) %esp{3:1}) %esp{4:1}) %esp{5:1}) %esp{6:1}) %esp{7:1})  --> (0x2B,5)
(0x2B,5) <== {  }
StaticArrow (0x2B,5) %eflags{0:1} := (ADD %esp %eax){32:1}  --> (0x2D,0)
(0x2D,0) <== {  }
StaticArrow (0x2D,0) %esp := (SUB %esp 0x4)  --> (0x2D,1)
(0x2D,1) <== {  }
StaticArrow (0x2D,1) [%esp] := [(ADD %ebp 0x2)]  --> (0x30,0)
(0x30,0) <== {  }
StaticArrow (0x30,0) [(ADD %ebp 0x0)] := [%esp]  --> (0x30,1)
(0x30,1) <== {  }
StaticArrow (0x30,1) %esp := (ADD %esp 0x4)  --> (0x33,0)
(0x33,0) <== {  }
================================================================================
StaticArrow (0x0,0) %eax := 0x4  --> (0x5,0)

* Useless statements:
StaticArrow (0xB,0) %edx := 0xA  --> (0x10,0)
StaticArrow (0x15,1) %eflags{11:1} := (GEQ (ADD %esi [(ADD %eax 0x0)]) 0x7FFFFFFF)  --> (0x15,2)
StaticArrow (0x15,2) %eflags{7:1} := (LT %esi 0x0)  --> (0x15,3)
StaticArrow (0x15,3) %eflags{6:1} := (EQ %esi 0x0)  --> (0x15,4)
StaticArrow (0x15,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %esi{0:1} %esi{1:1}) %esi{2:1}) %esi{3:1}) %esi{4:1}) %esi{5:1}) %esi{6:1}) %esi{7:1})  --> (0x15,5)
StaticArrow (0x15,5) %eflags{0:1} := (ADD %esi [(ADD %eax 0x0)]){32:1}  --> (0x17,0)
StaticArrow (0x19,1) %esp := (ADD %esp 0x4)  --> (0x1B,0)
StaticArrow (0x1B,1) %eflags{11:1} := (GEQ (ADD [(ADD %edi 0x0)] 0x1) 0x7FFFFFFF)  --> (0x1B,2)
StaticArrow (0x1B,2) %eflags{7:1} := (LT [(ADD %edi 0x0)] 0x0)  --> (0x1B,3)
StaticArrow (0x1B,3) %eflags{6:1} := (EQ [(ADD %edi 0x0)] 0x0)  --> (0x1B,4)
StaticArrow (0x1B,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR [(ADD %edi 0x0)]{0:1} [(ADD %edi 0x0)]{1:1}) [(ADD %edi 0x0)]{2:1}) [(ADD %edi 0x0)]{3:1}) [(ADD %edi 0x0)]{4:1}) [(ADD %edi 0x0)]{5:1}) [(ADD %edi 0x0)]{6:1}) [(ADD %edi 0x0)]{7:1})  --> (0x1B,5)
StaticArrow (0x1B,5) %eflags{0:1} := (ADD [(ADD %edi 0x0)] 0x1){32:1}  --> (0x1D,0)
StaticArrow (0x1F,1) %eflags{11:1} := (GEQ (ADD %ebx 0x1) 0x7FFFFFFF)  --> (0x1F,2)
StaticArrow (0x1F,2) %eflags{7:1} := (LT %ebx 0x0)  --> (0x1F,3)
StaticArrow (0x1F,3) %eflags{6:1} := (EQ %ebx 0x0)  --> (0x1F,4)
StaticArrow (0x1F,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %ebx{0:1} %ebx{1:1}) %ebx{2:1}) %ebx{3:1}) %ebx{4:1}) %ebx{5:1}) %ebx{6:1}) %ebx{7:1})  --> (0x20,0)
StaticArrow (0x20,1) %eflags{11:1} := (GEQ (ADD %ebp 0x1) 0x7FFFFFFF)  --> (0x20,2)
StaticArrow (0x20,2) %eflags{7:1} := (LT %ebp 0x0)  --> (0x20,3)
StaticArrow (0x20,3) %eflags{6:1} := (EQ %ebp 0x0)  --> (0x20,4)
StaticArrow (0x20,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %ebp{0:1} %ebp{1:1}) %ebp{2:1}) %ebp{3:1}) %ebp{4:1}) %ebp{5:1}) %ebp{6:1}) %ebp{7:1})  --> (0x21,0)
StaticArrow (0x28,1) %tmpr1 := %esp  --> (0x28,2)
StaticArrow (0x28,6) %eflags{11:1} := (XOR %esp %eflags{0:1})  --> (0x28,7)
StaticArrow (0x28,7) %eflags{7:1} := (LT %esp 0x0)  --> (0x28,8)
StaticArrow (0x28,8) %eflags{6:1} := (EQ %esp 0x0)  --> (0x28,9)
StaticArrow (0x28,9) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %esp{0:1} %esp{1:1}) %esp{2:1}) %esp{3:1}) %esp{4:1}) %esp{5:1}) %esp{6:1}) %esp{7:1})  --> (0x2B,0)
StaticArrow (0x2B,1) %eflags{11:1} := (GEQ (ADD %esp %eax) 0x7FFFFFFF)  --> (0x2B,2)
StaticArrow (0x2B,2) %eflags{7:1} := (LT %esp 0x0)  --> (0x2B,3)
StaticArrow (0x2B,3) %eflags{6:1} := (EQ %esp 0x0)  --> (0x2B,4)
StaticArrow (0x2B,4) %eflags{2:1} := (XOR (XOR (XOR (XOR (XOR (XOR (XOR %esp{0:1} %esp{1:1}) %esp{2:1}) %esp{3:1}) %esp{4:1}) %esp{5:1}) %esp{6:1}) %esp{7:1})  --> (0x2B,5)
StaticArrow (0x2B,5) %eflags{0:1} := (ADD %esp %eax){32:1}  --> (0x2D,0)
StaticArrow (0x30,1) %esp := (ADD %esp 0x4)  --> (0x33,0)


**** some formulas have not been deleted:
**** refcount = 40 formula = (EQ {elt} %eax)
**** refcount = 44 formula = %eax
**** refcount = 1 formula = FALSE
**** refcount = 1 formula = {elt}
==9561== 12 bytes in 1 blocks are definitely lost in loss record 2 of 12
==9561==    at 0x4007885: operator new(unsigned int) (vg_replace_malloc.c:255)
==9561==    by 0x419DAA7: BooleanConstantFormula::create(bool) (Formula.cc:181)
==9561==    by 0x4107ECD: DataDependencyLocalContext::run_backward(StaticArrow*) (Slicing.cc:367)
==9561==    by 0x4109238: DataDependency::InverseStep() (Slicing.cc:593)
==9561==    by 0x4109A66: DataDependency::ComputeFixpoint(int) (Slicing.cc:629)
==9561==    by 0x4109EBB: DataDependency::slice_it(Microcode*, std::list<LocatedLValue, std::allocator<LocatedLValue> >) (Slicing.cc:674)
==9561==    by 0x4109D8F: DataDependency::slice_it(Microcode*, MicrocodeAddress, Expr*) (Slicing.cc:664)
==9561==    by 0x8049889: test_slicing(char const*, int, int, std::string const&) (slicer.cc:49)
==9561==    by 0x8049C4E: main (slicer.cc:107)
==9561== 
==9561== 84 (28 direct, 56 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 12
==9561==    at 0x4007885: operator new(unsigned int) (vg_replace_malloc.c:255)
==9561==    by 0x41912DF: BinaryApp::create(BinaryOp, Expr*, Expr*, int, int) (Expressions.cc:253)
==9561==    by 0x4191266: BinaryApp::create(BinaryOp, Expr*, Expr*) (Expressions.cc:240)
==9561==    by 0x419BB95: IsIn(Expr const*) (ConditionalSet.cc:52)
==9561==    by 0x419B981: ConditionalSet::cs_add(Formula**, Expr const*) (ConditionalSet.cc:199)
==9561==    by 0x4108A64: DataDependency::DataDependency(Microcode*, std::list<LocatedLValue, std::allocator<LocatedLValue> >) (Slicing.cc:525)
==9561==    by 0x4109E75: DataDependency::slice_it(Microcode*, std::list<LocatedLValue, std::allocator<LocatedLValue> >) (Slicing.cc:671)
==9561==    by 0x4109D8F: DataDependency::slice_it(Microcode*, MicrocodeAddress, Expr*) (Slicing.cc:664)
==9561==    by 0x8049889: test_slicing(char const*, int, int, std::string const&) (slicer.cc:49)
==9561==    by 0x8049C4E: main (slicer.cc:107)
==9561== 
==9561== 2,232 (52 direct, 2,180 indirect) bytes in 1 blocks are definitely lost in loss record 12 of 12
==9561==    at 0x4007885: operator new(unsigned int) (vg_replace_malloc.c:255)
==9561==    by 0x41D9412: BinutilsBinaryLoader::get_memory() const (BinutilsBinaryLoader.cc:164)
==9561==    by 0x8049822: test_slicing(char const*, int, int, std::string const&) (slicer.cc:44)
==9561==    by 0x8049C4E: main (slicer.cc:107)
==9561== 
